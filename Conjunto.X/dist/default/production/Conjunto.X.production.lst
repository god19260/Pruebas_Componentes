

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 24 16:34:54 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217                           
   218                           	psect	idataBANK0
   219  05FC                     __pidataBANK0:
   220                           
   221                           ;initializer for _USART_Servo_3
   222  05FC  347F               	retlw	127
   223                           
   224                           ;initializer for _USART_Servo_2
   225  05FD  347F               	retlw	127
   226                           
   227                           ;initializer for _USART_Servo_1
   228  05FE  347F               	retlw	127
   229                           
   230                           ;initializer for _Valor_TMR0
   231  05FF  3464               	retlw	100
   232  0019                     _TXREG	set	25
   233  0009                     _PORTE	set	9
   234  0008                     _PORTD	set	8
   235  0007                     _PORTC	set	7
   236  0006                     _PORTB	set	6
   237  0005                     _PORTA	set	5
   238  000B                     _INTCON	set	11
   239  000C                     _PIR1bits	set	12
   240  001A                     _RCREG	set	26
   241  001E                     _ADRESH	set	30
   242  001F                     _ADCON0bits	set	31
   243  0001                     _TMR0	set	1
   244  00C4                     _CREN	set	196
   245  00C7                     _SPEN	set	199
   246  0065                     _RCIF	set	101
   247  0066                     _ADIF	set	102
   248  0042                     _RD2	set	66
   249  0041                     _RD1	set	65
   250  0040                     _RD0	set	64
   251  005A                     _T0IF	set	90
   252  0089                     _TRISE	set	137
   253  0088                     _TRISD	set	136
   254  0086                     _TRISB	set	134
   255  0085                     _TRISA	set	133
   256  009F                     _ADCON1bits	set	159
   257  0099                     _SPBRG	set	153
   258  008C                     _PIE1bits	set	140
   259  040B                     _PSA	set	1035
   260  040D                     _T0CS	set	1037
   261  040A                     _PS2	set	1034
   262  0409                     _PS1	set	1033
   263  0408                     _PS0	set	1032
   264  04C4                     _SYNC	set	1220
   265  04C5                     _TXEN	set	1221
   266  047E                     _IRCF2	set	1150
   267  047D                     _IRCF1	set	1149
   268  047C                     _IRCF0	set	1148
   269  0189                     _ANSELH	set	393
   270  0188                     _ANSEL	set	392
   271                           
   272                           	psect	strings
   273  0189                     __pstrings:
   274  0189                     stringtab:
   275  0189                     __stringtab:
   276                           
   277                           ;	String table - string pointers are 2 bytes each
   278  0189  1BFF               	btfsc	btemp+1,7
   279  018A  2993               	ljmp	stringcode
   280  018B  1383               	bcf	3,7
   281  018C  187F               	btfsc	btemp+1,0
   282  018D  1783               	bsf	3,7
   283  018E  0800               	movf	0,w
   284  018F  0A84               	incf	4,f
   285  0190  1903               	skipnz
   286  0191  0AFF               	incf	btemp+1,f
   287  0192  0008               	return
   288  0193                     stringcode:
   289  0193  087F               	movf	btemp+1,w
   290  0194  397F               	andlw	127
   291  0195  008A               	movwf	10
   292  0196  0804               	movf	4,w
   293  0197  0A84               	incf	4,f
   294  0198  1903               	skipnz
   295  0199  0AFF               	incf	btemp+1,f
   296  019A  0082               	movwf	2
   297  019B                     __stringbase:
   298  019B                     __end_of__stringtab:
   299                           
   300                           	psect	stringtext
   301  0200                     __pstringtext:
   302  0200                     STR_10:
   303  0200  3443               	retlw	67	;'C'
   304  0201  3461               	retlw	97	;'a'
   305  0202  346D               	retlw	109	;'m'
   306  0203  3462               	retlw	98	;'b'
   307  0204  3469               	retlw	105	;'i'
   308  0205  3461               	retlw	97	;'a'
   309  0206  3472               	retlw	114	;'r'
   310  0207  3420               	retlw	32	;' '
   311  0208  3463               	retlw	99	;'c'
   312  0209  346F               	retlw	111	;'o'
   313  020A  346E               	retlw	110	;'n'
   314  020B  3474               	retlw	116	;'t'
   315  020C  3472               	retlw	114	;'r'
   316  020D  346F               	retlw	111	;'o'
   317  020E  346C               	retlw	108	;'l'
   318  020F  343A               	retlw	58	;':'
   319  0210  3420               	retlw	32	;' '
   320  0211  3443               	retlw	67	;'C'
   321  0212  346F               	retlw	111	;'o'
   322  0213  346E               	retlw	110	;'n'
   323  0214  3474               	retlw	116	;'t'
   324  0215  3472               	retlw	114	;'r'
   325  0216  346F               	retlw	111	;'o'
   326  0217  346C               	retlw	108	;'l'
   327  0218  3420               	retlw	32	;' '
   328  0219  3463               	retlw	99	;'c'
   329  021A  346F               	retlw	111	;'o'
   330  021B  346E               	retlw	110	;'n'
   331  021C  3420               	retlw	32	;' '
   332  021D  3455               	retlw	85	;'U'
   333  021E  3453               	retlw	83	;'S'
   334  021F  3441               	retlw	65	;'A'
   335  0220  3452               	retlw	82	;'R'
   336  0221  3454               	retlw	84	;'T'
   337  0222  3420               	retlw	32	;' '
   338  0223  3428               	retlw	40	;'('
   339  0224  3435               	retlw	53	;'5'
   340  0225  3429               	retlw	41	;')'
   341  0226  342C               	retlw	44	;','
   342  0227  3420               	retlw	32	;' '
   343  0228  3443               	retlw	67	;'C'
   344  0229  346F               	retlw	111	;'o'
   345  022A  346E               	retlw	110	;'n'
   346  022B  3474               	retlw	116	;'t'
   347  022C  3472               	retlw	114	;'r'
   348  022D  346F               	retlw	111	;'o'
   349  022E  346C               	retlw	108	;'l'
   350  022F  3420               	retlw	32	;' '
   351  0230  3463               	retlw	99	;'c'
   352  0231  346F               	retlw	111	;'o'
   353  0232  346E               	retlw	110	;'n'
   354  0233  3420               	retlw	32	;' '
   355  0234  3441               	retlw	65	;'A'
   356  0235  3444               	retlw	68	;'D'
   357  0236  3443               	retlw	67	;'C'
   358  0237  3420               	retlw	32	;' '
   359  0238  3428               	retlw	40	;'('
   360  0239  3434               	retlw	52	;'4'
   361  023A  3429               	retlw	41	;')'
   362  023B  3420               	retlw	32	;' '
   363  023C  340D               	retlw	13
   364  023D  3400               	retlw	0
   365  023E                     STR_2:
   366  023E  3453               	retlw	83	;'S'
   367  023F  3445               	retlw	69	;'E'
   368  0240  3452               	retlw	82	;'R'
   369  0241  3456               	retlw	86	;'V'
   370  0242  344F               	retlw	79	;'O'
   371  0243  3420               	retlw	32	;' '
   372  0244  3431               	retlw	49	;'1'
   373  0245  343A               	retlw	58	;':'
   374  0246  3420               	retlw	32	;' '
   375  0247  3457               	retlw	87	;'W'
   376  0248  3420               	retlw	32	;' '
   377  0249  3449               	retlw	73	;'I'
   378  024A  346E               	retlw	110	;'n'
   379  024B  3463               	retlw	99	;'c'
   380  024C  3472               	retlw	114	;'r'
   381  024D  3465               	retlw	101	;'e'
   382  024E  346D               	retlw	109	;'m'
   383  024F  3465               	retlw	101	;'e'
   384  0250  346E               	retlw	110	;'n'
   385  0251  3474               	retlw	116	;'t'
   386  0252  3461               	retlw	97	;'a'
   387  0253  3472               	retlw	114	;'r'
   388  0254  342C               	retlw	44	;','
   389  0255  3420               	retlw	32	;' '
   390  0256  3451               	retlw	81	;'Q'
   391  0257  3420               	retlw	32	;' '
   392  0258  3444               	retlw	68	;'D'
   393  0259  3465               	retlw	101	;'e'
   394  025A  3463               	retlw	99	;'c'
   395  025B  3472               	retlw	114	;'r'
   396  025C  3465               	retlw	101	;'e'
   397  025D  346D               	retlw	109	;'m'
   398  025E  3465               	retlw	101	;'e'
   399  025F  346E               	retlw	110	;'n'
   400  0260  3474               	retlw	116	;'t'
   401  0261  3461               	retlw	97	;'a'
   402  0262  3472               	retlw	114	;'r'
   403  0263  3420               	retlw	32	;' '
   404  0264  340D               	retlw	13
   405  0265  3400               	retlw	0
   406  0266                     STR_4:
   407  0266  3453               	retlw	83	;'S'
   408  0267  3445               	retlw	69	;'E'
   409  0268  3452               	retlw	82	;'R'
   410  0269  3456               	retlw	86	;'V'
   411  026A  344F               	retlw	79	;'O'
   412  026B  3420               	retlw	32	;' '
   413  026C  3432               	retlw	50	;'2'
   414  026D  343A               	retlw	58	;':'
   415  026E  3420               	retlw	32	;' '
   416  026F  3457               	retlw	87	;'W'
   417  0270  3420               	retlw	32	;' '
   418  0271  3449               	retlw	73	;'I'
   419  0272  346E               	retlw	110	;'n'
   420  0273  3463               	retlw	99	;'c'
   421  0274  3472               	retlw	114	;'r'
   422  0275  3465               	retlw	101	;'e'
   423  0276  346D               	retlw	109	;'m'
   424  0277  3465               	retlw	101	;'e'
   425  0278  346E               	retlw	110	;'n'
   426  0279  3474               	retlw	116	;'t'
   427  027A  3461               	retlw	97	;'a'
   428  027B  3472               	retlw	114	;'r'
   429  027C  342C               	retlw	44	;','
   430  027D  3420               	retlw	32	;' '
   431  027E  3451               	retlw	81	;'Q'
   432  027F  3420               	retlw	32	;' '
   433  0280  3444               	retlw	68	;'D'
   434  0281  3465               	retlw	101	;'e'
   435  0282  3463               	retlw	99	;'c'
   436  0283  3472               	retlw	114	;'r'
   437  0284  3465               	retlw	101	;'e'
   438  0285  346D               	retlw	109	;'m'
   439  0286  3465               	retlw	101	;'e'
   440  0287  346E               	retlw	110	;'n'
   441  0288  3474               	retlw	116	;'t'
   442  0289  3461               	retlw	97	;'a'
   443  028A  3472               	retlw	114	;'r'
   444  028B  3420               	retlw	32	;' '
   445  028C  340D               	retlw	13
   446  028D  3400               	retlw	0
   447  028E                     STR_6:
   448  028E  3453               	retlw	83	;'S'
   449  028F  3445               	retlw	69	;'E'
   450  0290  3452               	retlw	82	;'R'
   451  0291  3456               	retlw	86	;'V'
   452  0292  344F               	retlw	79	;'O'
   453  0293  3420               	retlw	32	;' '
   454  0294  3433               	retlw	51	;'3'
   455  0295  343A               	retlw	58	;':'
   456  0296  3420               	retlw	32	;' '
   457  0297  3457               	retlw	87	;'W'
   458  0298  3420               	retlw	32	;' '
   459  0299  3449               	retlw	73	;'I'
   460  029A  346E               	retlw	110	;'n'
   461  029B  3463               	retlw	99	;'c'
   462  029C  3472               	retlw	114	;'r'
   463  029D  3465               	retlw	101	;'e'
   464  029E  346D               	retlw	109	;'m'
   465  029F  3465               	retlw	101	;'e'
   466  02A0  346E               	retlw	110	;'n'
   467  02A1  3474               	retlw	116	;'t'
   468  02A2  3461               	retlw	97	;'a'
   469  02A3  3472               	retlw	114	;'r'
   470  02A4  342C               	retlw	44	;','
   471  02A5  3420               	retlw	32	;' '
   472  02A6  3451               	retlw	81	;'Q'
   473  02A7  3420               	retlw	32	;' '
   474  02A8  3444               	retlw	68	;'D'
   475  02A9  3465               	retlw	101	;'e'
   476  02AA  3463               	retlw	99	;'c'
   477  02AB  3472               	retlw	114	;'r'
   478  02AC  3465               	retlw	101	;'e'
   479  02AD  346D               	retlw	109	;'m'
   480  02AE  3465               	retlw	101	;'e'
   481  02AF  346E               	retlw	110	;'n'
   482  02B0  3474               	retlw	116	;'t'
   483  02B1  3461               	retlw	97	;'a'
   484  02B2  3472               	retlw	114	;'r'
   485  02B3  3420               	retlw	32	;' '
   486  02B4  340D               	retlw	13
   487  02B5  3400               	retlw	0
   488  02B6                     STR_8:
   489  02B6  3453               	retlw	83	;'S'
   490  02B7  3445               	retlw	69	;'E'
   491  02B8  3452               	retlw	82	;'R'
   492  02B9  3456               	retlw	86	;'V'
   493  02BA  344F               	retlw	79	;'O'
   494  02BB  3420               	retlw	32	;' '
   495  02BC  3461               	retlw	97	;'a'
   496  02BD  3420               	retlw	32	;' '
   497  02BE  3473               	retlw	115	;'s'
   498  02BF  3465               	retlw	101	;'e'
   499  02C0  346C               	retlw	108	;'l'
   500  02C1  3465               	retlw	101	;'e'
   501  02C2  3463               	retlw	99	;'c'
   502  02C3  3463               	retlw	99	;'c'
   503  02C4  3469               	retlw	105	;'i'
   504  02C5  346F               	retlw	111	;'o'
   505  02C6  346E               	retlw	110	;'n'
   506  02C7  3461               	retlw	97	;'a'
   507  02C8  3472               	retlw	114	;'r'
   508  02C9  343A               	retlw	58	;':'
   509  02CA  3420               	retlw	32	;' '
   510  02CB  3428               	retlw	40	;'('
   511  02CC  3431               	retlw	49	;'1'
   512  02CD  3429               	retlw	41	;')'
   513  02CE  3420               	retlw	32	;' '
   514  02CF  3428               	retlw	40	;'('
   515  02D0  3432               	retlw	50	;'2'
   516  02D1  3429               	retlw	41	;')'
   517  02D2  3420               	retlw	32	;' '
   518  02D3  3428               	retlw	40	;'('
   519  02D4  3433               	retlw	51	;'3'
   520  02D5  3429               	retlw	41	;')'
   521  02D6  343A               	retlw	58	;':'
   522  02D7  3420               	retlw	32	;' '
   523  02D8  340D               	retlw	13
   524  02D9  3400               	retlw	0
   525  02DA                     STR_9:
   526  02DA  3443               	retlw	67	;'C'
   527  02DB  346F               	retlw	111	;'o'
   528  02DC  346E               	retlw	110	;'n'
   529  02DD  3474               	retlw	116	;'t'
   530  02DE  3472               	retlw	114	;'r'
   531  02DF  346F               	retlw	111	;'o'
   532  02E0  346C               	retlw	108	;'l'
   533  02E1  3420               	retlw	32	;' '
   534  02E2  3464               	retlw	100	;'d'
   535  02E3  3465               	retlw	101	;'e'
   536  02E4  3466               	retlw	102	;'f'
   537  02E5  3461               	retlw	97	;'a'
   538  02E6  3475               	retlw	117	;'u'
   539  02E7  346C               	retlw	108	;'l'
   540  02E8  3474               	retlw	116	;'t'
   541  02E9  3420               	retlw	32	;' '
   542  02EA  3465               	retlw	101	;'e'
   543  02EB  3473               	retlw	115	;'s'
   544  02EC  3420               	retlw	32	;' '
   545  02ED  3470               	retlw	112	;'p'
   546  02EE  346F               	retlw	111	;'o'
   547  02EF  3472               	retlw	114	;'r'
   548  02F0  3420               	retlw	32	;' '
   549  02F1  3441               	retlw	65	;'A'
   550  02F2  3444               	retlw	68	;'D'
   551  02F3  3443               	retlw	67	;'C'
   552  02F4  3420               	retlw	32	;' '
   553  02F5  340D               	retlw	13
   554  02F6  3400               	retlw	0
   555  023C                     
   556                           	psect	cinit
   557  0015                     start_initialization:	
   558                           ; #config settings
   559                           
   560  0015                     __initialization:
   561                           
   562                           ; Initialize objects allocated to BANK0
   563  0015  120A  118A  25FC  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   564  001A  00B9               	movwf	__pdataBANK0& (0+127)
   565  001B  120A  118A  25FD  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   566  0020  00BA               	movwf	(__pdataBANK0+1)& (0+127)
   567  0021  120A  118A  25FE  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   568  0026  00BB               	movwf	(__pdataBANK0+2)& (0+127)
   569  0027  120A  118A  25FF  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   570  002C  00BC               	movwf	(__pdataBANK0+3)& (0+127)
   571                           
   572                           ; Clear objects allocated to BANK0
   573  002D  01B3               	clrf	__pbssBANK0& (0+127)
   574  002E  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   575  002F  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   576  0030  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   577  0031  01B7               	clrf	(__pbssBANK0+4)& (0+127)
   578  0032  01B8               	clrf	(__pbssBANK0+5)& (0+127)
   579                           
   580                           ; Clear objects allocated to COMMON
   581  0033  01FA               	clrf	__pbssCOMMON& (0+127)
   582  0034  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   583  0035  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   584  0036  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   585  0037                     end_of_initialization:	
   586                           ;End of C runtime variable initialization code
   587                           
   588  0037                     __end_of__initialization:
   589  0037  0183               	clrf	3
   590  0038  120A  118A  2C76   	ljmp	_main	;jump to C main() function
   591                           
   592                           	psect	bssCOMMON
   593  007A                     __pbssCOMMON:
   594  007A                     _Control:
   595  007A                     	ds	1
   596  007B                     _USART_Receptor:
   597  007B                     	ds	1
   598  007C                     _USART_Num_Servo:
   599  007C                     	ds	1
   600  007D                     _Contador_Servos:
   601  007D                     	ds	1
   602                           
   603                           	psect	bssBANK0
   604  0033                     __pbssBANK0:
   605  0033                     _ADRESH_Servo_3:
   606  0033                     	ds	1
   607  0034                     _ADRESH_Servo_2:
   608  0034                     	ds	1
   609  0035                     _ADRESH_Servo_1:
   610  0035                     	ds	1
   611  0036                     _Valor_Servo_3:
   612  0036                     	ds	1
   613  0037                     _Valor_Servo_2:
   614  0037                     	ds	1
   615  0038                     _Valor_Servo_1:
   616  0038                     	ds	1
   617                           
   618                           	psect	dataBANK0
   619  0039                     __pdataBANK0:
   620  0039                     _USART_Servo_3:
   621  0039                     	ds	1
   622  003A                     _USART_Servo_2:
   623  003A                     	ds	1
   624  003B                     _USART_Servo_1:
   625  003B                     	ds	1
   626  003C                     _Valor_TMR0:
   627  003C                     	ds	1
   628                           
   629                           	psect	cstackCOMMON
   630  0070                     __pcstackCOMMON:
   631  0070                     ?_Menu:
   632  0070                     ?_USART_SERVOS:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_Regla_3:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_isr:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_main:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?i1_Texto:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?i1_Menu:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     i1Texto@texto:	
   651                           ; 1 bytes @ 0x0
   652                           
   653                           
   654                           ; 2 bytes @ 0x0
   655  0070                     	ds	2
   656  0072                     ??i1_Texto:
   657                           
   658                           ; 1 bytes @ 0x2
   659  0072                     	ds	2
   660  0074                     i1Texto@i:
   661                           
   662                           ; 1 bytes @ 0x4
   663  0074                     	ds	1
   664  0075                     ??_isr:
   665  0075                     ??i1_Menu:	
   666                           ; 1 bytes @ 0x5
   667                           
   668                           
   669                           ; 1 bytes @ 0x5
   670  0075                     	ds	5
   671                           
   672                           	psect	cstackBANK0
   673  0020                     __pcstackBANK0:
   674  0020                     ?_Texto:
   675  0020                     ??_USART_SERVOS:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0020                     ?___wmul:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0020                     Texto@texto:	
   682                           ; 2 bytes @ 0x0
   683                           
   684  0020                     ___wmul@multiplier:	
   685                           ; 2 bytes @ 0x0
   686                           
   687                           
   688                           ; 2 bytes @ 0x0
   689  0020                     	ds	2
   690  0022                     ??_Texto:
   691  0022                     ___wmul@multiplicand:	
   692                           ; 1 bytes @ 0x2
   693                           
   694                           
   695                           ; 2 bytes @ 0x2
   696  0022                     	ds	2
   697  0024                     ??___wmul:
   698  0024                     Texto@i:	
   699                           ; 1 bytes @ 0x4
   700                           
   701  0024                     ___wmul@product:	
   702                           ; 1 bytes @ 0x4
   703                           
   704                           
   705                           ; 2 bytes @ 0x4
   706  0024                     	ds	1
   707  0025                     ??_Menu:
   708                           
   709                           ; 1 bytes @ 0x5
   710  0025                     	ds	1
   711  0026                     ?___awdiv:
   712  0026                     ___awdiv@divisor:	
   713                           ; 2 bytes @ 0x6
   714                           
   715                           
   716                           ; 2 bytes @ 0x6
   717  0026                     	ds	2
   718  0028                     ___awdiv@dividend:
   719                           
   720                           ; 2 bytes @ 0x8
   721  0028                     	ds	2
   722  002A                     ??___awdiv:
   723                           
   724                           ; 1 bytes @ 0xA
   725  002A                     	ds	1
   726  002B                     ___awdiv@counter:
   727                           
   728                           ; 1 bytes @ 0xB
   729  002B                     	ds	1
   730  002C                     ___awdiv@sign:
   731                           
   732                           ; 1 bytes @ 0xC
   733  002C                     	ds	1
   734  002D                     ___awdiv@quotient:
   735                           
   736                           ; 2 bytes @ 0xD
   737  002D                     	ds	2
   738  002F                     ??_Regla_3:
   739                           
   740                           ; 1 bytes @ 0xF
   741  002F                     	ds	3
   742  0032                     ??_main:
   743                           
   744                           ; 1 bytes @ 0x12
   745  0032                     	ds	1
   746                           
   747                           	psect	maintext
   748  0476                     __pmaintext:	
   749 ;;
   750 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   751 ;;
   752 ;; *************** function _main *****************
   753 ;; Defined at:
   754 ;;		line 167 in file "Conjunto.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : B00/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0
   770 ;;      Temps:          0       1       0       0       0
   771 ;;      Totals:         0       1       0       0       0
   772 ;;Total ram usage:        1 bytes
   773 ;; Hardware stack levels required when called: 6
   774 ;; This function calls:
   775 ;;		_Menu
   776 ;;		_Regla_3
   777 ;;		_Texto
   778 ;;		_USART_SERVOS
   779 ;; This function is called by:
   780 ;;		Startup code after reset
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           
   785                           ;psect for function _main
   786  0476                     _main:
   787  0476                     l1300:	
   788                           ;incstack = 0
   789                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   790                           
   791                           
   792                           ;Conjunto.c: 171:     TRISA = 0xff;
   793  0476  1683               	bsf	3,5	;RP0=1, select bank1
   794  0477  1303               	bcf	3,6	;RP1=0, select bank1
   795  0478  160F               	bsf	15,4	;volatile
   796                           
   797                           ;Conjunto.c: 172:     TRISB = 0;
   798  0479  168F               	bsf	15,5	;volatile
   799                           
   800                           ;Conjunto.c: 173:     TRISD = 0;
   801  047A  170F               	bsf	15,6	;volatile
   802                           
   803                           ;Conjunto.c: 176: 
   804  047B  1698               	bsf	24,5	;volatile
   805                           
   806                           ;Conjunto.c: 177:     PORTA = 0;
   807  047C  1218               	bcf	24,4	;volatile
   808                           
   809                           ;Conjunto.c: 178:     PORTB = 0;
   810  047D  1283               	bcf	3,5	;RP0=0, select bank0
   811  047E  1303               	bcf	3,6	;RP1=0, select bank0
   812  047F  1798               	bsf	24,7	;volatile
   813                           
   814                           ;Conjunto.c: 181:     PORTE = 0;
   815  0480  1618               	bsf	24,4	;volatile
   816                           
   817                           ;Conjunto.c: 182:     Texto("Control default es por ADC \r");
   818  0481  1683               	bsf	3,5	;RP0=1, select bank1
   819  0482  1303               	bcf	3,6	;RP1=0, select bank1
   820  0483  168C               	bsf	12,5	;volatile
   821                           
   822                           ;Conjunto.c: 183:     Menu();
   823  0484  1283               	bcf	3,5	;RP0=0, select bank0
   824  0485  1303               	bcf	3,6	;RP1=0, select bank0
   825  0486  128C               	bcf	12,5	;volatile
   826  0487                     l1302:
   827                           
   828                           ;Conjunto.c: 184: 
   829  0487  300C               	movlw	12
   830  0488  1683               	bsf	3,5	;RP0=1, select bank1
   831  0489  1303               	bcf	3,6	;RP1=0, select bank1
   832  048A  0099               	movwf	25	;volatile
   833  048B                     l1304:
   834                           
   835                           ;Conjunto.c: 187:         USART_SERVOS();
   836  048B  1401               	bsf	1,0	;volatile
   837  048C                     l1306:
   838                           
   839                           ;Conjunto.c: 188:         Regla_3();
   840  048C  1481               	bsf	1,1	;volatile
   841  048D                     l1308:
   842                           
   843                           ;Conjunto.c: 189:     }
   844  048D  1501               	bsf	1,2	;volatile
   845  048E                     l1310:
   846                           
   847                           ;Conjunto.c: 190: }
   848  048E  1281               	bcf	1,5	;volatile
   849  048F                     l1312:
   850                           
   851                           ;Conjunto.c: 191: 
   852  048F  1181               	bcf	1,3	;volatile
   853                           
   854                           ;Conjunto.c: 192: 
   855  0490  30A8               	movlw	168
   856  0491  008B               	movwf	11	;volatile
   857                           
   858                           ;Conjunto.c: 193: 
   859  0492  1283               	bcf	3,5	;RP0=0, select bank0
   860  0493  1303               	bcf	3,6	;RP1=0, select bank0
   861  0494  083C               	movf	_Valor_TMR0,w
   862  0495  0081               	movwf	1	;volatile
   863  0496                     l1314:
   864                           
   865                           ;Conjunto.c: 196:         if (USART_Receptor == 'w'){
   866  0496  1683               	bsf	3,5	;RP0=1, select bank1
   867  0497  1303               	bcf	3,6	;RP1=0, select bank1
   868  0498  170C               	bsf	12,6	;volatile
   869  0499                     l1316:
   870                           
   871                           ;Conjunto.c: 197:             if(USART_Servo_1 <= 250){
   872  0499  1283               	bcf	3,5	;RP0=0, select bank0
   873  049A  1303               	bcf	3,6	;RP1=0, select bank0
   874  049B  130C               	bcf	12,6	;volatile
   875  049C                     l1318:
   876                           
   877                           ;Conjunto.c: 198:                 USART_Servo_1 = USART_Servo_1 + 5;
   878  049C  1683               	bsf	3,5	;RP0=1, select bank1
   879  049D  1303               	bcf	3,6	;RP1=0, select bank1
   880  049E  139F               	bcf	31,7	;volatile
   881  049F                     l1320:
   882                           
   883                           ;Conjunto.c: 199:             }
   884  049F  121F               	bcf	31,4	;volatile
   885  04A0                     l1322:
   886                           
   887                           ;Conjunto.c: 200:         } else if(USART_Receptor == 'q'){
   888  04A0  121F               	bcf	31,4	;volatile
   889  04A1                     l1324:
   890                           
   891                           ;Conjunto.c: 201:             if(USART_Servo_1 >= 5){
   892  04A1  1283               	bcf	3,5	;RP0=0, select bank0
   893  04A2  1303               	bcf	3,6	;RP1=0, select bank0
   894  04A3  131F               	bcf	31,6	;volatile
   895  04A4                     l1326:
   896                           
   897                           ;Conjunto.c: 202:                 USART_Servo_1 = USART_Servo_1 - 5;
   898  04A4  179F               	bsf	31,7	;volatile
   899  04A5                     l1328:
   900                           
   901                           ;Conjunto.c: 203:             }
   902  04A5  141F               	bsf	31,0	;volatile
   903                           
   904                           ;Conjunto.c: 204:         }
   905  04A6  3020               	movlw	32
   906  04A7  1283               	bcf	3,5	;RP0=0, select bank0
   907  04A8  1303               	bcf	3,6	;RP1=0, select bank0
   908  04A9  00B2               	movwf	??_main
   909  04AA                     u1017:
   910  04AA  0BB2               	decfsz	??_main,f
   911  04AB  2CAA               	goto	u1017
   912  04AC  0000               	nop
   913  04AD                     l1330:
   914                           
   915                           ;Conjunto.c: 205:     } else if(USART_Num_Servo == 2){
   916  04AD  1283               	bcf	3,5	;RP0=0, select bank0
   917  04AE  1303               	bcf	3,6	;RP1=0, select bank0
   918  04AF  149F               	bsf	31,1	;volatile
   919                           
   920                           ;Conjunto.c: 208:                 USART_Servo_2 = USART_Servo_2 + 5;
   921  04B0  3007               	movlw	7
   922  04B1  1683               	bsf	3,5	;RP0=1, select bank3
   923  04B2  1703               	bsf	3,6	;RP1=1, select bank3
   924  04B3  0088               	movwf	8	;volatile
   925  04B4                     l1332:
   926                           
   927                           ;Conjunto.c: 209:             }
   928  04B4  0189               	clrf	9	;volatile
   929  04B5                     l1334:
   930                           
   931                           ;Conjunto.c: 210:         } else if(USART_Receptor == 'q'){
   932  04B5  30FF               	movlw	255
   933  04B6  1683               	bsf	3,5	;RP0=1, select bank1
   934  04B7  1303               	bcf	3,6	;RP1=0, select bank1
   935  04B8  0085               	movwf	5	;volatile
   936                           
   937                           ;Conjunto.c: 211:             if(USART_Servo_2 >= 5){
   938  04B9  0186               	clrf	6	;volatile
   939                           
   940                           ;Conjunto.c: 212:                 USART_Servo_2 = USART_Servo_2 - 5;
   941  04BA  0188               	clrf	8	;volatile
   942                           
   943                           ;Conjunto.c: 213:             }
   944  04BB  0189               	clrf	9	;volatile
   945                           
   946                           ;Conjunto.c: 216:         if (USART_Receptor == 'w'){
   947  04BC  1283               	bcf	3,5	;RP0=0, select bank0
   948  04BD  1303               	bcf	3,6	;RP1=0, select bank0
   949  04BE  0185               	clrf	5	;volatile
   950                           
   951                           ;Conjunto.c: 217:             if(USART_Servo_3 <= 250){
   952  04BF  0186               	clrf	6	;volatile
   953                           
   954                           ;Conjunto.c: 218:                 USART_Servo_3 = USART_Servo_3 + 5;
   955  04C0  0187               	clrf	7	;volatile
   956                           
   957                           ;Conjunto.c: 219:             }
   958  04C1  0188               	clrf	8	;volatile
   959                           
   960                           ;Conjunto.c: 220:         } else if(USART_Receptor == 'q'){
   961  04C2  0189               	clrf	9	;volatile
   962  04C3                     l1336:
   963                           
   964                           ;Conjunto.c: 221:             if(USART_Servo_3 >= 5){
   965  04C3  30DA               	movlw	low (STR_9| (0+32768))
   966  04C4  00A0               	movwf	Texto@texto
   967  04C5  3082               	movlw	high (STR_9| (0+32768))
   968  04C6  00A1               	movwf	Texto@texto+1
   969  04C7  120A  118A  2548  120A  118A  	fcall	_Texto
   970  04CC                     l1338:
   971                           
   972                           ;Conjunto.c: 222:                 USART_Servo_3 = USART_Servo_3 - 5;
   973  04CC  120A  118A  25D2  120A  118A  	fcall	_Menu
   974  04D1                     l1340:
   975                           
   976                           ;Conjunto.c: 226:     USART_Receptor = 0;
   977  04D1  120A  118A  23EB  120A  118A  	fcall	_USART_SERVOS
   978  04D6                     l1342:
   979                           
   980                           ;Conjunto.c: 227: }
   981  04D6  120A  118A  22F7  120A  118A  	fcall	_Regla_3
   982  04DB  2CD1               	goto	l1340
   983  04DC  120A  118A  2812   	ljmp	start
   984  04DF                     __end_of_main:
   985                           
   986                           	psect	text1
   987  03EB                     __ptext1:	
   988 ;; *************** function _USART_SERVOS *****************
   989 ;; Defined at:
   990 ;;		line 233 in file "Conjunto.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, status,2, status,0
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0
  1006 ;;      Temps:          0       1       0       0       0
  1007 ;;      Totals:         0       1       0       0       0
  1008 ;;Total ram usage:        1 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; Hardware stack levels required when called: 4
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           
  1019                           ;psect for function _USART_SERVOS
  1020  03EB                     _USART_SERVOS:
  1021  03EB                     l1146:	
  1022                           ;incstack = 0
  1023                           ; Regs used in _USART_SERVOS: [wreg+status,2+status,0]
  1024                           
  1025                           
  1026                           ;Conjunto.c: 234:         Valor_Servo_1 = (USART_Servo_1-0)*(217-42)/(255-0)+42;
  1027  03EB  037C               	decf	_USART_Num_Servo,w
  1028  03EC  1D03               	btfss	3,2
  1029  03ED  2BEF               	goto	u671
  1030  03EE  2BF0               	goto	u670
  1031  03EF                     u671:
  1032  03EF  2C19               	goto	l1160
  1033  03F0                     u670:
  1034  03F0                     l1148:
  1035                           
  1036                           ;Conjunto.c: 235:         Valor_Servo_2 = (USART_Servo_2-0)*(217-42)/(255-0)+42;
  1037  03F0  3077               	movlw	119
  1038  03F1  067B               	xorwf	_USART_Receptor,w
  1039  03F2  1D03               	btfss	3,2
  1040  03F3  2BF5               	goto	u681
  1041  03F4  2BF6               	goto	u680
  1042  03F5                     u681:
  1043  03F5  2C05               	goto	l1154
  1044  03F6                     u680:
  1045  03F6                     l1150:
  1046                           
  1047                           ;Conjunto.c: 236:         Valor_Servo_3 = (USART_Servo_3-0)*(217-42)/(255-0)+42;
  1048  03F6  30FB               	movlw	251
  1049  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1050  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1051  03F9  023B               	subwf	_USART_Servo_1,w
  1052  03FA  1803               	skipnc
  1053  03FB  2BFD               	goto	u691
  1054  03FC  2BFE               	goto	u690
  1055  03FD                     u691:
  1056  03FD  2C74               	goto	l1188
  1057  03FE                     u690:
  1058  03FE                     l1152:
  1059                           
  1060                           ;Conjunto.c: 237:     }
  1061  03FE  083B               	movf	_USART_Servo_1,w
  1062  03FF  3E05               	addlw	5
  1063  0400  00A0               	movwf	??_USART_SERVOS
  1064  0401  0820               	movf	??_USART_SERVOS,w
  1065  0402  00BB               	movwf	_USART_Servo_1
  1066  0403  2C74               	goto	l1188
  1067  0404                     l163:	
  1068                           ;Conjunto.c: 238: 
  1069                           
  1070                           
  1071                           ;Conjunto.c: 239: }
  1072  0404  2C74               	goto	l1188
  1073  0405                     l1154:
  1074  0405  3071               	movlw	113
  1075  0406  067B               	xorwf	_USART_Receptor,w
  1076  0407  1D03               	btfss	3,2
  1077  0408  2C0A               	goto	u701
  1078  0409  2C0B               	goto	u700
  1079  040A                     u701:
  1080  040A  2C74               	goto	l1188
  1081  040B                     u700:
  1082  040B                     l1156:
  1083                           
  1084                           ;Conjunto.c: 240: void Texto(char texto[]){
  1085  040B  3005               	movlw	5
  1086  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1087  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1088  040E  023B               	subwf	_USART_Servo_1,w
  1089  040F  1C03               	skipc
  1090  0410  2C12               	goto	u711
  1091  0411  2C13               	goto	u710
  1092  0412                     u711:
  1093  0412  2C04               	goto	l163
  1094  0413                     u710:
  1095  0413                     l1158:
  1096                           
  1097                           ;Conjunto.c: 241:     char i = 0;
  1098  0413  083B               	movf	_USART_Servo_1,w
  1099  0414  3EFB               	addlw	251
  1100  0415  00A0               	movwf	??_USART_SERVOS
  1101  0416  0820               	movf	??_USART_SERVOS,w
  1102  0417  00BB               	movwf	_USART_Servo_1
  1103  0418  2C74               	goto	l1188
  1104  0419                     l1160:
  1105  0419  3002               	movlw	2
  1106  041A  067C               	xorwf	_USART_Num_Servo,w
  1107  041B  1D03               	btfss	3,2
  1108  041C  2C1E               	goto	u721
  1109  041D  2C1F               	goto	u720
  1110  041E                     u721:
  1111  041E  2C47               	goto	l1174
  1112  041F                     u720:
  1113  041F                     l1162:
  1114                           
  1115                           ;Conjunto.c: 245:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1116  041F  3077               	movlw	119
  1117  0420  067B               	xorwf	_USART_Receptor,w
  1118  0421  1D03               	btfss	3,2
  1119  0422  2C24               	goto	u731
  1120  0423  2C25               	goto	u730
  1121  0424                     u731:
  1122  0424  2C33               	goto	l1168
  1123  0425                     u730:
  1124  0425                     l1164:
  1125                           
  1126                           ;Conjunto.c: 246:     }
  1127  0425  30FB               	movlw	251
  1128  0426  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0427  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0428  023A               	subwf	_USART_Servo_2,w
  1131  0429  1803               	skipnc
  1132  042A  2C2C               	goto	u741
  1133  042B  2C2D               	goto	u740
  1134  042C                     u741:
  1135  042C  2C74               	goto	l1188
  1136  042D                     u740:
  1137  042D                     l1166:
  1138                           
  1139                           ;Conjunto.c: 247: }
  1140  042D  083A               	movf	_USART_Servo_2,w
  1141  042E  3E05               	addlw	5
  1142  042F  00A0               	movwf	??_USART_SERVOS
  1143  0430  0820               	movf	??_USART_SERVOS,w
  1144  0431  00BA               	movwf	_USART_Servo_2
  1145  0432  2C74               	goto	l1188
  1146  0433                     l1168:
  1147  0433  3071               	movlw	113
  1148  0434  067B               	xorwf	_USART_Receptor,w
  1149  0435  1D03               	btfss	3,2
  1150  0436  2C38               	goto	u751
  1151  0437  2C39               	goto	u750
  1152  0438                     u751:
  1153  0438  2C74               	goto	l1188
  1154  0439                     u750:
  1155  0439                     l1170:
  1156                           
  1157                           ;Conjunto.c: 250:     Texto("\r");
  1158  0439  3005               	movlw	5
  1159  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1160  043B  1303               	bcf	3,6	;RP1=0, select bank0
  1161  043C  023A               	subwf	_USART_Servo_2,w
  1162  043D  1C03               	skipc
  1163  043E  2C40               	goto	u761
  1164  043F  2C41               	goto	u760
  1165  0440                     u761:
  1166  0440  2C04               	goto	l163
  1167  0441                     u760:
  1168  0441                     l1172:
  1169                           
  1170                           ;Conjunto.c: 251: }
  1171  0441  083A               	movf	_USART_Servo_2,w
  1172  0442  3EFB               	addlw	251
  1173  0443  00A0               	movwf	??_USART_SERVOS
  1174  0444  0820               	movf	??_USART_SERVOS,w
  1175  0445  00BA               	movwf	_USART_Servo_2
  1176  0446  2C74               	goto	l1188
  1177  0447                     l1174:
  1178  0447  3003               	movlw	3
  1179  0448  067C               	xorwf	_USART_Num_Servo,w
  1180  0449  1D03               	btfss	3,2
  1181  044A  2C4C               	goto	u771
  1182  044B  2C4D               	goto	u770
  1183  044C                     u771:
  1184  044C  2C74               	goto	l1188
  1185  044D                     u770:
  1186  044D                     l1176:
  1187  044D  3077               	movlw	119
  1188  044E  067B               	xorwf	_USART_Receptor,w
  1189  044F  1D03               	btfss	3,2
  1190  0450  2C52               	goto	u781
  1191  0451  2C53               	goto	u780
  1192  0452                     u781:
  1193  0452  2C61               	goto	l1182
  1194  0453                     u780:
  1195  0453                     l1178:
  1196  0453  30FB               	movlw	251
  1197  0454  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0455  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0456  0239               	subwf	_USART_Servo_3,w
  1200  0457  1803               	skipnc
  1201  0458  2C5A               	goto	u791
  1202  0459  2C5B               	goto	u790
  1203  045A                     u791:
  1204  045A  2C74               	goto	l1188
  1205  045B                     u790:
  1206  045B                     l1180:
  1207  045B  0839               	movf	_USART_Servo_3,w
  1208  045C  3E05               	addlw	5
  1209  045D  00A0               	movwf	??_USART_SERVOS
  1210  045E  0820               	movf	??_USART_SERVOS,w
  1211  045F  00B9               	movwf	_USART_Servo_3
  1212  0460  2C74               	goto	l1188
  1213  0461                     l1182:
  1214  0461  3071               	movlw	113
  1215  0462  067B               	xorwf	_USART_Receptor,w
  1216  0463  1D03               	btfss	3,2
  1217  0464  2C66               	goto	u801
  1218  0465  2C67               	goto	u800
  1219  0466                     u801:
  1220  0466  2C74               	goto	l1188
  1221  0467                     u800:
  1222  0467                     l1184:
  1223  0467  3005               	movlw	5
  1224  0468  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0469  1303               	bcf	3,6	;RP1=0, select bank0
  1226  046A  0239               	subwf	_USART_Servo_3,w
  1227  046B  1C03               	skipc
  1228  046C  2C6E               	goto	u811
  1229  046D  2C6F               	goto	u810
  1230  046E                     u811:
  1231  046E  2C04               	goto	l163
  1232  046F                     u810:
  1233  046F                     l1186:
  1234  046F  0839               	movf	_USART_Servo_3,w
  1235  0470  3EFB               	addlw	251
  1236  0471  00A0               	movwf	??_USART_SERVOS
  1237  0472  0820               	movf	??_USART_SERVOS,w
  1238  0473  00B9               	movwf	_USART_Servo_3
  1239  0474                     l1188:
  1240  0474  01FB               	clrf	_USART_Receptor
  1241  0475                     l181:
  1242  0475  0008               	return
  1243  0476                     __end_of_USART_SERVOS:
  1244                           
  1245                           	psect	text2
  1246  02F7                     __ptext2:	
  1247 ;; *************** function _Regla_3 *****************
  1248 ;; Defined at:
  1249 ;;		line 267 in file "Conjunto.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, pclath, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1263 ;;      Params:         0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0
  1265 ;;      Temps:          0       3       0       0       0
  1266 ;;      Totals:         0       3       0       0       0
  1267 ;;Total ram usage:        3 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 5
  1270 ;; This function calls:
  1271 ;;		___awdiv
  1272 ;;		___wmul
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function _Regla_3
  1280  02F7                     _Regla_3:
  1281  02F7                     l1190:	
  1282                           ;incstack = 0
  1283                           ; Regs used in _Regla_3: [wreg+status,2+status,0+pclath+cstack]
  1284                           
  1285  02F7  087A               	movf	_Control,w
  1286  02F8  1D03               	btfss	3,2
  1287  02F9  2AFB               	goto	u821
  1288  02FA  2AFC               	goto	u820
  1289  02FB                     u821:
  1290  02FB  2B71               	goto	l1194
  1291  02FC                     u820:
  1292  02FC                     l1192:
  1293  02FC  30FF               	movlw	255
  1294  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1295  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1296  02FF  00A6               	movwf	___awdiv@divisor
  1297  0300  3000               	movlw	0
  1298  0301  00A7               	movwf	___awdiv@divisor+1
  1299  0302  0835               	movf	_ADRESH_Servo_1,w
  1300  0303  00AF               	movwf	??_Regla_3
  1301  0304  01B0               	clrf	??_Regla_3+1
  1302  0305  082F               	movf	??_Regla_3,w
  1303  0306  00A0               	movwf	___wmul@multiplier
  1304  0307  0830               	movf	??_Regla_3+1,w
  1305  0308  00A1               	movwf	___wmul@multiplier+1
  1306  0309  30AF               	movlw	175
  1307  030A  00A2               	movwf	___wmul@multiplicand
  1308  030B  3000               	movlw	0
  1309  030C  00A3               	movwf	___wmul@multiplicand+1
  1310  030D  120A  118A  25AB  120A  118A  	fcall	___wmul
  1311  0312  1283               	bcf	3,5	;RP0=0, select bank0
  1312  0313  1303               	bcf	3,6	;RP1=0, select bank0
  1313  0314  0821               	movf	?___wmul+1,w
  1314  0315  00A9               	movwf	___awdiv@dividend+1
  1315  0316  0820               	movf	?___wmul,w
  1316  0317  00A8               	movwf	___awdiv@dividend
  1317  0318  120A  118A  24DF  120A  118A  	fcall	___awdiv
  1318  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1319  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1320  031F  0826               	movf	?___awdiv,w
  1321  0320  3E2A               	addlw	42
  1322  0321  00B1               	movwf	??_Regla_3+2
  1323  0322  0831               	movf	??_Regla_3+2,w
  1324  0323  00B8               	movwf	_Valor_Servo_1
  1325  0324  30FF               	movlw	255
  1326  0325  00A6               	movwf	___awdiv@divisor
  1327  0326  3000               	movlw	0
  1328  0327  00A7               	movwf	___awdiv@divisor+1
  1329  0328  0834               	movf	_ADRESH_Servo_2,w
  1330  0329  00AF               	movwf	??_Regla_3
  1331  032A  01B0               	clrf	??_Regla_3+1
  1332  032B  082F               	movf	??_Regla_3,w
  1333  032C  00A0               	movwf	___wmul@multiplier
  1334  032D  0830               	movf	??_Regla_3+1,w
  1335  032E  00A1               	movwf	___wmul@multiplier+1
  1336  032F  30AF               	movlw	175
  1337  0330  00A2               	movwf	___wmul@multiplicand
  1338  0331  3000               	movlw	0
  1339  0332  00A3               	movwf	___wmul@multiplicand+1
  1340  0333  120A  118A  25AB  120A  118A  	fcall	___wmul
  1341  0338  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0339  1303               	bcf	3,6	;RP1=0, select bank0
  1343  033A  0821               	movf	?___wmul+1,w
  1344  033B  00A9               	movwf	___awdiv@dividend+1
  1345  033C  0820               	movf	?___wmul,w
  1346  033D  00A8               	movwf	___awdiv@dividend
  1347  033E  120A  118A  24DF  120A  118A  	fcall	___awdiv
  1348  0343  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0344  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0345  0826               	movf	?___awdiv,w
  1351  0346  3E2A               	addlw	42
  1352  0347  00B1               	movwf	??_Regla_3+2
  1353  0348  0831               	movf	??_Regla_3+2,w
  1354  0349  00B7               	movwf	_Valor_Servo_2
  1355  034A  30FF               	movlw	255
  1356  034B  00A6               	movwf	___awdiv@divisor
  1357  034C  3000               	movlw	0
  1358  034D  00A7               	movwf	___awdiv@divisor+1
  1359  034E  0833               	movf	_ADRESH_Servo_3,w
  1360  034F  00AF               	movwf	??_Regla_3
  1361  0350  01B0               	clrf	??_Regla_3+1
  1362  0351  082F               	movf	??_Regla_3,w
  1363  0352  00A0               	movwf	___wmul@multiplier
  1364  0353  0830               	movf	??_Regla_3+1,w
  1365  0354  00A1               	movwf	___wmul@multiplier+1
  1366  0355  30AF               	movlw	175
  1367  0356  00A2               	movwf	___wmul@multiplicand
  1368  0357  3000               	movlw	0
  1369  0358  00A3               	movwf	___wmul@multiplicand+1
  1370  0359  120A  118A  25AB  120A  118A  	fcall	___wmul
  1371  035E  1283               	bcf	3,5	;RP0=0, select bank0
  1372  035F  1303               	bcf	3,6	;RP1=0, select bank0
  1373  0360  0821               	movf	?___wmul+1,w
  1374  0361  00A9               	movwf	___awdiv@dividend+1
  1375  0362  0820               	movf	?___wmul,w
  1376  0363  00A8               	movwf	___awdiv@dividend
  1377  0364  120A  118A  24DF  120A  118A  	fcall	___awdiv
  1378  0369  1283               	bcf	3,5	;RP0=0, select bank0
  1379  036A  1303               	bcf	3,6	;RP1=0, select bank0
  1380  036B  0826               	movf	?___awdiv,w
  1381  036C  3E2A               	addlw	42
  1382  036D  00B1               	movwf	??_Regla_3+2
  1383  036E  0831               	movf	??_Regla_3+2,w
  1384  036F  00B6               	movwf	_Valor_Servo_3
  1385  0370  2BEA               	goto	l187
  1386  0371                     l1194:
  1387  0371  037A               	decf	_Control,w
  1388  0372  1D03               	btfss	3,2
  1389  0373  2B75               	goto	u831
  1390  0374  2B76               	goto	u830
  1391  0375                     u831:
  1392  0375  2BEA               	goto	l187
  1393  0376                     u830:
  1394  0376                     l1196:
  1395  0376  30FF               	movlw	255
  1396  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0379  00A6               	movwf	___awdiv@divisor
  1399  037A  3000               	movlw	0
  1400  037B  00A7               	movwf	___awdiv@divisor+1
  1401  037C  083B               	movf	_USART_Servo_1,w
  1402  037D  00AF               	movwf	??_Regla_3
  1403  037E  01B0               	clrf	??_Regla_3+1
  1404  037F  082F               	movf	??_Regla_3,w
  1405  0380  00A0               	movwf	___wmul@multiplier
  1406  0381  0830               	movf	??_Regla_3+1,w
  1407  0382  00A1               	movwf	___wmul@multiplier+1
  1408  0383  30AF               	movlw	175
  1409  0384  00A2               	movwf	___wmul@multiplicand
  1410  0385  3000               	movlw	0
  1411  0386  00A3               	movwf	___wmul@multiplicand+1
  1412  0387  120A  118A  25AB  120A  118A  	fcall	___wmul
  1413  038C  1283               	bcf	3,5	;RP0=0, select bank0
  1414  038D  1303               	bcf	3,6	;RP1=0, select bank0
  1415  038E  0821               	movf	?___wmul+1,w
  1416  038F  00A9               	movwf	___awdiv@dividend+1
  1417  0390  0820               	movf	?___wmul,w
  1418  0391  00A8               	movwf	___awdiv@dividend
  1419  0392  120A  118A  24DF  120A  118A  	fcall	___awdiv
  1420  0397  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0398  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0399  0826               	movf	?___awdiv,w
  1423  039A  3E2A               	addlw	42
  1424  039B  00B1               	movwf	??_Regla_3+2
  1425  039C  0831               	movf	??_Regla_3+2,w
  1426  039D  00B8               	movwf	_Valor_Servo_1
  1427  039E  30FF               	movlw	255
  1428  039F  00A6               	movwf	___awdiv@divisor
  1429  03A0  3000               	movlw	0
  1430  03A1  00A7               	movwf	___awdiv@divisor+1
  1431  03A2  083A               	movf	_USART_Servo_2,w
  1432  03A3  00AF               	movwf	??_Regla_3
  1433  03A4  01B0               	clrf	??_Regla_3+1
  1434  03A5  082F               	movf	??_Regla_3,w
  1435  03A6  00A0               	movwf	___wmul@multiplier
  1436  03A7  0830               	movf	??_Regla_3+1,w
  1437  03A8  00A1               	movwf	___wmul@multiplier+1
  1438  03A9  30AF               	movlw	175
  1439  03AA  00A2               	movwf	___wmul@multiplicand
  1440  03AB  3000               	movlw	0
  1441  03AC  00A3               	movwf	___wmul@multiplicand+1
  1442  03AD  120A  118A  25AB  120A  118A  	fcall	___wmul
  1443  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1444  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1445  03B4  0821               	movf	?___wmul+1,w
  1446  03B5  00A9               	movwf	___awdiv@dividend+1
  1447  03B6  0820               	movf	?___wmul,w
  1448  03B7  00A8               	movwf	___awdiv@dividend
  1449  03B8  120A  118A  24DF  120A  118A  	fcall	___awdiv
  1450  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1451  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1452  03BF  0826               	movf	?___awdiv,w
  1453  03C0  3E2A               	addlw	42
  1454  03C1  00B1               	movwf	??_Regla_3+2
  1455  03C2  0831               	movf	??_Regla_3+2,w
  1456  03C3  00B7               	movwf	_Valor_Servo_2
  1457  03C4  30FF               	movlw	255
  1458  03C5  00A6               	movwf	___awdiv@divisor
  1459  03C6  3000               	movlw	0
  1460  03C7  00A7               	movwf	___awdiv@divisor+1
  1461  03C8  0839               	movf	_USART_Servo_3,w
  1462  03C9  00AF               	movwf	??_Regla_3
  1463  03CA  01B0               	clrf	??_Regla_3+1
  1464  03CB  082F               	movf	??_Regla_3,w
  1465  03CC  00A0               	movwf	___wmul@multiplier
  1466  03CD  0830               	movf	??_Regla_3+1,w
  1467  03CE  00A1               	movwf	___wmul@multiplier+1
  1468  03CF  30AF               	movlw	175
  1469  03D0  00A2               	movwf	___wmul@multiplicand
  1470  03D1  3000               	movlw	0
  1471  03D2  00A3               	movwf	___wmul@multiplicand+1
  1472  03D3  120A  118A  25AB  120A  118A  	fcall	___wmul
  1473  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1474  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1475  03DA  0821               	movf	?___wmul+1,w
  1476  03DB  00A9               	movwf	___awdiv@dividend+1
  1477  03DC  0820               	movf	?___wmul,w
  1478  03DD  00A8               	movwf	___awdiv@dividend
  1479  03DE  120A  118A  24DF  120A  118A  	fcall	___awdiv
  1480  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1481  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1482  03E5  0826               	movf	?___awdiv,w
  1483  03E6  3E2A               	addlw	42
  1484  03E7  00B1               	movwf	??_Regla_3+2
  1485  03E8  0831               	movf	??_Regla_3+2,w
  1486  03E9  00B6               	movwf	_Valor_Servo_3
  1487  03EA                     l187:
  1488  03EA  0008               	return
  1489  03EB                     __end_of_Regla_3:
  1490                           
  1491                           	psect	text3
  1492  05AB                     __ptext3:	
  1493 ;; *************** function ___wmul *****************
  1494 ;; Defined at:
  1495 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1498 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  product         2    4[BANK0 ] unsigned int 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  2    0[BANK0 ] unsigned int 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         0       4       0       0       0
  1511 ;;      Locals:         0       2       0       0       0
  1512 ;;      Temps:          0       0       0       0       0
  1513 ;;      Totals:         0       6       0       0       0
  1514 ;;Total ram usage:        6 bytes
  1515 ;; Hardware stack levels used: 1
  1516 ;; Hardware stack levels required when called: 4
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_Regla_3
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function ___wmul
  1526  05AB                     ___wmul:
  1527  05AB                     l1076:	
  1528                           ;incstack = 0
  1529                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1530                           
  1531  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1532  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1533  05AD  01A4               	clrf	___wmul@product
  1534  05AE  01A5               	clrf	___wmul@product+1
  1535  05AF                     l1078:
  1536  05AF  1C20               	btfss	___wmul@multiplier,0
  1537  05B0  2DB2               	goto	u521
  1538  05B1  2DB3               	goto	u520
  1539  05B2                     u521:
  1540  05B2  2DB9               	goto	l282
  1541  05B3                     u520:
  1542  05B3                     l1080:
  1543  05B3  0822               	movf	___wmul@multiplicand,w
  1544  05B4  07A4               	addwf	___wmul@product,f
  1545  05B5  1803               	skipnc
  1546  05B6  0AA5               	incf	___wmul@product+1,f
  1547  05B7  0823               	movf	___wmul@multiplicand+1,w
  1548  05B8  07A5               	addwf	___wmul@product+1,f
  1549  05B9                     l282:
  1550  05B9  3001               	movlw	1
  1551  05BA                     u535:
  1552  05BA  1003               	clrc
  1553  05BB  0DA2               	rlf	___wmul@multiplicand,f
  1554  05BC  0DA3               	rlf	___wmul@multiplicand+1,f
  1555  05BD  3EFF               	addlw	-1
  1556  05BE  1D03               	skipz
  1557  05BF  2DBA               	goto	u535
  1558  05C0                     l1082:
  1559  05C0  3001               	movlw	1
  1560  05C1                     u545:
  1561  05C1  1003               	clrc
  1562  05C2  0CA1               	rrf	___wmul@multiplier+1,f
  1563  05C3  0CA0               	rrf	___wmul@multiplier,f
  1564  05C4  3EFF               	addlw	-1
  1565  05C5  1D03               	skipz
  1566  05C6  2DC1               	goto	u545
  1567  05C7                     l1084:
  1568  05C7  0820               	movf	___wmul@multiplier,w
  1569  05C8  0421               	iorwf	___wmul@multiplier+1,w
  1570  05C9  1D03               	btfss	3,2
  1571  05CA  2DCC               	goto	u551
  1572  05CB  2DCD               	goto	u550
  1573  05CC                     u551:
  1574  05CC  2DAF               	goto	l1078
  1575  05CD                     u550:
  1576  05CD                     l1086:
  1577  05CD  0825               	movf	___wmul@product+1,w
  1578  05CE  00A1               	movwf	?___wmul+1
  1579  05CF  0824               	movf	___wmul@product,w
  1580  05D0  00A0               	movwf	?___wmul
  1581  05D1                     l284:
  1582  05D1  0008               	return
  1583  05D2                     __end_of___wmul:
  1584                           
  1585                           	psect	text4
  1586  04DF                     __ptext4:	
  1587 ;; *************** function ___awdiv *****************
  1588 ;; Defined at:
  1589 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  divisor         2    6[BANK0 ] int 
  1592 ;;  dividend        2    8[BANK0 ] int 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  quotient        2   13[BANK0 ] int 
  1595 ;;  sign            1   12[BANK0 ] unsigned char 
  1596 ;;  counter         1   11[BANK0 ] unsigned char 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  2    6[BANK0 ] int 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       4       0       0       0
  1607 ;;      Locals:         0       4       0       0       0
  1608 ;;      Temps:          0       1       0       0       0
  1609 ;;      Totals:         0       9       0       0       0
  1610 ;;Total ram usage:        9 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 4
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_Regla_3
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function ___awdiv
  1622  04DF                     ___awdiv:
  1623  04DF                     l1090:	
  1624                           ;incstack = 0
  1625                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1626                           
  1627  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  1628  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  1629  04E1  01AC               	clrf	___awdiv@sign
  1630  04E2                     l1092:
  1631  04E2  1FA7               	btfss	___awdiv@divisor+1,7
  1632  04E3  2CE5               	goto	u561
  1633  04E4  2CE6               	goto	u560
  1634  04E5                     u561:
  1635  04E5  2CED               	goto	l1098
  1636  04E6                     u560:
  1637  04E6                     l1094:
  1638  04E6  09A6               	comf	___awdiv@divisor,f
  1639  04E7  09A7               	comf	___awdiv@divisor+1,f
  1640  04E8  0AA6               	incf	___awdiv@divisor,f
  1641  04E9  1903               	skipnz
  1642  04EA  0AA7               	incf	___awdiv@divisor+1,f
  1643  04EB                     l1096:
  1644  04EB  01AC               	clrf	___awdiv@sign
  1645  04EC  0AAC               	incf	___awdiv@sign,f
  1646  04ED                     l1098:
  1647  04ED  1FA9               	btfss	___awdiv@dividend+1,7
  1648  04EE  2CF0               	goto	u571
  1649  04EF  2CF1               	goto	u570
  1650  04F0                     u571:
  1651  04F0  2CFA               	goto	l1104
  1652  04F1                     u570:
  1653  04F1                     l1100:
  1654  04F1  09A8               	comf	___awdiv@dividend,f
  1655  04F2  09A9               	comf	___awdiv@dividend+1,f
  1656  04F3  0AA8               	incf	___awdiv@dividend,f
  1657  04F4  1903               	skipnz
  1658  04F5  0AA9               	incf	___awdiv@dividend+1,f
  1659  04F6                     l1102:
  1660  04F6  3001               	movlw	1
  1661  04F7  00AA               	movwf	??___awdiv
  1662  04F8  082A               	movf	??___awdiv,w
  1663  04F9  06AC               	xorwf	___awdiv@sign,f
  1664  04FA                     l1104:
  1665  04FA  01AD               	clrf	___awdiv@quotient
  1666  04FB  01AE               	clrf	___awdiv@quotient+1
  1667  04FC                     l1106:
  1668  04FC  0826               	movf	___awdiv@divisor,w
  1669  04FD  0427               	iorwf	___awdiv@divisor+1,w
  1670  04FE  1903               	btfsc	3,2
  1671  04FF  2D01               	goto	u581
  1672  0500  2D02               	goto	u580
  1673  0501                     u581:
  1674  0501  2D39               	goto	l1126
  1675  0502                     u580:
  1676  0502                     l1108:
  1677  0502  01AB               	clrf	___awdiv@counter
  1678  0503  0AAB               	incf	___awdiv@counter,f
  1679  0504  2D10               	goto	l1114
  1680  0505                     l1110:
  1681  0505  3001               	movlw	1
  1682  0506                     u595:
  1683  0506  1003               	clrc
  1684  0507  0DA6               	rlf	___awdiv@divisor,f
  1685  0508  0DA7               	rlf	___awdiv@divisor+1,f
  1686  0509  3EFF               	addlw	-1
  1687  050A  1D03               	skipz
  1688  050B  2D06               	goto	u595
  1689  050C                     l1112:
  1690  050C  3001               	movlw	1
  1691  050D  00AA               	movwf	??___awdiv
  1692  050E  082A               	movf	??___awdiv,w
  1693  050F  07AB               	addwf	___awdiv@counter,f
  1694  0510                     l1114:
  1695  0510  1FA7               	btfss	___awdiv@divisor+1,7
  1696  0511  2D13               	goto	u601
  1697  0512  2D14               	goto	u600
  1698  0513                     u601:
  1699  0513  2D05               	goto	l1110
  1700  0514                     u600:
  1701  0514                     l1116:
  1702  0514  3001               	movlw	1
  1703  0515                     u615:
  1704  0515  1003               	clrc
  1705  0516  0DAD               	rlf	___awdiv@quotient,f
  1706  0517  0DAE               	rlf	___awdiv@quotient+1,f
  1707  0518  3EFF               	addlw	-1
  1708  0519  1D03               	skipz
  1709  051A  2D15               	goto	u615
  1710  051B  0827               	movf	___awdiv@divisor+1,w
  1711  051C  0229               	subwf	___awdiv@dividend+1,w
  1712  051D  1D03               	skipz
  1713  051E  2D21               	goto	u625
  1714  051F  0826               	movf	___awdiv@divisor,w
  1715  0520  0228               	subwf	___awdiv@dividend,w
  1716  0521                     u625:
  1717  0521  1C03               	skipc
  1718  0522  2D24               	goto	u621
  1719  0523  2D25               	goto	u620
  1720  0524                     u621:
  1721  0524  2D2C               	goto	l1122
  1722  0525                     u620:
  1723  0525                     l1118:
  1724  0525  0826               	movf	___awdiv@divisor,w
  1725  0526  02A8               	subwf	___awdiv@dividend,f
  1726  0527  0827               	movf	___awdiv@divisor+1,w
  1727  0528  1C03               	skipc
  1728  0529  03A9               	decf	___awdiv@dividend+1,f
  1729  052A  02A9               	subwf	___awdiv@dividend+1,f
  1730  052B                     l1120:
  1731  052B  142D               	bsf	___awdiv@quotient,0
  1732  052C                     l1122:
  1733  052C  3001               	movlw	1
  1734  052D                     u635:
  1735  052D  1003               	clrc
  1736  052E  0CA7               	rrf	___awdiv@divisor+1,f
  1737  052F  0CA6               	rrf	___awdiv@divisor,f
  1738  0530  3EFF               	addlw	-1
  1739  0531  1D03               	skipz
  1740  0532  2D2D               	goto	u635
  1741  0533                     l1124:
  1742  0533  3001               	movlw	1
  1743  0534  02AB               	subwf	___awdiv@counter,f
  1744  0535  1D03               	btfss	3,2
  1745  0536  2D38               	goto	u641
  1746  0537  2D39               	goto	u640
  1747  0538                     u641:
  1748  0538  2D14               	goto	l1116
  1749  0539                     u640:
  1750  0539                     l1126:
  1751  0539  082C               	movf	___awdiv@sign,w
  1752  053A  1903               	btfsc	3,2
  1753  053B  2D3D               	goto	u651
  1754  053C  2D3E               	goto	u650
  1755  053D                     u651:
  1756  053D  2D43               	goto	l1130
  1757  053E                     u650:
  1758  053E                     l1128:
  1759  053E  09AD               	comf	___awdiv@quotient,f
  1760  053F  09AE               	comf	___awdiv@quotient+1,f
  1761  0540  0AAD               	incf	___awdiv@quotient,f
  1762  0541  1903               	skipnz
  1763  0542  0AAE               	incf	___awdiv@quotient+1,f
  1764  0543                     l1130:
  1765  0543  082E               	movf	___awdiv@quotient+1,w
  1766  0544  00A7               	movwf	?___awdiv+1
  1767  0545  082D               	movf	___awdiv@quotient,w
  1768  0546  00A6               	movwf	?___awdiv
  1769  0547                     l435:
  1770  0547  0008               	return
  1771  0548                     __end_of___awdiv:
  1772                           
  1773                           	psect	text5
  1774  05D2                     __ptext5:	
  1775 ;; *************** function _Menu *****************
  1776 ;; Defined at:
  1777 ;;		line 287 in file "Conjunto.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       0       0       0       0
  1792 ;;      Locals:         0       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0
  1794 ;;      Totals:         0       0       0       0       0
  1795 ;;Total ram usage:        0 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 5
  1798 ;; This function calls:
  1799 ;;		_Texto
  1800 ;; This function is called by:
  1801 ;;		_main
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           
  1806                           ;psect for function _Menu
  1807  05D2                     _Menu:
  1808  05D2                     l1144:	
  1809                           ;incstack = 0
  1810                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1811                           
  1812  05D2  3000               	movlw	low (STR_10| (0+32768))
  1813  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1814  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1815  05D5  00A0               	movwf	Texto@texto
  1816  05D6  3082               	movlw	high (STR_10| (0+32768))
  1817  05D7  00A1               	movwf	Texto@texto+1
  1818  05D8  120A  118A  2548  120A  118A  	fcall	_Texto
  1819  05DD  303C               	movlw	low ((STR_10+60)| (0+32768))
  1820  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1821  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1822  05E0  00A0               	movwf	Texto@texto
  1823  05E1  3082               	movlw	high ((STR_10+60)| (0+32768))
  1824  05E2  00A1               	movwf	Texto@texto+1
  1825  05E3  120A  118A  2548  120A  118A  	fcall	_Texto
  1826  05E8                     l196:
  1827  05E8  0008               	return
  1828  05E9                     __end_of_Menu:
  1829                           
  1830                           	psect	text6
  1831  0548                     __ptext6:	
  1832 ;; *************** function _Texto *****************
  1833 ;; Defined at:
  1834 ;;		line 279 in file "Conjunto.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  texto           2    0[BANK0 ] PTR unsigned char 
  1837 ;;		 -> STR_11(2), STR_10(62), STR_9(29), STR_8(36), 
  1838 ;;		 -> STR_7(2), STR_6(40), STR_5(2), STR_4(40), 
  1839 ;;		 -> STR_3(2), STR_2(40), STR_1(2), 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  i               1    4[BANK0 ] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1851 ;;      Params:         0       2       0       0       0
  1852 ;;      Locals:         0       1       0       0       0
  1853 ;;      Temps:          0       2       0       0       0
  1854 ;;      Totals:         0       5       0       0       0
  1855 ;;Total ram usage:        5 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; Hardware stack levels required when called: 4
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;;		_Menu
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           
  1867                           ;psect for function _Texto
  1868  0548                     _Texto:
  1869  0548                     l1066:	
  1870                           ;incstack = 0
  1871                           ; Regs used in _Texto: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1872                           
  1873  0548  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0549  1303               	bcf	3,6	;RP1=0, select bank0
  1875  054A  01A4               	clrf	Texto@i
  1876  054B  2D67               	goto	l1074
  1877  054C                     l1068:
  1878  054C  0824               	movf	Texto@i,w
  1879  054D  0720               	addwf	Texto@texto,w
  1880  054E  0084               	movwf	4
  1881  054F  0821               	movf	Texto@texto+1,w
  1882  0550  1803               	skipnc
  1883  0551  0A21               	incf	Texto@texto+1,w
  1884  0552  00FF               	movwf	btemp+1
  1885  0553  120A  118A  2189  120A  118A  	fcall	stringtab
  1886  0558  0099               	movwf	25	;volatile
  1887  0559                     l1070:
  1888  0559  3001               	movlw	1
  1889  055A  00A2               	movwf	??_Texto
  1890  055B  0822               	movf	??_Texto,w
  1891  055C  07A4               	addwf	Texto@i,f
  1892  055D                     l1072:
  1893  055D  3003               	movlw	3
  1894  055E  1283               	bcf	3,5	;RP0=0, select bank0
  1895  055F  1303               	bcf	3,6	;RP1=0, select bank0
  1896  0560  00A3               	movwf	??_Texto+1
  1897  0561  3097               	movlw	151
  1898  0562  00A2               	movwf	??_Texto
  1899  0563                     u1027:
  1900  0563  0BA2               	decfsz	??_Texto,f
  1901  0564  2D63               	goto	u1027
  1902  0565  0BA3               	decfsz	??_Texto+1,f
  1903  0566  2D63               	goto	u1027
  1904  0567                     l1074:
  1905  0567  1283               	bcf	3,5	;RP0=0, select bank0
  1906  0568  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0569  0824               	movf	Texto@i,w
  1908  056A  0720               	addwf	Texto@texto,w
  1909  056B  0084               	movwf	4
  1910  056C  0821               	movf	Texto@texto+1,w
  1911  056D  1803               	skipnc
  1912  056E  0A21               	incf	Texto@texto+1,w
  1913  056F  00FF               	movwf	btemp+1
  1914  0570  120A  118A  2189  120A  118A  	fcall	stringtab
  1915  0575  3A00               	xorlw	0
  1916  0576  1D03               	skipz
  1917  0577  2D79               	goto	u511
  1918  0578  2D7A               	goto	u510
  1919  0579                     u511:
  1920  0579  2D4C               	goto	l1068
  1921  057A                     u510:
  1922  057A                     l193:
  1923  057A  0008               	return
  1924  057B                     __end_of_Texto:
  1925                           
  1926                           	psect	text7
  1927  003B                     __ptext7:	
  1928 ;; *************** function _isr *****************
  1929 ;; Defined at:
  1930 ;;		line 67 in file "Conjunto.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1944 ;;      Params:         0       0       0       0       0
  1945 ;;      Locals:         0       0       0       0       0
  1946 ;;      Temps:          5       0       0       0       0
  1947 ;;      Totals:         5       0       0       0       0
  1948 ;;Total ram usage:        5 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; Hardware stack levels required when called: 3
  1951 ;; This function calls:
  1952 ;;		i1_Menu
  1953 ;;		i1_Texto
  1954 ;; This function is called by:
  1955 ;;		Interrupt level 1
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function _isr
  1961  003B                     _isr:
  1962  003B                     i1l1200:
  1963                           
  1964                           ;Conjunto.c: 69: 
  1965  003B  1D0B               	btfss	11,2	;volatile
  1966  003C  283E               	goto	u84_21
  1967  003D  283F               	goto	u84_20
  1968  003E                     u84_21:
  1969  003E  2890               	goto	i1l121
  1970  003F                     u84_20:
  1971  003F                     i1l1202:
  1972                           
  1973                           ;Conjunto.c: 71:     if (ADIF == 1){
  1974  003F  110B               	bcf	11,2	;volatile
  1975  0040                     i1l1204:
  1976                           
  1977                           ;Conjunto.c: 72:         ADIF = 0;
  1978  0040  083C               	movf	_Valor_TMR0,w
  1979  0041  0081               	movwf	1	;volatile
  1980  0042                     i1l1206:
  1981                           
  1982                           ;Conjunto.c: 74:             ADRESH_Servo_1 = ADRESH;
  1983  0042  01FD               	clrf	_Contador_Servos
  1984  0043                     i1l1208:
  1985                           
  1986                           ;Conjunto.c: 76:         } else if(ADCON0bits.CHS == 1){
  1987  0043  1408               	bsf	8,0	;volatile
  1988                           
  1989                           ;Conjunto.c: 77:             ADRESH_Servo_2 = ADRESH;
  1990  0044  2855               	goto	i1l1212
  1991  0045                     i1l1210:
  1992                           
  1993                           ;Conjunto.c: 78:             ADCON0bits.CHS = 2;
  1994  0045  3001               	movlw	1
  1995  0046  00F5               	movwf	??_isr
  1996  0047  0875               	movf	??_isr,w
  1997  0048  07FD               	addwf	_Contador_Servos,f
  1998                           
  1999                           ;Conjunto.c: 79:         } else if(ADCON0bits.CHS == 2){
  2000  0049  3001               	movlw	1
  2001  004A  00F5               	movwf	??_isr
  2002  004B  0875               	movf	??_isr,w
  2003  004C  07FD               	addwf	_Contador_Servos,f
  2004                           
  2005                           ;Conjunto.c: 80:             ADRESH_Servo_3 = ADRESH;
  2006  004D  3001               	movlw	1
  2007  004E  02FD               	subwf	_Contador_Servos,f
  2008                           
  2009                           ;Conjunto.c: 81:             ADCON0bits.CHS = 0;
  2010  004F  3001               	movlw	1
  2011  0050  00F5               	movwf	??_isr
  2012  0051  0875               	movf	??_isr,w
  2013  0052  07FD               	addwf	_Contador_Servos,f
  2014                           
  2015                           ;Conjunto.c: 82:         }
  2016  0053  3001               	movlw	1
  2017  0054  02FD               	subwf	_Contador_Servos,f
  2018  0055                     i1l1212:
  2019                           
  2020                           ;Conjunto.c: 77:             ADRESH_Servo_2 = ADRESH;
  2021  0055  087D               	movf	_Contador_Servos,w
  2022  0056  0238               	subwf	_Valor_Servo_1,w
  2023  0057  1803               	skipnc
  2024  0058  285A               	goto	u85_21
  2025  0059  285B               	goto	u85_20
  2026  005A                     u85_21:
  2027  005A  2845               	goto	i1l1210
  2028  005B                     u85_20:
  2029  005B                     i1l124:
  2030                           
  2031                           ;Conjunto.c: 84:         ADCON0bits.GO = 1;
  2032  005B  1008               	bcf	8,0	;volatile
  2033  005C                     i1l1214:
  2034                           
  2035                           ;Conjunto.c: 86: 
  2036  005C  01FD               	clrf	_Contador_Servos
  2037  005D                     i1l1216:
  2038                           
  2039                           ;Conjunto.c: 87: 
  2040  005D  1488               	bsf	8,1	;volatile
  2041                           
  2042                           ;Conjunto.c: 88:     if (RCIF == 1){
  2043  005E  286F               	goto	i1l1220
  2044  005F                     i1l1218:
  2045                           
  2046                           ;Conjunto.c: 89: 
  2047  005F  3001               	movlw	1
  2048  0060  00F5               	movwf	??_isr
  2049  0061  0875               	movf	??_isr,w
  2050  0062  07FD               	addwf	_Contador_Servos,f
  2051                           
  2052                           ;Conjunto.c: 90: 
  2053  0063  3001               	movlw	1
  2054  0064  00F5               	movwf	??_isr
  2055  0065  0875               	movf	??_isr,w
  2056  0066  07FD               	addwf	_Contador_Servos,f
  2057                           
  2058                           ;Conjunto.c: 91:         RCIF = 0;
  2059  0067  3001               	movlw	1
  2060  0068  02FD               	subwf	_Contador_Servos,f
  2061                           
  2062                           ;Conjunto.c: 92:         USART_Receptor = RCREG;
  2063  0069  3001               	movlw	1
  2064  006A  00F5               	movwf	??_isr
  2065  006B  0875               	movf	??_isr,w
  2066  006C  07FD               	addwf	_Contador_Servos,f
  2067                           
  2068                           ;Conjunto.c: 93:         if (RCREG == '1'){
  2069  006D  3001               	movlw	1
  2070  006E  02FD               	subwf	_Contador_Servos,f
  2071  006F                     i1l1220:
  2072                           
  2073                           ;Conjunto.c: 88:     if (RCIF == 1){
  2074  006F  087D               	movf	_Contador_Servos,w
  2075  0070  0237               	subwf	_Valor_Servo_2,w
  2076  0071  1803               	skipnc
  2077  0072  2874               	goto	u86_21
  2078  0073  2875               	goto	u86_20
  2079  0074                     u86_21:
  2080  0074  285F               	goto	i1l1218
  2081  0075                     u86_20:
  2082  0075                     i1l127:
  2083                           
  2084                           ;Conjunto.c: 95:             if (Control == 1){
  2085  0075  1088               	bcf	8,1	;volatile
  2086  0076                     i1l1222:
  2087                           
  2088                           ;Conjunto.c: 97:                 Texto("SERVO 1: W Incrementar, Q Decrementar \r");
  2089  0076  01FD               	clrf	_Contador_Servos
  2090  0077                     i1l1224:
  2091                           
  2092                           ;Conjunto.c: 98:                 Menu();
  2093  0077  1508               	bsf	8,2	;volatile
  2094                           
  2095                           ;Conjunto.c: 99:             }
  2096  0078  2889               	goto	i1l1228
  2097  0079                     i1l1226:
  2098                           
  2099                           ;Conjunto.c: 100:         } else if(RCREG == '2'){
  2100  0079  3001               	movlw	1
  2101  007A  00F5               	movwf	??_isr
  2102  007B  0875               	movf	??_isr,w
  2103  007C  07FD               	addwf	_Contador_Servos,f
  2104                           
  2105                           ;Conjunto.c: 101:             USART_Num_Servo = 2;
  2106  007D  3001               	movlw	1
  2107  007E  00F5               	movwf	??_isr
  2108  007F  0875               	movf	??_isr,w
  2109  0080  07FD               	addwf	_Contador_Servos,f
  2110                           
  2111                           ;Conjunto.c: 102:             if (Control == 1){
  2112  0081  3001               	movlw	1
  2113  0082  02FD               	subwf	_Contador_Servos,f
  2114                           
  2115                           ;Conjunto.c: 103:                 Texto("\r");
  2116  0083  3001               	movlw	1
  2117  0084  00F5               	movwf	??_isr
  2118  0085  0875               	movf	??_isr,w
  2119  0086  07FD               	addwf	_Contador_Servos,f
  2120                           
  2121                           ;Conjunto.c: 104:                 Texto("SERVO 2: W Incrementar, Q Decrementar \r");
  2122  0087  3001               	movlw	1
  2123  0088  02FD               	subwf	_Contador_Servos,f
  2124  0089                     i1l1228:
  2125                           
  2126                           ;Conjunto.c: 99:             }
  2127  0089  087D               	movf	_Contador_Servos,w
  2128  008A  0236               	subwf	_Valor_Servo_3,w
  2129  008B  1803               	skipnc
  2130  008C  288E               	goto	u87_21
  2131  008D  288F               	goto	u87_20
  2132  008E                     u87_21:
  2133  008E  2879               	goto	i1l1226
  2134  008F                     u87_20:
  2135  008F                     i1l130:
  2136                           
  2137                           ;Conjunto.c: 106:             }
  2138  008F  1108               	bcf	8,2	;volatile
  2139  0090                     i1l121:	
  2140                           ;Conjunto.c: 107:         } else if(RCREG == '3'){
  2141                           
  2142                           
  2143                           ;Conjunto.c: 110:                 Texto("\r");
  2144  0090  1F0C               	btfss	12,6	;volatile
  2145  0091  2893               	goto	u88_21
  2146  0092  2894               	goto	u88_20
  2147  0093                     u88_21:
  2148  0093  28CF               	goto	i1l1254
  2149  0094                     u88_20:
  2150  0094                     i1l1230:
  2151                           
  2152                           ;Conjunto.c: 111:                 Texto("SERVO 3: W Incrementar, Q Decrementar \r");
  2153  0094  130C               	bcf	12,6	;volatile
  2154  0095                     i1l1232:
  2155                           
  2156                           ;Conjunto.c: 112:                 Menu();
  2157  0095  0C1F               	rrf	31,w	;volatile
  2158  0096  00F5               	movwf	??_isr
  2159  0097  0C75               	rrf	??_isr,w
  2160  0098  390F               	andlw	15
  2161  0099  3A00               	xorlw	0
  2162  009A  1D03               	skipz
  2163  009B  289D               	goto	u89_21
  2164  009C  289E               	goto	u89_20
  2165  009D                     u89_21:
  2166  009D  28A7               	goto	i1l1238
  2167  009E                     u89_20:
  2168  009E                     i1l1234:
  2169                           
  2170                           ;Conjunto.c: 113:             }
  2171  009E  081E               	movf	30,w	;volatile
  2172  009F  00F5               	movwf	??_isr
  2173  00A0  0875               	movf	??_isr,w
  2174  00A1  00B5               	movwf	_ADRESH_Servo_1
  2175  00A2                     i1l1236:
  2176                           
  2177                           ;Conjunto.c: 114:         } else if (RCREG == '4'){
  2178  00A2  081F               	movf	31,w	;volatile
  2179  00A3  39C3               	andlw	-61
  2180  00A4  3804               	iorlw	4
  2181  00A5  009F               	movwf	31	;volatile
  2182                           
  2183                           ;Conjunto.c: 115:             Control = 0;
  2184  00A6  28C8               	goto	i1l1250
  2185  00A7                     i1l1238:
  2186  00A7  0C1F               	rrf	31,w	;volatile
  2187  00A8  00F5               	movwf	??_isr
  2188  00A9  0C75               	rrf	??_isr,w
  2189  00AA  390F               	andlw	15
  2190  00AB  3A01               	xorlw	1
  2191  00AC  1D03               	skipz
  2192  00AD  28AF               	goto	u90_21
  2193  00AE  28B0               	goto	u90_20
  2194  00AF                     u90_21:
  2195  00AF  28B9               	goto	i1l1244
  2196  00B0                     u90_20:
  2197  00B0                     i1l1240:
  2198                           
  2199                           ;Conjunto.c: 116:         } else if (RCREG == '5'){
  2200  00B0  081E               	movf	30,w	;volatile
  2201  00B1  00F5               	movwf	??_isr
  2202  00B2  0875               	movf	??_isr,w
  2203  00B3  00B4               	movwf	_ADRESH_Servo_2
  2204  00B4                     i1l1242:
  2205                           
  2206                           ;Conjunto.c: 117:             Control = 1;
  2207  00B4  081F               	movf	31,w	;volatile
  2208  00B5  39C3               	andlw	-61
  2209  00B6  3808               	iorlw	8
  2210  00B7  009F               	movwf	31	;volatile
  2211                           
  2212                           ;Conjunto.c: 118:             Texto("\r");
  2213  00B8  28C8               	goto	i1l1250
  2214  00B9                     i1l1244:
  2215  00B9  0C1F               	rrf	31,w	;volatile
  2216  00BA  00F5               	movwf	??_isr
  2217  00BB  0C75               	rrf	??_isr,w
  2218  00BC  390F               	andlw	15
  2219  00BD  3A02               	xorlw	2
  2220  00BE  1D03               	skipz
  2221  00BF  28C1               	goto	u91_21
  2222  00C0  28C2               	goto	u91_20
  2223  00C1                     u91_21:
  2224  00C1  28C8               	goto	i1l1250
  2225  00C2                     u91_20:
  2226  00C2                     i1l1246:
  2227                           
  2228                           ;Conjunto.c: 119:             Texto("SERVO a seleccionar: (1) (2) (3): \r");
  2229  00C2  081E               	movf	30,w	;volatile
  2230  00C3  00F5               	movwf	??_isr
  2231  00C4  0875               	movf	??_isr,w
  2232  00C5  00B3               	movwf	_ADRESH_Servo_3
  2233  00C6                     i1l1248:
  2234                           
  2235                           ;Conjunto.c: 120:             USART_Servo_1 = ADRESH_Servo_1;
  2236  00C6  30C3               	movlw	-61
  2237  00C7  059F               	andwf	31,f	;volatile
  2238  00C8                     i1l1250:
  2239                           
  2240                           ;Conjunto.c: 122:             USART_Servo_3 = ADRESH_Servo_3;
  2241  00C8  3021               	movlw	33
  2242  00C9  00F5               	movwf	??_isr
  2243  00CA                     u103_27:
  2244  00CA  0BF5               	decfsz	??_isr,f
  2245  00CB  28CA               	goto	u103_27
  2246  00CC                     i1l1252:
  2247                           
  2248                           ;Conjunto.c: 123:         }
  2249  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  2250  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  2251  00CE  149F               	bsf	31,1	;volatile
  2252  00CF                     i1l1254:
  2253                           
  2254                           ;Conjunto.c: 127: 
  2255  00CF  1E8C               	btfss	12,5	;volatile
  2256  00D0  28D2               	goto	u92_21
  2257  00D1  28D3               	goto	u92_20
  2258  00D2                     u92_21:
  2259  00D2  297C               	goto	i1l150
  2260  00D3                     u92_20:
  2261  00D3                     i1l1256:
  2262                           
  2263                           ;Conjunto.c: 130: 
  2264  00D3  128C               	bcf	12,5	;volatile
  2265  00D4                     i1l1258:
  2266                           
  2267                           ;Conjunto.c: 131: 
  2268  00D4  081A               	movf	26,w	;volatile
  2269  00D5  00F5               	movwf	??_isr
  2270  00D6  0875               	movf	??_isr,w
  2271  00D7  00FB               	movwf	_USART_Receptor
  2272  00D8                     i1l1260:
  2273                           
  2274                           ;Conjunto.c: 132:     IRCF0 = 1;
  2275  00D8  3031               	movlw	49
  2276  00D9  061A               	xorwf	26,w	;volatile
  2277  00DA  1D03               	btfss	3,2
  2278  00DB  28DD               	goto	u93_21
  2279  00DC  28DE               	goto	u93_20
  2280  00DD                     u93_21:
  2281  00DD  28FD               	goto	i1l1268
  2282  00DE                     u93_20:
  2283  00DE                     i1l1262:
  2284                           
  2285                           ;Conjunto.c: 133:     IRCF1 = 1;
  2286  00DE  01FC               	clrf	_USART_Num_Servo
  2287  00DF  0AFC               	incf	_USART_Num_Servo,f
  2288  00E0                     i1l1264:
  2289                           
  2290                           ;Conjunto.c: 134:     IRCF2 = 1;
  2291  00E0  037A               	decf	_Control,w
  2292  00E1  1D03               	btfss	3,2
  2293  00E2  28E4               	goto	u94_21
  2294  00E3  28E5               	goto	u94_20
  2295  00E4                     u94_21:
  2296  00E4  297C               	goto	i1l150
  2297  00E5                     u94_20:
  2298  00E5                     i1l1266:
  2299                           
  2300                           ;Conjunto.c: 135: 
  2301  00E5  303C               	movlw	low ((STR_10+60)| (0+32768))
  2302  00E6  00F0               	movwf	i1Texto@texto
  2303  00E7  3082               	movlw	high ((STR_10+60)| (0+32768))
  2304  00E8  00F1               	movwf	i1Texto@texto+1
  2305  00E9  120A  118A  257B  120A  118A  	fcall	i1_Texto
  2306                           
  2307                           ;Conjunto.c: 136: 
  2308  00EE  303E               	movlw	low (STR_2| (0+32768))
  2309  00EF  00F0               	movwf	i1Texto@texto
  2310  00F0  3082               	movlw	high (STR_2| (0+32768))
  2311  00F1  00F1               	movwf	i1Texto@texto+1
  2312  00F2  120A  118A  257B  120A  118A  	fcall	i1_Texto
  2313                           
  2314                           ;Conjunto.c: 137:     TXEN = 1;
  2315  00F7  120A  118A  25E9  120A  118A  	fcall	i1_Menu
  2316  00FC  297C               	goto	i1l150
  2317  00FD                     i1l1268:
  2318  00FD  3032               	movlw	50
  2319  00FE  061A               	xorwf	26,w	;volatile
  2320  00FF  1D03               	btfss	3,2
  2321  0100  2902               	goto	u95_21
  2322  0101  2903               	goto	u95_20
  2323  0102                     u95_21:
  2324  0102  2924               	goto	i1l1276
  2325  0103                     u95_20:
  2326  0103                     i1l1270:
  2327                           
  2328                           ;Conjunto.c: 140: 
  2329  0103  3002               	movlw	2
  2330  0104  00F5               	movwf	??_isr
  2331  0105  0875               	movf	??_isr,w
  2332  0106  00FC               	movwf	_USART_Num_Servo
  2333  0107                     i1l1272:
  2334                           
  2335                           ;Conjunto.c: 141: 
  2336  0107  037A               	decf	_Control,w
  2337  0108  1D03               	btfss	3,2
  2338  0109  290B               	goto	u96_21
  2339  010A  290C               	goto	u96_20
  2340  010B                     u96_21:
  2341  010B  297C               	goto	i1l150
  2342  010C                     u96_20:
  2343  010C                     i1l1274:
  2344                           
  2345                           ;Conjunto.c: 142:     CREN = 1;
  2346  010C  303C               	movlw	low ((STR_10+60)| (0+32768))
  2347  010D  00F0               	movwf	i1Texto@texto
  2348  010E  3082               	movlw	high ((STR_10+60)| (0+32768))
  2349  010F  00F1               	movwf	i1Texto@texto+1
  2350  0110  120A  118A  257B  120A  118A  	fcall	i1_Texto
  2351                           
  2352                           ;Conjunto.c: 143:     PIE1bits.RCIE = 1;
  2353  0115  3066               	movlw	low (STR_4| (0+32768))
  2354  0116  00F0               	movwf	i1Texto@texto
  2355  0117  3082               	movlw	high (STR_4| (0+32768))
  2356  0118  00F1               	movwf	i1Texto@texto+1
  2357  0119  120A  118A  257B  120A  118A  	fcall	i1_Texto
  2358                           
  2359                           ;Conjunto.c: 144:     PIR1bits.RCIF = 0;
  2360  011E  120A  118A  25E9  120A  118A  	fcall	i1_Menu
  2361  0123  297C               	goto	i1l150
  2362  0124                     i1l1276:
  2363  0124  3033               	movlw	51
  2364  0125  061A               	xorwf	26,w	;volatile
  2365  0126  1D03               	btfss	3,2
  2366  0127  2929               	goto	u97_21
  2367  0128  292A               	goto	u97_20
  2368  0129                     u97_21:
  2369  0129  294B               	goto	i1l1284
  2370  012A                     u97_20:
  2371  012A                     i1l1278:
  2372                           
  2373                           ;Conjunto.c: 147: 
  2374  012A  3003               	movlw	3
  2375  012B  00F5               	movwf	??_isr
  2376  012C  0875               	movf	??_isr,w
  2377  012D  00FC               	movwf	_USART_Num_Servo
  2378  012E                     i1l1280:
  2379                           
  2380                           ;Conjunto.c: 148:     PS0 = 1;
  2381  012E  037A               	decf	_Control,w
  2382  012F  1D03               	btfss	3,2
  2383  0130  2932               	goto	u98_21
  2384  0131  2933               	goto	u98_20
  2385  0132                     u98_21:
  2386  0132  297C               	goto	i1l150
  2387  0133                     u98_20:
  2388  0133                     i1l1282:
  2389                           
  2390                           ;Conjunto.c: 149:     PS1 = 1;
  2391  0133  303C               	movlw	low ((STR_10+60)| (0+32768))
  2392  0134  00F0               	movwf	i1Texto@texto
  2393  0135  3082               	movlw	high ((STR_10+60)| (0+32768))
  2394  0136  00F1               	movwf	i1Texto@texto+1
  2395  0137  120A  118A  257B  120A  118A  	fcall	i1_Texto
  2396                           
  2397                           ;Conjunto.c: 150:     PS2 = 1;
  2398  013C  308E               	movlw	low (STR_6| (0+32768))
  2399  013D  00F0               	movwf	i1Texto@texto
  2400  013E  3082               	movlw	high (STR_6| (0+32768))
  2401  013F  00F1               	movwf	i1Texto@texto+1
  2402  0140  120A  118A  257B  120A  118A  	fcall	i1_Texto
  2403                           
  2404                           ;Conjunto.c: 151:     T0CS = 0;
  2405  0145  120A  118A  25E9  120A  118A  	fcall	i1_Menu
  2406  014A  297C               	goto	i1l150
  2407  014B                     i1l1284:
  2408  014B  3034               	movlw	52
  2409  014C  061A               	xorwf	26,w	;volatile
  2410  014D  1D03               	btfss	3,2
  2411  014E  2950               	goto	u99_21
  2412  014F  2951               	goto	u99_20
  2413  0150                     u99_21:
  2414  0150  2953               	goto	i1l1288
  2415  0151                     u99_20:
  2416  0151                     i1l1286:
  2417                           
  2418                           ;Conjunto.c: 154:     TMR0 = Valor_TMR0;
  2419  0151  01FA               	clrf	_Control
  2420                           
  2421                           ;Conjunto.c: 155: 
  2422  0152  297C               	goto	i1l150
  2423  0153                     i1l1288:
  2424  0153  3035               	movlw	53
  2425  0154  061A               	xorwf	26,w	;volatile
  2426  0155  1D03               	btfss	3,2
  2427  0156  2958               	goto	u100_21
  2428  0157  2959               	goto	u100_20
  2429  0158                     u100_21:
  2430  0158  297C               	goto	i1l140
  2431  0159                     u100_20:
  2432  0159                     i1l1290:
  2433                           
  2434                           ;Conjunto.c: 156: 
  2435  0159  01FA               	clrf	_Control
  2436  015A  0AFA               	incf	_Control,f
  2437  015B                     i1l1292:
  2438                           
  2439                           ;Conjunto.c: 157:     PIE1bits.ADIE = 1;
  2440  015B  303C               	movlw	low ((STR_10+60)| (0+32768))
  2441  015C  00F0               	movwf	i1Texto@texto
  2442  015D  3082               	movlw	high ((STR_10+60)| (0+32768))
  2443  015E  00F1               	movwf	i1Texto@texto+1
  2444  015F  120A  118A  257B  120A  118A  	fcall	i1_Texto
  2445                           
  2446                           ;Conjunto.c: 158:     ADIF = 0;
  2447  0164  30B6               	movlw	low (STR_8| (0+32768))
  2448  0165  00F0               	movwf	i1Texto@texto
  2449  0166  3082               	movlw	high (STR_8| (0+32768))
  2450  0167  00F1               	movwf	i1Texto@texto+1
  2451  0168  120A  118A  257B  120A  118A  	fcall	i1_Texto
  2452  016D                     i1l1294:
  2453                           
  2454                           ;Conjunto.c: 159:     ADCON1bits.ADFM = 0;
  2455  016D  1283               	bcf	3,5	;RP0=0, select bank0
  2456  016E  1303               	bcf	3,6	;RP1=0, select bank0
  2457  016F  0835               	movf	_ADRESH_Servo_1,w
  2458  0170  00F5               	movwf	??_isr
  2459  0171  0875               	movf	??_isr,w
  2460  0172  00BB               	movwf	_USART_Servo_1
  2461  0173                     i1l1296:
  2462                           
  2463                           ;Conjunto.c: 160:     ADCON1bits.VCFG0 = 0;
  2464  0173  0834               	movf	_ADRESH_Servo_2,w
  2465  0174  00F5               	movwf	??_isr
  2466  0175  0875               	movf	??_isr,w
  2467  0176  00BA               	movwf	_USART_Servo_2
  2468  0177                     i1l1298:
  2469                           
  2470                           ;Conjunto.c: 161:     ADCON1bits.VCFG0 = 0;
  2471  0177  0833               	movf	_ADRESH_Servo_3,w
  2472  0178  00F5               	movwf	??_isr
  2473  0179  0875               	movf	??_isr,w
  2474  017A  00B9               	movwf	_USART_Servo_3
  2475  017B  297C               	goto	i1l150
  2476  017C                     i1l140:
  2477  017C                     i1l150:
  2478  017C  0879               	movf	??_isr+4,w
  2479  017D  1283               	bcf	3,5	;RP0=0, select bank0
  2480  017E  1303               	bcf	3,6	;RP1=0, select bank0
  2481  017F  00FF               	movwf	btemp+1
  2482  0180  0878               	movf	??_isr+3,w
  2483  0181  008A               	movwf	10
  2484  0182  0877               	movf	??_isr+2,w
  2485  0183  0084               	movwf	4
  2486  0184  0E76               	swapf	??_isr+1,w
  2487  0185  0083               	movwf	3
  2488  0186  0EFE               	swapf	btemp,f
  2489  0187  0E7E               	swapf	btemp,w
  2490  0188  0009               	retfie
  2491  0189                     __end_of_isr:
  2492                           
  2493                           	psect	intentry
  2494  0004                     __pintentry:	
  2495                           ;incstack = 0
  2496                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2497                           
  2498  0004                     interrupt_function:
  2499  007E                     saved_w	set	btemp
  2500  0004  00FE               	movwf	btemp
  2501  0005  0E03               	swapf	3,w
  2502  0006  00F6               	movwf	??_isr+1
  2503  0007  0804               	movf	4,w
  2504  0008  00F7               	movwf	??_isr+2
  2505  0009  080A               	movf	10,w
  2506  000A  00F8               	movwf	??_isr+3
  2507  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2508  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2509  000D  087F               	movf	btemp+1,w
  2510  000E  00F9               	movwf	??_isr+4
  2511  000F  120A  118A  283B   	ljmp	_isr
  2512                           
  2513                           	psect	text8
  2514  05E9                     __ptext8:	
  2515 ;; *************** function i1_Menu *****************
  2516 ;; Defined at:
  2517 ;;		line 287 in file "Conjunto.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2531 ;;      Params:         0       0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0
  2534 ;;      Totals:         0       0       0       0       0
  2535 ;;Total ram usage:        0 bytes
  2536 ;; Hardware stack levels used: 1
  2537 ;; Hardware stack levels required when called: 2
  2538 ;; This function calls:
  2539 ;;		i1_Texto
  2540 ;; This function is called by:
  2541 ;;		_isr
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           
  2546                           ;psect for function i1_Menu
  2547  05E9                     i1_Menu:
  2548  05E9                     i1l1198:	
  2549                           ;incstack = 0
  2550                           ; Regs used in i1_Menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2551                           
  2552  05E9  3000               	movlw	low (STR_10| (0+32768))
  2553  05EA  00F0               	movwf	i1Texto@texto
  2554  05EB  3082               	movlw	high (STR_10| (0+32768))
  2555  05EC  00F1               	movwf	i1Texto@texto+1
  2556  05ED  120A  118A  257B  120A  118A  	fcall	i1_Texto
  2557  05F2  303C               	movlw	low ((STR_10+60)| (0+32768))
  2558  05F3  00F0               	movwf	i1Texto@texto
  2559  05F4  3082               	movlw	high ((STR_10+60)| (0+32768))
  2560  05F5  00F1               	movwf	i1Texto@texto+1
  2561  05F6  120A  118A  257B  120A  118A  	fcall	i1_Texto
  2562  05FB                     i1l196:
  2563  05FB  0008               	return
  2564  05FC                     __end_ofi1_Menu:
  2565                           
  2566                           	psect	text9
  2567  057B                     __ptext9:	
  2568 ;; *************** function i1_Texto *****************
  2569 ;; Defined at:
  2570 ;;		line 279 in file "Conjunto.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  texto           2    0[COMMON] PTR unsigned char 
  2573 ;;		 -> STR_11(2), STR_10(62), STR_9(29), STR_8(36), 
  2574 ;;		 -> STR_7(2), STR_6(40), STR_5(2), STR_4(40), 
  2575 ;;		 -> STR_3(2), STR_2(40), STR_1(2), 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  i               1    4[COMMON] unsigned char 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2587 ;;      Params:         2       0       0       0       0
  2588 ;;      Locals:         1       0       0       0       0
  2589 ;;      Temps:          2       0       0       0       0
  2590 ;;      Totals:         5       0       0       0       0
  2591 ;;Total ram usage:        5 bytes
  2592 ;; Hardware stack levels used: 2
  2593 ;; This function calls:
  2594 ;;		Nothing
  2595 ;; This function is called by:
  2596 ;;		_isr
  2597 ;;		i1_Menu
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           
  2602                           ;psect for function i1_Texto
  2603  057B                     i1_Texto:
  2604  057B                     i1l1134:	
  2605                           ;incstack = 0
  2606                           ; Regs used in i1_Texto: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2607                           
  2608  057B  01F4               	clrf	i1Texto@i
  2609  057C  2D97               	goto	i1l1142
  2610  057D                     i1l1136:
  2611  057D  0874               	movf	i1Texto@i,w
  2612  057E  0770               	addwf	i1Texto@texto,w
  2613  057F  0084               	movwf	4
  2614  0580  0871               	movf	i1Texto@texto+1,w
  2615  0581  1803               	skipnc
  2616  0582  0A71               	incf	i1Texto@texto+1,w
  2617  0583  00FF               	movwf	btemp+1
  2618  0584  120A  118A  2189  120A  118A  	fcall	stringtab
  2619  0589  0099               	movwf	25	;volatile
  2620  058A                     i1l1138:
  2621  058A  3001               	movlw	1
  2622  058B  00F2               	movwf	??i1_Texto
  2623  058C  0872               	movf	??i1_Texto,w
  2624  058D  07F4               	addwf	i1Texto@i,f
  2625  058E                     i1l1140:
  2626  058E  3003               	movlw	3
  2627  058F  00F3               	movwf	??i1_Texto+1
  2628  0590  3097               	movlw	151
  2629  0591  00F2               	movwf	??i1_Texto
  2630  0592                     u104_27:
  2631  0592  0BF2               	decfsz	??i1_Texto,f
  2632  0593  2D92               	goto	u104_27
  2633  0594  0BF3               	decfsz	??i1_Texto+1,f
  2634  0595  2D92               	goto	u104_27
  2635  0596  2D97               	nop2
  2636  0597                     i1l1142:
  2637  0597  0874               	movf	i1Texto@i,w
  2638  0598  0770               	addwf	i1Texto@texto,w
  2639  0599  0084               	movwf	4
  2640  059A  0871               	movf	i1Texto@texto+1,w
  2641  059B  1803               	skipnc
  2642  059C  0A71               	incf	i1Texto@texto+1,w
  2643  059D  1283               	bcf	3,5	;RP0=0, select bank0
  2644  059E  1303               	bcf	3,6	;RP1=0, select bank0
  2645  059F  00FF               	movwf	btemp+1
  2646  05A0  120A  118A  2189  120A  118A  	fcall	stringtab
  2647  05A5  3A00               	xorlw	0
  2648  05A6  1D03               	skipz
  2649  05A7  2DA9               	goto	u66_21
  2650  05A8  2DAA               	goto	u66_20
  2651  05A9                     u66_21:
  2652  05A9  2D7D               	goto	i1l1136
  2653  05AA                     u66_20:
  2654  05AA                     i1l193:
  2655  05AA  0008               	return
  2656  05AB                     __end_ofi1_Texto:
  2657  007E                     btemp	set	126	;btemp
  2658  007E                     wtemp0	set	126
  2659                           
  2660                           	psect	config
  2661                           
  2662                           ;Config register CONFIG1 @ 0x2007
  2663                           ;	Oscillator Selection bits
  2664                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2665                           ;	Watchdog Timer Enable bit
  2666                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2667                           ;	Power-up Timer Enable bit
  2668                           ;	PWRTE = OFF, PWRT disabled
  2669                           ;	RE3/MCLR pin function select bit
  2670                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2671                           ;	Code Protection bit
  2672                           ;	CP = OFF, Program memory code protection is disabled
  2673                           ;	Data Code Protection bit
  2674                           ;	CPD = OFF, Data memory code protection is disabled
  2675                           ;	Brown Out Reset Selection bits
  2676                           ;	BOREN = OFF, BOR disabled
  2677                           ;	Internal External Switchover bit
  2678                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2679                           ;	Fail-Safe Clock Monitor Enabled bit
  2680                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2681                           ;	Low Voltage Programming Enable bit
  2682                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2683                           ;	In-Circuit Debugger Mode bit
  2684                           ;	DEBUG = 0x1, unprogrammed default
  2685  2007                     	org	8199
  2686  2007  20D5               	dw	8405
  2687                           
  2688                           ;Config register CONFIG2 @ 0x2008
  2689                           ;	Brown-out Reset Selection bit
  2690                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2691                           ;	Flash Program Memory Self Write Enable bits
  2692                           ;	WRT = OFF, Write protection off
  2693  2008                     	org	8200
  2694  2008  3FFF               	dw	16383

Data Sizes:
    Strings     247
    Constant    0
    Data        4
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     19      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Texto@texto	PTR unsigned char  size(2) Largest target is 62
		 -> STR_11(CODE[2]), STR_10(CODE[62]), STR_9(CODE[29]), STR_8(CODE[36]), 
		 -> STR_7(CODE[2]), STR_6(CODE[40]), STR_5(CODE[2]), STR_4(CODE[40]), 
		 -> STR_3(CODE[2]), STR_2(CODE[40]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_Texto
    i1_Menu->i1_Texto

Critical Paths under _main in BANK0

    _main->_Regla_3
    _Regla_3->___awdiv
    ___awdiv->___wmul
    _Menu->_Texto

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3652
                                             18 BANK0      1     1      0
                               _Menu
                            _Regla_3
                              _Texto
                       _USART_SERVOS
 ---------------------------------------------------------------------------------
 (1) _USART_SERVOS                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Regla_3                                              3     3      0    2216
                                             15 BANK0      3     3      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Menu                                                 0     0      0     718
                              _Texto
 ---------------------------------------------------------------------------------
 (1) _Texto                                                5     3      2     718
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     700
                                              5 COMMON     5     5      0
                             i1_Menu
                            i1_Texto
 ---------------------------------------------------------------------------------
 (4) i1_Menu                                               0     0      0     350
                            i1_Texto
 ---------------------------------------------------------------------------------
 (5) i1_Texto                                              5     3      2     350
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Menu
     _Texto
   _Regla_3
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _Texto
   _USART_SERVOS

 _isr (ROOT)
   i1_Menu
     i1_Texto
   i1_Texto

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      1D       5       36.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 24 16:34:54 2021

                      pc 0002             i1Texto@texto 0070             ___awdiv@sign 002C  
                     fsr 0004      ___wmul@multiplicand 0022                      l163 0404  
                    l181 0475                      l193 057A                      l282 05B9  
                    l435 0547                      l187 03EA                      l196 05E8  
                    l284 05D1                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      u510 057A                      _PS0 0408  
                    u511 0579                      _PS1 0409                      u600 0514  
                    u520 05B3                      _PS2 040A                      u601 0513  
                    u521 05B2                      u620 0525                      u700 040B  
                    u621 0524                      u701 040A                      u550 05CD  
                    u710 0413                      u615 0515                      u551 05CC  
                    u535 05BA                      u711 0412                      u640 0539  
                    u560 04E6                      u800 0467                      u720 041F  
                    u641 0538                      u625 0521                      u561 04E5  
                    u545 05C1                      u801 0466                      u721 041E  
                    u650 053E                      u570 04F1                      u810 046F  
                    u730 0425                      u651 053D                      u635 052D  
                    u571 04F0                      u811 046E                      u731 0424  
                    u580 0502                      u820 02FC                      u740 042D  
                    u581 0501                      u821 02FB                      u741 042C  
                    u830 0376                      u750 0439                      u670 03F0  
                    u831 0375                      u751 0438                      u671 03EF  
                    _PSA 040B                      u760 0441                      u680 03F6  
                    u761 0440                      u681 03F5                      u770 044D  
                    u690 03FE                      u595 0506                      u771 044C  
                    u691 03FD                      u780 0453                      u781 0452  
                    u790 045B                      u791 045A                      _isr 003B  
                    fsr0 0004                      indf 0000                     l1100 04F1  
                   l1110 0505                     l1102 04F6                     l1120 052B  
                   l1112 050C                     l1104 04FA                     l1130 0543  
                   l1122 052C                     l1114 0510                     l1106 04FC  
                   l1124 0533                     l1116 0514                     l1108 0502  
                   l1300 0476                     l1070 0559                     l1118 0525  
                   l1126 0539                     l1150 03F6                     l1310 048E  
                   l1302 0487                     l1072 055D                     l1144 05D2  
                   l1128 053E                     l1080 05B3                     l1152 03FE  
                   l1160 0419                     l1320 049F                     l1312 048F  
                   l1304 048B                     l1074 0567                     l1066 0548  
                   l1090 04DF                     l1082 05C0                     l1170 0439  
                   l1162 041F                     l1154 0405                     l1146 03EB  
                   l1330 04AD                     l1322 04A0                     l1314 0496  
                   l1306 048C                     l1068 054C                     l1092 04E2  
                   l1084 05C7                     l1076 05AB                     l1180 045B  
                   l1172 0441                     l1164 0425                     l1156 040B  
                   l1148 03F0                     l1340 04D1                     l1332 04B4  
                   l1324 04A1                     l1316 0499                     l1308 048D  
                   l1094 04E6                     l1086 05CD                     l1078 05AF  
                   l1190 02F7                     l1182 0461                     l1166 042D  
                   l1174 0447                     l1158 0413                     l1342 04D6  
                   l1334 04B5                     l1326 04A4                     l1318 049C  
                   l1096 04EB                     l1192 02FC                     l1184 0467  
                   l1176 044D                     l1168 0433                     l1336 04C3  
                   l1328 04A5                     l1098 04ED                     l1194 0371  
                   l1186 046F                     l1178 0453                     l1338 04CC  
                   l1196 0376                     l1188 0474                     _ADIF 0066  
                   ?_isr 0070                     STR_1 023C                     STR_2 023E  
                   STR_3 023C                     STR_4 0266                     STR_5 023C  
                   STR_6 028E                     STR_7 023C                     STR_8 02B6  
                   STR_9 02DA                     _T0IF 005A                     _CREN 00C4  
                   _T0CS 040D                     u1017 04AA                     u1027 0563  
                   _RCIF 0065                     _TMR0 0001                     _SPEN 00C7  
                   _TXEN 04C5                     _SYNC 04C4                     _Menu 05D2  
                   _main 0476                     btemp 007E          __end_ofi1_Texto 05AB  
                   start 0012          __end_of_Regla_3 03EB                    ??_isr 0075  
                  ?_Menu 0070                    ?_main 0070          __end_of___awdiv 0548  
                  STR_10 0200                    STR_11 023C                    _ANSEL 0188  
        ___awdiv@divisor 0026                    _IRCF0 047C                    _IRCF1 047D  
                  _IRCF2 047E                    i1l121 0090                    i1l130 008F  
                  i1l140 017C                    i1l124 005B                    i1l150 017C  
                  i1l127 0075                    i1l193 05AA                    i1l196 05FB  
        ___awdiv@counter 002B                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  u66_20 05AA                    u90_20 00B0                    u66_21 05A9  
                  u90_21 00AF                    u91_20 00C2                    u91_21 00C1  
                  u92_20 00D3                    u84_20 003F                    u92_21 00D2  
                  u84_21 003E                    u93_20 00DE                    u85_20 005B  
                  u93_21 00DD                    u85_21 005A                    u94_20 00E5  
                  u86_20 0075                    u94_21 00E4                    u86_21 0074  
                  u95_20 0103                    u87_20 008F                    u95_21 0102  
                  u87_21 008E                    u96_20 010C                    u88_20 0094  
                  u96_21 010B                    u88_21 0093                    u97_20 012A  
                  u89_20 009E                    u97_21 0129                    u89_21 009D  
                  _TXREG 0019                    u98_20 0133                    u98_21 0132  
                  u99_20 0151                    u99_21 0150                    _Texto 0548  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_Menu 05E9             __end_of_main 04DF  
                 ??_Menu 0025                   ??_main 0032                   ?_Texto 0020  
                 _ADRESH 001E                ??i1_Texto 0072         ___awdiv@dividend 0028  
                 _ANSELH 0189                   u100_20 0159                   u100_21 0158  
                 i1l1200 003B                   i1l1210 0045                   i1l1202 003F  
                 i1l1140 058E                   i1l1220 006F                   i1l1212 0055  
                 i1l1204 0040                   i1l1142 0597                   i1l1134 057B  
                 i1l1230 0094                   i1l1222 0076                   i1l1214 005C  
                 i1l1206 0042                   i1l1136 057D                   i1l1240 00B0  
                 i1l1232 0095                   i1l1224 0077                   i1l1216 005D  
                 i1l1208 0043                   i1l1138 058A                   i1l1242 00B4  
                 i1l1250 00C8                   i1l1234 009E                   i1l1226 0079  
                 i1l1218 005F                   i1l1260 00D8                   i1l1252 00CC  
                 i1l1244 00B9                   i1l1236 00A2                   i1l1228 0089  
                 i1l1270 0103                   i1l1262 00DE                   i1l1246 00C2  
                 i1l1238 00A7                   i1l1254 00CF                   u103_27 00CA  
                 i1l1280 012E                   i1l1272 0107                   i1l1264 00E0  
                 i1l1256 00D3                   i1l1248 00C6                   i1l1290 0159  
                 i1l1282 0133                   i1l1274 010C                   i1l1266 00E5  
                 i1l1258 00D4                   i1l1292 015B                   i1l1284 014B  
                 i1l1276 0124                   i1l1268 00FD                   i1l1198 05E9  
                 i1l1294 016D                   i1l1286 0151                   i1l1278 012A  
                 u104_27 0592                   i1l1296 0173                   i1l1288 0153  
                 i1l1298 0177                   _INTCON 000B                   i1_Menu 05E9  
              ??_Regla_3 002F               _Valor_TMR0 003C                   Texto@i 0024  
                 ___wmul 05AB                ??___awdiv 002A         ___awdiv@quotient 002D  
                 saved_w 007E               Texto@texto 0020  __end_of__initialization 0037  
         __pcstackCOMMON 0070            __end_of_Texto 057B             __pidataBANK0 05FC  
                ??_Texto 0022               __pbssBANK0 0033                  ?i1_Menu 0070  
             __pmaintext 0476                  ?___wmul 0020               __pintentry 0004  
                i1_Texto 057B               __stringtab 0189          __size_ofi1_Menu 0013  
                _Control 007A                  _Regla_3 02F7                  ___awdiv 04DF  
        __size_of___wmul 0027          _Contador_Servos 007D                  __ptext1 03EB  
                __ptext2 02F7                  __ptext3 05AB                  __ptext4 04DF  
                __ptext5 05D2                  __ptext6 0548                  __ptext7 003B  
                __ptext8 05E9                  __ptext9 057B             __size_of_isr 014E  
   end_of_initialization 0037             __pstringtext 0200           _ADRESH_Servo_1 0035  
         _ADRESH_Servo_2 0034           _ADRESH_Servo_3 0033            ?_USART_SERVOS 0070  
         __end_ofi1_Menu 05FC           __end_of___wmul 05D2      start_initialization 0015  
            __end_of_isr 0189           ??_USART_SERVOS 0020                 ??i1_Menu 0075  
               ??___wmul 0024              __pdataBANK0 0039            _Valor_Servo_1 0038  
          _Valor_Servo_2 0037            _Valor_Servo_3 0036              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0020                 ?i1_Texto 0070  
               ?_Regla_3 0070                 ?___awdiv 0026                __pstrings 0189  
         __size_of_Texto 0033        interrupt_function 0004           ___wmul@product 0024  
               _PIE1bits 008C                 _PIR1bits 000C     __end_of_USART_SERVOS 0476  
               i1Texto@i 0074               _ADCON0bits 001F              __stringbase 019B  
             _ADCON1bits 009F        ___wmul@multiplier 0020         __size_ofi1_Texto 0030  
       __size_of_Regla_3 00F4         __size_of___awdiv 0069       __end_of__stringtab 019B  
          __size_of_Menu 0017            __size_of_main 0069                 intlevel1 0000  
        _USART_Num_Servo 007C    __size_of_USART_SERVOS 008B                stringcode 0193  
         _USART_Receptor 007B                 stringtab 0189             _USART_SERVOS 03EB  
          _USART_Servo_1 003B            _USART_Servo_2 003A            _USART_Servo_3 0039  
