

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 21 15:44:47 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	idataCOMMON
   211  0211                     __pidataCOMMON:
   212                           
   213                           ;initializer for _Valor_TMR0
   214  0211  3464               	retlw	100
   215  0009                     _PORTE	set	9
   216  0008                     _PORTD	set	8
   217  0007                     _PORTC	set	7
   218  0006                     _PORTB	set	6
   219  0005                     _PORTA	set	5
   220  000B                     _INTCON	set	11
   221  0001                     _TMR0	set	1
   222  001E                     _ADRESH	set	30
   223  001F                     _ADCON0bits	set	31
   224  0042                     _RD2	set	66
   225  0041                     _RD1	set	65
   226  0040                     _RD0	set	64
   227  005A                     _T0IF	set	90
   228  0066                     _ADIF	set	102
   229  0089                     _TRISE	set	137
   230  0088                     _TRISD	set	136
   231  0087                     _TRISC	set	135
   232  0085                     _TRISA	set	133
   233  009F                     _ADCON1bits	set	159
   234  008C                     _PIE1bits	set	140
   235  040B                     _PSA	set	1035
   236  040D                     _T0CS	set	1037
   237  040A                     _PS2	set	1034
   238  0409                     _PS1	set	1033
   239  0408                     _PS0	set	1032
   240  047E                     _IRCF2	set	1150
   241  047D                     _IRCF1	set	1149
   242  047C                     _IRCF0	set	1148
   243  0189                     _ANSELH	set	393
   244  0188                     _ANSEL	set	392
   245                           
   246                           	psect	cinit
   247  000F                     start_initialization:	
   248                           ; #config settings
   249                           
   250  000F                     __initialization:
   251                           
   252                           ; Initialize objects allocated to COMMON
   253  000F  120A  118A  2211  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   254  0014  00FA               	movwf	__pdataCOMMON& (0+127)
   255                           
   256                           ; Clear objects allocated to BANK0
   257  0015  01AE               	clrf	__pbssBANK0& (0+127)
   258  0016  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   259  0017  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   260  0018  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   261  0019  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   262  001A  01B3               	clrf	(__pbssBANK0+5)& (0+127)
   263  001B  01B4               	clrf	(__pbssBANK0+6)& (0+127)
   264  001C  01B5               	clrf	(__pbssBANK0+7)& (0+127)
   265  001D  01B6               	clrf	(__pbssBANK0+8)& (0+127)
   266                           
   267                           ; Clear objects allocated to COMMON
   268  001E  01F7               	clrf	__pbssCOMMON& (0+127)
   269  001F  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   270  0020  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   271  0021                     end_of_initialization:	
   272                           ;End of C runtime variable initialization code
   273                           
   274  0021                     __end_of__initialization:
   275  0021  0183               	clrf	3
   276  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	bssCOMMON
   279  0077                     __pbssCOMMON:
   280  0077                     _Valor_Servo_3:
   281  0077                     	ds	1
   282  0078                     _Valor_Servo_2:
   283  0078                     	ds	1
   284  0079                     _Valor_Servo_1:
   285  0079                     	ds	1
   286                           
   287                           	psect	dataCOMMON
   288  007A                     __pdataCOMMON:
   289  007A                     _Valor_TMR0:
   290  007A                     	ds	1
   291                           
   292                           	psect	bssBANK0
   293  002E                     __pbssBANK0:
   294  002E                     _Contador_Servo_3:
   295  002E                     	ds	2
   296  0030                     _Contador_Servo_2:
   297  0030                     	ds	2
   298  0032                     _Contador_Servo_1:
   299  0032                     	ds	2
   300  0034                     _ADRESH_Servo_3:
   301  0034                     	ds	1
   302  0035                     _ADRESH_Servo_2:
   303  0035                     	ds	1
   304  0036                     _ADRESH_Servo_1:
   305  0036                     	ds	1
   306                           
   307                           	psect	cstackCOMMON
   308  0070                     __pcstackCOMMON:
   309  0070                     ?_isr:
   310  0070                     ??_isr:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_main:	
   314                           ; 1 bytes @ 0x0
   315                           
   316                           
   317                           ; 1 bytes @ 0x0
   318  0070                     	ds	3
   319  0073                     ?___wmul:
   320  0073                     ___wmul@multiplier:	
   321                           ; 2 bytes @ 0x3
   322                           
   323                           
   324                           ; 2 bytes @ 0x3
   325  0073                     	ds	2
   326  0075                     ___wmul@multiplicand:
   327                           
   328                           ; 2 bytes @ 0x5
   329  0075                     	ds	2
   330  0077                     ??___wmul:
   331                           
   332                           	psect	cstackBANK0
   333  0020                     __pcstackBANK0:	
   334                           ; 1 bytes @ 0x7
   335                           
   336  0020                     ___wmul@product:
   337                           
   338                           ; 2 bytes @ 0x0
   339  0020                     	ds	2
   340  0022                     ?___awdiv:
   341  0022                     ___awdiv@divisor:	
   342                           ; 2 bytes @ 0x2
   343                           
   344                           
   345                           ; 2 bytes @ 0x2
   346  0022                     	ds	2
   347  0024                     ___awdiv@dividend:
   348                           
   349                           ; 2 bytes @ 0x4
   350  0024                     	ds	2
   351  0026                     ??___awdiv:
   352                           
   353                           ; 1 bytes @ 0x6
   354  0026                     	ds	1
   355  0027                     ___awdiv@counter:
   356                           
   357                           ; 1 bytes @ 0x7
   358  0027                     	ds	1
   359  0028                     ___awdiv@sign:
   360                           
   361                           ; 1 bytes @ 0x8
   362  0028                     	ds	1
   363  0029                     ___awdiv@quotient:
   364                           
   365                           ; 2 bytes @ 0x9
   366  0029                     	ds	2
   367  002B                     ??_main:
   368                           
   369                           ; 1 bytes @ 0xB
   370  002B                     	ds	3
   371                           
   372                           	psect	maintext
   373  0025                     __pmaintext:	
   374 ;;
   375 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   376 ;;
   377 ;; *************** function _main *****************
   378 ;; Defined at:
   379 ;;		line 108 in file "Servos.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, status,2, status,0, pclath, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : B00/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   393 ;;      Params:         0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0
   395 ;;      Temps:          0       3       0       0       0
   396 ;;      Totals:         0       3       0       0       0
   397 ;;Total ram usage:        3 bytes
   398 ;; Hardware stack levels required when called: 2
   399 ;; This function calls:
   400 ;;		___awdiv
   401 ;;		___wmul
   402 ;; This function is called by:
   403 ;;		Startup code after reset
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           
   408                           ;psect for function _main
   409  0025                     _main:
   410  0025                     l1033:	
   411                           ;incstack = 0
   412                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   413                           
   414                           
   415                           ;Servos.c: 110:     PORTD = 0;
   416  0025  1683               	bsf	3,5	;RP0=1, select bank1
   417  0026  1303               	bcf	3,6	;RP1=0, select bank1
   418  0027  160F               	bsf	15,4	;volatile
   419                           
   420                           ;Servos.c: 111:     PORTE = 0;
   421  0028  168F               	bsf	15,5	;volatile
   422                           
   423                           ;Servos.c: 112: 
   424  0029  170F               	bsf	15,6	;volatile
   425                           
   426                           ;Servos.c: 115:         Valor_Servo_1 = (ADRESH_Servo_1-0)*(199-98)/(255-0)+98;
   427  002A  1401               	bsf	1,0	;volatile
   428                           
   429                           ;Servos.c: 116:         Valor_Servo_2 = (ADRESH_Servo_2-0)*(199-98)/(255-0)+98;
   430  002B  1481               	bsf	1,1	;volatile
   431                           
   432                           ;Servos.c: 117:         Valor_Servo_3 = (ADRESH_Servo_3-0)*(199-98)/(255-0)+98;
   433  002C  1501               	bsf	1,2	;volatile
   434                           
   435                           ;Servos.c: 118:     }
   436  002D  1281               	bcf	1,5	;volatile
   437                           
   438                           ;Servos.c: 119: }
   439  002E  1181               	bcf	1,3	;volatile
   440  002F                     l1035:
   441  002F  30A8               	movlw	168
   442  0030  008B               	movwf	11	;volatile
   443  0031  087A               	movf	_Valor_TMR0,w
   444  0032  1283               	bcf	3,5	;RP0=0, select bank0
   445  0033  1303               	bcf	3,6	;RP1=0, select bank0
   446  0034  0081               	movwf	1	;volatile
   447  0035                     l1037:
   448  0035  1683               	bsf	3,5	;RP0=1, select bank1
   449  0036  1303               	bcf	3,6	;RP1=0, select bank1
   450  0037  170C               	bsf	12,6	;volatile
   451  0038                     l1039:
   452  0038  1283               	bcf	3,5	;RP0=0, select bank0
   453  0039  1303               	bcf	3,6	;RP1=0, select bank0
   454  003A  130C               	bcf	12,6	;volatile
   455  003B                     l1041:
   456  003B  1683               	bsf	3,5	;RP0=1, select bank1
   457  003C  1303               	bcf	3,6	;RP1=0, select bank1
   458  003D  139F               	bcf	31,7	;volatile
   459  003E                     l1043:
   460  003E  121F               	bcf	31,4	;volatile
   461  003F                     l1045:
   462  003F  121F               	bcf	31,4	;volatile
   463  0040                     l1047:
   464  0040  1283               	bcf	3,5	;RP0=0, select bank0
   465  0041  1303               	bcf	3,6	;RP1=0, select bank0
   466  0042  131F               	bcf	31,6	;volatile
   467  0043                     l1049:
   468  0043  179F               	bsf	31,7	;volatile
   469  0044                     l1051:
   470  0044  141F               	bsf	31,0	;volatile
   471  0045  3020               	movlw	32
   472  0046  1283               	bcf	3,5	;RP0=0, select bank0
   473  0047  1303               	bcf	3,6	;RP1=0, select bank0
   474  0048  00AB               	movwf	??_main
   475  0049                     u597:
   476  0049  0BAB               	decfsz	??_main,f
   477  004A  2849               	goto	u597
   478  004B  0000               	nop
   479  004C                     l1053:
   480  004C  1283               	bcf	3,5	;RP0=0, select bank0
   481  004D  1303               	bcf	3,6	;RP1=0, select bank0
   482  004E  149F               	bsf	31,1	;volatile
   483  004F  3007               	movlw	7
   484  0050  1683               	bsf	3,5	;RP0=1, select bank3
   485  0051  1703               	bsf	3,6	;RP1=1, select bank3
   486  0052  0088               	movwf	8	;volatile
   487  0053                     l1055:
   488  0053  0189               	clrf	9	;volatile
   489  0054                     l1057:
   490  0054  30FF               	movlw	255
   491  0055  1683               	bsf	3,5	;RP0=1, select bank1
   492  0056  1303               	bcf	3,6	;RP1=0, select bank1
   493  0057  0085               	movwf	5	;volatile
   494  0058  0187               	clrf	7	;volatile
   495  0059  0188               	clrf	8	;volatile
   496  005A  0189               	clrf	9	;volatile
   497  005B  1283               	bcf	3,5	;RP0=0, select bank0
   498  005C  1303               	bcf	3,6	;RP1=0, select bank0
   499  005D  0185               	clrf	5	;volatile
   500  005E  0186               	clrf	6	;volatile
   501  005F  0187               	clrf	7	;volatile
   502  0060  0188               	clrf	8	;volatile
   503  0061  0189               	clrf	9	;volatile
   504  0062                     l1059:
   505  0062  30FF               	movlw	255
   506  0063  00A2               	movwf	___awdiv@divisor
   507  0064  3000               	movlw	0
   508  0065  00A3               	movwf	___awdiv@divisor+1
   509  0066  0836               	movf	_ADRESH_Servo_1,w
   510  0067  00AB               	movwf	??_main
   511  0068  01AC               	clrf	??_main+1
   512  0069  082B               	movf	??_main,w
   513  006A  00F3               	movwf	___wmul@multiplier
   514  006B  082C               	movf	??_main+1,w
   515  006C  00F4               	movwf	___wmul@multiplier+1
   516  006D  3065               	movlw	101
   517  006E  00F5               	movwf	___wmul@multiplicand
   518  006F  3000               	movlw	0
   519  0070  00F6               	movwf	___wmul@multiplicand+1
   520  0071  120A  118A  21E6  120A  118A  	fcall	___wmul
   521  0076  0874               	movf	?___wmul+1,w
   522  0077  1283               	bcf	3,5	;RP0=0, select bank0
   523  0078  1303               	bcf	3,6	;RP1=0, select bank0
   524  0079  00A5               	movwf	___awdiv@dividend+1
   525  007A  0873               	movf	?___wmul,w
   526  007B  00A4               	movwf	___awdiv@dividend
   527  007C  120A  118A  217D  120A  118A  	fcall	___awdiv
   528  0081  1283               	bcf	3,5	;RP0=0, select bank0
   529  0082  1303               	bcf	3,6	;RP1=0, select bank0
   530  0083  0822               	movf	?___awdiv,w
   531  0084  3E62               	addlw	98
   532  0085  00AD               	movwf	??_main+2
   533  0086  082D               	movf	??_main+2,w
   534  0087  00F9               	movwf	_Valor_Servo_1
   535  0088                     l1061:
   536  0088  30FF               	movlw	255
   537  0089  00A2               	movwf	___awdiv@divisor
   538  008A  3000               	movlw	0
   539  008B  00A3               	movwf	___awdiv@divisor+1
   540  008C  0835               	movf	_ADRESH_Servo_2,w
   541  008D  00AB               	movwf	??_main
   542  008E  01AC               	clrf	??_main+1
   543  008F  082B               	movf	??_main,w
   544  0090  00F3               	movwf	___wmul@multiplier
   545  0091  082C               	movf	??_main+1,w
   546  0092  00F4               	movwf	___wmul@multiplier+1
   547  0093  3065               	movlw	101
   548  0094  00F5               	movwf	___wmul@multiplicand
   549  0095  3000               	movlw	0
   550  0096  00F6               	movwf	___wmul@multiplicand+1
   551  0097  120A  118A  21E6  120A  118A  	fcall	___wmul
   552  009C  0874               	movf	?___wmul+1,w
   553  009D  1283               	bcf	3,5	;RP0=0, select bank0
   554  009E  1303               	bcf	3,6	;RP1=0, select bank0
   555  009F  00A5               	movwf	___awdiv@dividend+1
   556  00A0  0873               	movf	?___wmul,w
   557  00A1  00A4               	movwf	___awdiv@dividend
   558  00A2  120A  118A  217D  120A  118A  	fcall	___awdiv
   559  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   560  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   561  00A9  0822               	movf	?___awdiv,w
   562  00AA  3E62               	addlw	98
   563  00AB  00AD               	movwf	??_main+2
   564  00AC  082D               	movf	??_main+2,w
   565  00AD  00F8               	movwf	_Valor_Servo_2
   566  00AE                     l1063:
   567  00AE  30FF               	movlw	255
   568  00AF  00A2               	movwf	___awdiv@divisor
   569  00B0  3000               	movlw	0
   570  00B1  00A3               	movwf	___awdiv@divisor+1
   571  00B2  0834               	movf	_ADRESH_Servo_3,w
   572  00B3  00AB               	movwf	??_main
   573  00B4  01AC               	clrf	??_main+1
   574  00B5  082B               	movf	??_main,w
   575  00B6  00F3               	movwf	___wmul@multiplier
   576  00B7  082C               	movf	??_main+1,w
   577  00B8  00F4               	movwf	___wmul@multiplier+1
   578  00B9  3065               	movlw	101
   579  00BA  00F5               	movwf	___wmul@multiplicand
   580  00BB  3000               	movlw	0
   581  00BC  00F6               	movwf	___wmul@multiplicand+1
   582  00BD  120A  118A  21E6  120A  118A  	fcall	___wmul
   583  00C2  0874               	movf	?___wmul+1,w
   584  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   585  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   586  00C5  00A5               	movwf	___awdiv@dividend+1
   587  00C6  0873               	movf	?___wmul,w
   588  00C7  00A4               	movwf	___awdiv@dividend
   589  00C8  120A  118A  217D  120A  118A  	fcall	___awdiv
   590  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   591  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   592  00CF  0822               	movf	?___awdiv,w
   593  00D0  3E62               	addlw	98
   594  00D1  00AD               	movwf	??_main+2
   595  00D2  082D               	movf	??_main+2,w
   596  00D3  00F7               	movwf	_Valor_Servo_3
   597  00D4  2862               	goto	l1059
   598  00D5  120A  118A  280C   	ljmp	start
   599  00D8                     __end_of_main:
   600                           
   601                           	psect	text1
   602  01E6                     __ptext1:	
   603 ;; *************** function ___wmul *****************
   604 ;; Defined at:
   605 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;  multiplier      2    3[COMMON] unsigned int 
   608 ;;  multiplicand    2    5[COMMON] unsigned int 
   609 ;; Auto vars:     Size  Location     Type
   610 ;;  product         2    0[BANK0 ] unsigned int 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  2    3[COMMON] unsigned int 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   620 ;;      Params:         4       0       0       0       0
   621 ;;      Locals:         0       2       0       0       0
   622 ;;      Temps:          0       0       0       0       0
   623 ;;      Totals:         4       2       0       0       0
   624 ;;Total ram usage:        6 bytes
   625 ;; Hardware stack levels used: 1
   626 ;; Hardware stack levels required when called: 1
   627 ;; This function calls:
   628 ;;		Nothing
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           
   635                           ;psect for function ___wmul
   636  01E6                     ___wmul:
   637  01E6                     l975:	
   638                           ;incstack = 0
   639                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   640                           
   641  01E6  1283               	bcf	3,5	;RP0=0, select bank0
   642  01E7  1303               	bcf	3,6	;RP1=0, select bank0
   643  01E8  01A0               	clrf	___wmul@product
   644  01E9  01A1               	clrf	___wmul@product+1
   645  01EA                     l977:
   646  01EA  1C73               	btfss	___wmul@multiplier,0
   647  01EB  29ED               	goto	u451
   648  01EC  29EE               	goto	u450
   649  01ED                     u451:
   650  01ED  29F6               	goto	l197
   651  01EE                     u450:
   652  01EE                     l979:
   653  01EE  0875               	movf	___wmul@multiplicand,w
   654  01EF  1283               	bcf	3,5	;RP0=0, select bank0
   655  01F0  1303               	bcf	3,6	;RP1=0, select bank0
   656  01F1  07A0               	addwf	___wmul@product,f
   657  01F2  1803               	skipnc
   658  01F3  0AA1               	incf	___wmul@product+1,f
   659  01F4  0876               	movf	___wmul@multiplicand+1,w
   660  01F5  07A1               	addwf	___wmul@product+1,f
   661  01F6                     l197:
   662  01F6  3001               	movlw	1
   663  01F7                     u465:
   664  01F7  1003               	clrc
   665  01F8  0DF5               	rlf	___wmul@multiplicand,f
   666  01F9  0DF6               	rlf	___wmul@multiplicand+1,f
   667  01FA  3EFF               	addlw	-1
   668  01FB  1D03               	skipz
   669  01FC  29F7               	goto	u465
   670  01FD                     l981:
   671  01FD  3001               	movlw	1
   672  01FE                     u475:
   673  01FE  1003               	clrc
   674  01FF  0CF4               	rrf	___wmul@multiplier+1,f
   675  0200  0CF3               	rrf	___wmul@multiplier,f
   676  0201  3EFF               	addlw	-1
   677  0202  1D03               	skipz
   678  0203  29FE               	goto	u475
   679  0204                     l983:
   680  0204  0873               	movf	___wmul@multiplier,w
   681  0205  0474               	iorwf	___wmul@multiplier+1,w
   682  0206  1D03               	btfss	3,2
   683  0207  2A09               	goto	u481
   684  0208  2A0A               	goto	u480
   685  0209                     u481:
   686  0209  29EA               	goto	l977
   687  020A                     u480:
   688  020A                     l985:
   689  020A  1283               	bcf	3,5	;RP0=0, select bank0
   690  020B  1303               	bcf	3,6	;RP1=0, select bank0
   691  020C  0821               	movf	___wmul@product+1,w
   692  020D  00F4               	movwf	?___wmul+1
   693  020E  0820               	movf	___wmul@product,w
   694  020F  00F3               	movwf	?___wmul
   695  0210                     l199:
   696  0210  0008               	return
   697  0211                     __end_of___wmul:
   698                           
   699                           	psect	text2
   700  017D                     __ptext2:	
   701 ;; *************** function ___awdiv *****************
   702 ;; Defined at:
   703 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;  divisor         2    2[BANK0 ] int 
   706 ;;  dividend        2    4[BANK0 ] int 
   707 ;; Auto vars:     Size  Location     Type
   708 ;;  quotient        2    9[BANK0 ] int 
   709 ;;  sign            1    8[BANK0 ] unsigned char 
   710 ;;  counter         1    7[BANK0 ] unsigned char 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  2    2[BANK0 ] int 
   713 ;; Registers used:
   714 ;;		wreg, status,2, status,0
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   720 ;;      Params:         0       4       0       0       0
   721 ;;      Locals:         0       4       0       0       0
   722 ;;      Temps:          0       1       0       0       0
   723 ;;      Totals:         0       9       0       0       0
   724 ;;Total ram usage:        9 bytes
   725 ;; Hardware stack levels used: 1
   726 ;; Hardware stack levels required when called: 1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function ___awdiv
   736  017D                     ___awdiv:
   737  017D                     l989:	
   738                           ;incstack = 0
   739                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   740                           
   741  017D  1283               	bcf	3,5	;RP0=0, select bank0
   742  017E  1303               	bcf	3,6	;RP1=0, select bank0
   743  017F  01A8               	clrf	___awdiv@sign
   744  0180                     l991:
   745  0180  1FA3               	btfss	___awdiv@divisor+1,7
   746  0181  2983               	goto	u491
   747  0182  2984               	goto	u490
   748  0183                     u491:
   749  0183  298B               	goto	l997
   750  0184                     u490:
   751  0184                     l993:
   752  0184  09A2               	comf	___awdiv@divisor,f
   753  0185  09A3               	comf	___awdiv@divisor+1,f
   754  0186  0AA2               	incf	___awdiv@divisor,f
   755  0187  1903               	skipnz
   756  0188  0AA3               	incf	___awdiv@divisor+1,f
   757  0189                     l995:
   758  0189  01A8               	clrf	___awdiv@sign
   759  018A  0AA8               	incf	___awdiv@sign,f
   760  018B                     l997:
   761  018B  1FA5               	btfss	___awdiv@dividend+1,7
   762  018C  298E               	goto	u501
   763  018D  298F               	goto	u500
   764  018E                     u501:
   765  018E  2998               	goto	l1003
   766  018F                     u500:
   767  018F                     l999:
   768  018F  09A4               	comf	___awdiv@dividend,f
   769  0190  09A5               	comf	___awdiv@dividend+1,f
   770  0191  0AA4               	incf	___awdiv@dividend,f
   771  0192  1903               	skipnz
   772  0193  0AA5               	incf	___awdiv@dividend+1,f
   773  0194                     l1001:
   774  0194  3001               	movlw	1
   775  0195  00A6               	movwf	??___awdiv
   776  0196  0826               	movf	??___awdiv,w
   777  0197  06A8               	xorwf	___awdiv@sign,f
   778  0198                     l1003:
   779  0198  01A9               	clrf	___awdiv@quotient
   780  0199  01AA               	clrf	___awdiv@quotient+1
   781  019A                     l1005:
   782  019A  0822               	movf	___awdiv@divisor,w
   783  019B  0423               	iorwf	___awdiv@divisor+1,w
   784  019C  1903               	btfsc	3,2
   785  019D  299F               	goto	u511
   786  019E  29A0               	goto	u510
   787  019F                     u511:
   788  019F  29D7               	goto	l1025
   789  01A0                     u510:
   790  01A0                     l1007:
   791  01A0  01A7               	clrf	___awdiv@counter
   792  01A1  0AA7               	incf	___awdiv@counter,f
   793  01A2  29AE               	goto	l1013
   794  01A3                     l1009:
   795  01A3  3001               	movlw	1
   796  01A4                     u525:
   797  01A4  1003               	clrc
   798  01A5  0DA2               	rlf	___awdiv@divisor,f
   799  01A6  0DA3               	rlf	___awdiv@divisor+1,f
   800  01A7  3EFF               	addlw	-1
   801  01A8  1D03               	skipz
   802  01A9  29A4               	goto	u525
   803  01AA                     l1011:
   804  01AA  3001               	movlw	1
   805  01AB  00A6               	movwf	??___awdiv
   806  01AC  0826               	movf	??___awdiv,w
   807  01AD  07A7               	addwf	___awdiv@counter,f
   808  01AE                     l1013:
   809  01AE  1FA3               	btfss	___awdiv@divisor+1,7
   810  01AF  29B1               	goto	u531
   811  01B0  29B2               	goto	u530
   812  01B1                     u531:
   813  01B1  29A3               	goto	l1009
   814  01B2                     u530:
   815  01B2                     l1015:
   816  01B2  3001               	movlw	1
   817  01B3                     u545:
   818  01B3  1003               	clrc
   819  01B4  0DA9               	rlf	___awdiv@quotient,f
   820  01B5  0DAA               	rlf	___awdiv@quotient+1,f
   821  01B6  3EFF               	addlw	-1
   822  01B7  1D03               	skipz
   823  01B8  29B3               	goto	u545
   824  01B9  0823               	movf	___awdiv@divisor+1,w
   825  01BA  0225               	subwf	___awdiv@dividend+1,w
   826  01BB  1D03               	skipz
   827  01BC  29BF               	goto	u555
   828  01BD  0822               	movf	___awdiv@divisor,w
   829  01BE  0224               	subwf	___awdiv@dividend,w
   830  01BF                     u555:
   831  01BF  1C03               	skipc
   832  01C0  29C2               	goto	u551
   833  01C1  29C3               	goto	u550
   834  01C2                     u551:
   835  01C2  29CA               	goto	l1021
   836  01C3                     u550:
   837  01C3                     l1017:
   838  01C3  0822               	movf	___awdiv@divisor,w
   839  01C4  02A4               	subwf	___awdiv@dividend,f
   840  01C5  0823               	movf	___awdiv@divisor+1,w
   841  01C6  1C03               	skipc
   842  01C7  03A5               	decf	___awdiv@dividend+1,f
   843  01C8  02A5               	subwf	___awdiv@dividend+1,f
   844  01C9                     l1019:
   845  01C9  1429               	bsf	___awdiv@quotient,0
   846  01CA                     l1021:
   847  01CA  3001               	movlw	1
   848  01CB                     u565:
   849  01CB  1003               	clrc
   850  01CC  0CA3               	rrf	___awdiv@divisor+1,f
   851  01CD  0CA2               	rrf	___awdiv@divisor,f
   852  01CE  3EFF               	addlw	-1
   853  01CF  1D03               	skipz
   854  01D0  29CB               	goto	u565
   855  01D1                     l1023:
   856  01D1  3001               	movlw	1
   857  01D2  02A7               	subwf	___awdiv@counter,f
   858  01D3  1D03               	btfss	3,2
   859  01D4  29D6               	goto	u571
   860  01D5  29D7               	goto	u570
   861  01D6                     u571:
   862  01D6  29B2               	goto	l1015
   863  01D7                     u570:
   864  01D7                     l1025:
   865  01D7  0828               	movf	___awdiv@sign,w
   866  01D8  1903               	btfsc	3,2
   867  01D9  29DB               	goto	u581
   868  01DA  29DC               	goto	u580
   869  01DB                     u581:
   870  01DB  29E1               	goto	l1029
   871  01DC                     u580:
   872  01DC                     l1027:
   873  01DC  09A9               	comf	___awdiv@quotient,f
   874  01DD  09AA               	comf	___awdiv@quotient+1,f
   875  01DE  0AA9               	incf	___awdiv@quotient,f
   876  01DF  1903               	skipnz
   877  01E0  0AAA               	incf	___awdiv@quotient+1,f
   878  01E1                     l1029:
   879  01E1  082A               	movf	___awdiv@quotient+1,w
   880  01E2  00A3               	movwf	?___awdiv+1
   881  01E3  0829               	movf	___awdiv@quotient,w
   882  01E4  00A2               	movwf	?___awdiv
   883  01E5                     l350:
   884  01E5  0008               	return
   885  01E6                     __end_of___awdiv:
   886                           
   887                           	psect	text3
   888  00D8                     __ptext3:	
   889 ;; *************** function _isr *****************
   890 ;; Defined at:
   891 ;;		line 58 in file "Servos.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0
   907 ;;      Temps:          3       0       0       0       0
   908 ;;      Totals:         3       0       0       0       0
   909 ;;Total ram usage:        3 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		Interrupt level 1
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           
   919                           ;psect for function _isr
   920  00D8                     _isr:
   921  00D8                     i1l897:
   922                           
   923                           ;Servos.c: 60:         RD1=0;
   924  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   925  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   926  00DA  1F0C               	btfss	12,6	;volatile
   927  00DB  28DD               	goto	u37_21
   928  00DC  28DE               	goto	u37_20
   929  00DD                     u37_21:
   930  00DD  2919               	goto	i1l923
   931  00DE                     u37_20:
   932  00DE                     i1l899:
   933                           
   934                           ;Servos.c: 61: 
   935  00DE  130C               	bcf	12,6	;volatile
   936  00DF                     i1l901:
   937                           
   938                           ;Servos.c: 62:         RD2 = 1;
   939  00DF  0C1F               	rrf	31,w	;volatile
   940  00E0  00F0               	movwf	??_isr
   941  00E1  0C70               	rrf	??_isr,w
   942  00E2  390F               	andlw	15
   943  00E3  3A00               	xorlw	0
   944  00E4  1D03               	skipz
   945  00E5  28E7               	goto	u38_21
   946  00E6  28E8               	goto	u38_20
   947  00E7                     u38_21:
   948  00E7  28F1               	goto	i1l907
   949  00E8                     u38_20:
   950  00E8                     i1l903:
   951                           
   952                           ;Servos.c: 63:         while (Contador_Servo_3 <= Valor_Servo_3){
   953  00E8  081E               	movf	30,w	;volatile
   954  00E9  00F0               	movwf	??_isr
   955  00EA  0870               	movf	??_isr,w
   956  00EB  00B6               	movwf	_ADRESH_Servo_1
   957  00EC                     i1l905:
   958                           
   959                           ;Servos.c: 64:             Contador_Servo_3++;
   960  00EC  081F               	movf	31,w	;volatile
   961  00ED  39C3               	andlw	-61
   962  00EE  3804               	iorlw	4
   963  00EF  009F               	movwf	31	;volatile
   964                           
   965                           ;Servos.c: 65:         }
   966  00F0  2912               	goto	i1l919
   967  00F1                     i1l907:
   968  00F1  0C1F               	rrf	31,w	;volatile
   969  00F2  00F0               	movwf	??_isr
   970  00F3  0C70               	rrf	??_isr,w
   971  00F4  390F               	andlw	15
   972  00F5  3A01               	xorlw	1
   973  00F6  1D03               	skipz
   974  00F7  28F9               	goto	u39_21
   975  00F8  28FA               	goto	u39_20
   976  00F9                     u39_21:
   977  00F9  2903               	goto	i1l913
   978  00FA                     u39_20:
   979  00FA                     i1l909:
   980                           
   981                           ;Servos.c: 66:         RD2=0;
   982  00FA  081E               	movf	30,w	;volatile
   983  00FB  00F0               	movwf	??_isr
   984  00FC  0870               	movf	??_isr,w
   985  00FD  00B5               	movwf	_ADRESH_Servo_2
   986  00FE                     i1l911:
   987                           
   988                           ;Servos.c: 67:         PIE1bits.ADIE = 1;
   989  00FE  081F               	movf	31,w	;volatile
   990  00FF  39C3               	andlw	-61
   991  0100  3808               	iorlw	8
   992  0101  009F               	movwf	31	;volatile
   993                           
   994                           ;Servos.c: 68:     }
   995  0102  2912               	goto	i1l919
   996  0103                     i1l913:
   997  0103  0C1F               	rrf	31,w	;volatile
   998  0104  00F0               	movwf	??_isr
   999  0105  0C70               	rrf	??_isr,w
  1000  0106  390F               	andlw	15
  1001  0107  3A02               	xorlw	2
  1002  0108  1D03               	skipz
  1003  0109  290B               	goto	u40_21
  1004  010A  290C               	goto	u40_20
  1005  010B                     u40_21:
  1006  010B  2912               	goto	i1l919
  1007  010C                     u40_20:
  1008  010C                     i1l915:
  1009                           
  1010                           ;Servos.c: 69: }
  1011  010C  081E               	movf	30,w	;volatile
  1012  010D  00F0               	movwf	??_isr
  1013  010E  0870               	movf	??_isr,w
  1014  010F  00B4               	movwf	_ADRESH_Servo_3
  1015  0110                     i1l917:
  1016                           
  1017                           ;Servos.c: 70: 
  1018  0110  30C3               	movlw	-61
  1019  0111  059F               	andwf	31,f	;volatile
  1020  0112                     i1l919:
  1021                           
  1022                           ;Servos.c: 72: 
  1023  0112  3021               	movlw	33
  1024  0113  00F0               	movwf	??_isr
  1025  0114                     u60_27:
  1026  0114  0BF0               	decfsz	??_isr,f
  1027  0115  2914               	goto	u60_27
  1028  0116                     i1l921:
  1029                           
  1030                           ;Servos.c: 73:     IRCF0 = 1;
  1031  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0118  149F               	bsf	31,1	;volatile
  1034  0119                     i1l923:
  1035                           
  1036                           ;Servos.c: 77: 
  1037  0119  1D0B               	btfss	11,2	;volatile
  1038  011A  291C               	goto	u41_21
  1039  011B  291D               	goto	u41_20
  1040  011C                     u41_21:
  1041  011C  2976               	goto	i1l103
  1042  011D                     u41_20:
  1043  011D                     i1l925:
  1044                           
  1045                           ;Servos.c: 79:     PS1 = 1;
  1046  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1047  011E  1303               	bcf	3,6	;RP1=0, select bank1
  1048  011F  130C               	bcf	12,6	;volatile
  1049                           
  1050                           ;Servos.c: 80:     PS2 = 1;
  1051  0120  110B               	bcf	11,2	;volatile
  1052  0121                     i1l927:
  1053                           
  1054                           ;Servos.c: 81:     T0CS = 0;
  1055  0121  087A               	movf	_Valor_TMR0,w
  1056  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0124  0081               	movwf	1	;volatile
  1059  0125                     i1l929:
  1060                           
  1061                           ;Servos.c: 83:     INTCON = 0b10101000;
  1062  0125  01B2               	clrf	_Contador_Servo_1
  1063  0126  01B3               	clrf	_Contador_Servo_1+1
  1064  0127                     i1l931:
  1065                           
  1066                           ;Servos.c: 84:     TMR0 = Valor_TMR0;
  1067  0127  01B0               	clrf	_Contador_Servo_2
  1068  0128  01B1               	clrf	_Contador_Servo_2+1
  1069  0129                     i1l933:
  1070                           
  1071                           ;Servos.c: 85: 
  1072  0129  01AE               	clrf	_Contador_Servo_3
  1073  012A  01AF               	clrf	_Contador_Servo_3+1
  1074  012B                     i1l935:
  1075                           
  1076                           ;Servos.c: 87:     PIE1bits.ADIE = 1;
  1077  012B  1408               	bsf	8,0	;volatile
  1078                           
  1079                           ;Servos.c: 88:     ADIF = 0;
  1080  012C  2935               	goto	i1l94
  1081  012D                     i1l937:
  1082                           
  1083                           ;Servos.c: 89:     ADCON1bits.ADFM = 0;
  1084  012D  3001               	movlw	1
  1085  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1086  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0130  07B2               	addwf	_Contador_Servo_1,f
  1088  0131  1803               	skipnc
  1089  0132  0AB3               	incf	_Contador_Servo_1+1,f
  1090  0133  3000               	movlw	0
  1091  0134  07B3               	addwf	_Contador_Servo_1+1,f
  1092  0135                     i1l94:	
  1093                           ;Servos.c: 90:     ADCON1bits.VCFG0 = 0;
  1094                           
  1095                           
  1096                           ;Servos.c: 88:     ADIF = 0;
  1097  0135  0833               	movf	_Contador_Servo_1+1,w
  1098  0136  3A80               	xorlw	128
  1099  0137  3C80               	sublw	128
  1100  0138  1D03               	skipz
  1101  0139  293C               	goto	u42_25
  1102  013A  0832               	movf	_Contador_Servo_1,w
  1103  013B  0279               	subwf	_Valor_Servo_1,w
  1104  013C                     u42_25:
  1105  013C  1803               	skipnc
  1106  013D  293F               	goto	u42_21
  1107  013E  2940               	goto	u42_20
  1108  013F                     u42_21:
  1109  013F  292D               	goto	i1l937
  1110  0140                     u42_20:
  1111  0140                     i1l96:
  1112                           
  1113                           ;Servos.c: 91:     ADCON1bits.VCFG0 = 0;
  1114  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0142  1008               	bcf	8,0	;volatile
  1117                           
  1118                           ;Servos.c: 93:     ADCON0bits.ADCS1 = 1;
  1119  0143  1488               	bsf	8,1	;volatile
  1120                           
  1121                           ;Servos.c: 94:     ADCON0bits.ADON = 1;
  1122  0144  294D               	goto	i1l97
  1123  0145                     i1l939:
  1124                           
  1125                           ;Servos.c: 95:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1126  0145  3001               	movlw	1
  1127  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1128  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1129  0148  07B0               	addwf	_Contador_Servo_2,f
  1130  0149  1803               	skipnc
  1131  014A  0AB1               	incf	_Contador_Servo_2+1,f
  1132  014B  3000               	movlw	0
  1133  014C  07B1               	addwf	_Contador_Servo_2+1,f
  1134  014D                     i1l97:	
  1135                           ;Servos.c: 96:     ADCON0bits.GO = 1;
  1136                           
  1137                           
  1138                           ;Servos.c: 94:     ADCON0bits.ADON = 1;
  1139  014D  0831               	movf	_Contador_Servo_2+1,w
  1140  014E  3A80               	xorlw	128
  1141  014F  3C80               	sublw	128
  1142  0150  1D03               	skipz
  1143  0151  2954               	goto	u43_25
  1144  0152  0830               	movf	_Contador_Servo_2,w
  1145  0153  0278               	subwf	_Valor_Servo_2,w
  1146  0154                     u43_25:
  1147  0154  1803               	skipnc
  1148  0155  2957               	goto	u43_21
  1149  0156  2958               	goto	u43_20
  1150  0157                     u43_21:
  1151  0157  2945               	goto	i1l939
  1152  0158                     u43_20:
  1153  0158                     i1l99:
  1154                           
  1155                           ;Servos.c: 97: 
  1156  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1158  015A  1088               	bcf	8,1	;volatile
  1159                           
  1160                           ;Servos.c: 99:     ANSEL = 0b00000111;
  1161  015B  1508               	bsf	8,2	;volatile
  1162                           
  1163                           ;Servos.c: 100:     ANSELH = 0;
  1164  015C  2965               	goto	i1l100
  1165  015D                     i1l941:
  1166                           
  1167                           ;Servos.c: 101:     TRISA = 0xff;
  1168  015D  3001               	movlw	1
  1169  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1170  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1171  0160  07AE               	addwf	_Contador_Servo_3,f
  1172  0161  1803               	skipnc
  1173  0162  0AAF               	incf	_Contador_Servo_3+1,f
  1174  0163  3000               	movlw	0
  1175  0164  07AF               	addwf	_Contador_Servo_3+1,f
  1176  0165                     i1l100:	
  1177                           ;Servos.c: 102:     TRISC = 0;
  1178                           
  1179                           
  1180                           ;Servos.c: 100:     ANSELH = 0;
  1181  0165  082F               	movf	_Contador_Servo_3+1,w
  1182  0166  3A80               	xorlw	128
  1183  0167  3C80               	sublw	128
  1184  0168  1D03               	skipz
  1185  0169  296C               	goto	u44_25
  1186  016A  082E               	movf	_Contador_Servo_3,w
  1187  016B  0277               	subwf	_Valor_Servo_3,w
  1188  016C                     u44_25:
  1189  016C  1803               	skipnc
  1190  016D  296F               	goto	u44_21
  1191  016E  2970               	goto	u44_20
  1192  016F                     u44_21:
  1193  016F  295D               	goto	i1l941
  1194  0170                     u44_20:
  1195  0170                     i1l102:
  1196                           
  1197                           ;Servos.c: 103:     TRISD = 0;
  1198  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0172  1108               	bcf	8,2	;volatile
  1201                           
  1202                           ;Servos.c: 104:     TRISE = 0;
  1203  0173  1683               	bsf	3,5	;RP0=1, select bank1
  1204  0174  1303               	bcf	3,6	;RP1=0, select bank1
  1205  0175  170C               	bsf	12,6	;volatile
  1206  0176                     i1l103:
  1207  0176  0872               	movf	??_isr+2,w
  1208  0177  008A               	movwf	10
  1209  0178  0E71               	swapf	??_isr+1,w
  1210  0179  0083               	movwf	3
  1211  017A  0EFE               	swapf	btemp,f
  1212  017B  0E7E               	swapf	btemp,w
  1213  017C  0009               	retfie
  1214  017D                     __end_of_isr:
  1215  007E                     btemp	set	126	;btemp
  1216  007E                     wtemp0	set	126
  1217                           
  1218                           	psect	intentry
  1219  0004                     __pintentry:	
  1220                           ;incstack = 0
  1221                           ; Regs used in _isr: [wreg+status,2+status,0]
  1222                           
  1223  0004                     interrupt_function:
  1224  007E                     saved_w	set	btemp
  1225  0004  00FE               	movwf	btemp
  1226  0005  0E03               	swapf	3,w
  1227  0006  00F1               	movwf	??_isr+1
  1228  0007  080A               	movf	10,w
  1229  0008  00F2               	movwf	??_isr+2
  1230  0009  120A  118A  28D8   	ljmp	_isr
  1231                           
  1232                           	psect	config
  1233                           
  1234                           ;Config register CONFIG1 @ 0x2007
  1235                           ;	Oscillator Selection bits
  1236                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1237                           ;	Watchdog Timer Enable bit
  1238                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1239                           ;	Power-up Timer Enable bit
  1240                           ;	PWRTE = OFF, PWRT disabled
  1241                           ;	RE3/MCLR pin function select bit
  1242                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1243                           ;	Code Protection bit
  1244                           ;	CP = OFF, Program memory code protection is disabled
  1245                           ;	Data Code Protection bit
  1246                           ;	CPD = OFF, Data memory code protection is disabled
  1247                           ;	Brown Out Reset Selection bits
  1248                           ;	BOREN = OFF, BOR disabled
  1249                           ;	Internal External Switchover bit
  1250                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1251                           ;	Fail-Safe Clock Monitor Enabled bit
  1252                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1253                           ;	Low Voltage Programming Enable bit
  1254                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1255                           ;	In-Circuit Debugger Mode bit
  1256                           ;	DEBUG = 0x1, unprogrammed default
  1257  2007                     	org	8199
  1258  2007  20D5               	dw	8405
  1259                           
  1260                           ;Config register CONFIG2 @ 0x2008
  1261                           ;	Brown-out Reset Selection bit
  1262                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1263                           ;	Flash Program Memory Self Write Enable bits
  1264                           ;	WRT = OFF, Write protection off
  1265  2008                     	org	8200
  1266  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     14      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1661
                                             11 BANK0      3     3      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     676
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     985
                                              2 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      E      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 21 15:44:47 2021

           ___awdiv@sign 0028      ___wmul@multiplicand 0075                      l350 01E5  
                    l197 01F6                      l199 0210                      l981 01FD  
                    l991 0180                      l983 0204                      l975 01E6  
                    l993 0184                      l985 020A                      l977 01EA  
                    l995 0189                      l979 01EE                      l997 018B  
                    l989 017D                      l999 018F                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      u500 018F  
                    u501 018E                      u510 01A0                      _PS0 0408  
                    u511 019F                      _PS1 0409                      _PS2 040A  
                    u530 01B2                      u450 01EE                      u531 01B1  
                    u451 01ED                      u525 01A4                      u550 01C3  
                    u551 01C2                      u480 020A                      u545 01B3  
                    u481 0209                      u465 01F7                      u570 01D7  
                    u490 0184                      u571 01D6                      u555 01BF  
                    u491 0183                      u475 01FE                      u580 01DC  
                    u581 01DB                      u565 01CB                      _PSA 040B  
                    u597 0049                      _isr 00D8                     l1001 0194  
                   l1011 01AA                     l1003 0198                     l1021 01CA  
                   l1013 01AE                     l1005 019A                     l1023 01D1  
                   l1015 01B2                     l1007 01A0                     l1017 01C3  
                   l1009 01A3                     l1025 01D7                     l1041 003B  
                   l1033 0025                     l1027 01DC                     l1019 01C9  
                   l1051 0044                     l1043 003E                     l1035 002F  
                   l1029 01E1                     l1061 0088                     l1053 004C  
                   l1045 003F                     l1037 0035                     l1063 00AE  
                   l1055 0053                     l1047 0040                     l1039 0038  
                   l1057 0054                     l1049 0043                     l1059 0062  
                   _ADIF 0066                     ?_isr 0070                     _T0IF 005A  
                   _T0CS 040D                     i1l94 0135                     i1l96 0140  
                   i1l97 014D                     i1l99 0158                     _TMR0 0001  
                   _main 0025                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 01E6  
                  _ANSEL 0188          ___awdiv@divisor 0022                    _IRCF0 047C  
                  _IRCF1 047D                    _IRCF2 047E                    i1l100 0165  
                  i1l102 0170                    i1l103 0176                    i1l901 00DF  
                  i1l911 00FE                    i1l903 00E8                    i1l921 0116  
                  i1l913 0103                    i1l905 00EC                    i1l931 0127  
                  i1l915 010C                    i1l907 00F1                    i1l923 0119  
                  i1l941 015D                    i1l933 0129                    i1l925 011D  
                  i1l917 0110                    i1l909 00FA                    i1l935 012B  
                  i1l927 0121                    i1l919 0112                    i1l937 012D  
                  i1l929 0125                    i1l939 0145                    i1l897 00D8  
                  i1l899 00DE          ___awdiv@counter 0027                    u40_20 010C  
                  u40_21 010B                    u41_20 011D                    u41_21 011C  
                  u42_20 0140                    u42_21 013F                    u42_25 013C  
                  u43_20 0158                    u43_21 0157                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u43_25 0154                    _PORTE 0009                    u44_20 0170  
                  u44_21 016F                    u44_25 016C                    u60_27 0114  
                  u37_20 00DE                    u37_21 00DD                    u38_20 00E8  
                  u38_21 00E7                    u39_20 00FA                    u39_21 00F9  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00D8  
                 ??_main 002B                   _ADRESH 001E         ___awdiv@dividend 0024  
                 _ANSELH 0189                   _INTCON 000B               _Valor_TMR0 007A  
                 ___wmul 01E6                ??___awdiv 0026         ___awdiv@quotient 0029  
           __pdataCOMMON 007A                   saved_w 007E  __end_of__initialization 0021  
         __pcstackCOMMON 0070               __pbssBANK0 002E               __pmaintext 0025  
                ?___wmul 0073               __pintentry 0004                  ___awdiv 017D  
        __size_of___wmul 002B                  __ptext1 01E6                  __ptext2 017D  
                __ptext3 00D8             __size_of_isr 00A5     end_of_initialization 0021  
         _ADRESH_Servo_1 0036           _ADRESH_Servo_2 0035           _ADRESH_Servo_3 0034  
         __end_of___wmul 0211            __pidataCOMMON 0211      start_initialization 000F  
            __end_of_isr 017D                 ??___wmul 0077            _Valor_Servo_1 0079  
          _Valor_Servo_2 0078            _Valor_Servo_3 0077              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0022  
      interrupt_function 0004           ___wmul@product 0020                 _PIE1bits 008C  
             _ADCON0bits 001F               _ADCON1bits 009F        ___wmul@multiplier 0073  
       __size_of___awdiv 0069         _Contador_Servo_1 0032         _Contador_Servo_2 0030  
       _Contador_Servo_3 002E            __size_of_main 00B3                 intlevel1 0000  
