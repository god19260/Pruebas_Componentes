

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 19 12:43:30 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205                           
   206                           	psect	idataCOMMON
   207  00BB                     __pidataCOMMON:
   208                           
   209                           ;initializer for _Valor_TMR0
   210  00BB  3464               	retlw	100
   211  0009                     _PORTE	set	9
   212  0008                     _PORTD	set	8
   213  0007                     _PORTC	set	7
   214  0006                     _PORTB	set	6
   215  0005                     _PORTA	set	5
   216  000B                     _INTCON	set	11
   217  0001                     _TMR0	set	1
   218  001F                     _ADCON0bits	set	31
   219  0047                     _RD7	set	71
   220  0041                     _RD1	set	65
   221  005A                     _T0IF	set	90
   222  0066                     _ADIF	set	102
   223  0089                     _TRISE	set	137
   224  0088                     _TRISD	set	136
   225  0087                     _TRISC	set	135
   226  0085                     _TRISA	set	133
   227  009F                     _ADCON1bits	set	159
   228  008C                     _PIE1bits	set	140
   229  040B                     _PSA	set	1035
   230  040D                     _T0CS	set	1037
   231  040A                     _PS2	set	1034
   232  0409                     _PS1	set	1033
   233  0408                     _PS0	set	1032
   234  047E                     _IRCF2	set	1150
   235  047D                     _IRCF1	set	1149
   236  047C                     _IRCF0	set	1148
   237  0189                     _ANSELH	set	393
   238  0188                     _ANSEL	set	392
   239                           
   240                           	psect	cinit
   241  000F                     start_initialization:	
   242                           ; #config settings
   243                           
   244  000F                     __initialization:
   245                           
   246                           ; Initialize objects allocated to COMMON
   247  000F  120A  118A  20BB  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   248  0014  00F7               	movwf	__pdataCOMMON& (0+127)
   249                           
   250                           ; Clear objects allocated to COMMON
   251  0015  01F4               	clrf	__pbssCOMMON& (0+127)
   252  0016  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   253  0017  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
   254  0018                     end_of_initialization:	
   255                           ;End of C runtime variable initialization code
   256                           
   257  0018                     __end_of__initialization:
   258  0018  0183               	clrf	3
   259  0019  120A  118A  2878   	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMMON
   262  0074                     __pbssCOMMON:
   263  0074                     _Contador_Servo_1:
   264  0074                     	ds	2
   265  0076                     _Valor_Servo_1:
   266  0076                     	ds	1
   267                           
   268                           	psect	dataCOMMON
   269  0077                     __pdataCOMMON:
   270  0077                     _Valor_TMR0:
   271  0077                     	ds	1
   272                           
   273                           	psect	cstackCOMMON
   274  0070                     __pcstackCOMMON:
   275  0070                     ?_isr:
   276  0070                     ??_isr:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_main:	
   280                           ; 1 bytes @ 0x0
   281                           
   282                           
   283                           ; 1 bytes @ 0x0
   284  0070                     	ds	3
   285  0073                     ??_main:
   286                           
   287                           ; 1 bytes @ 0x3
   288  0073                     	ds	1
   289                           
   290                           	psect	maintext
   291  0078                     __pmaintext:	
   292 ;;
   293 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   294 ;;
   295 ;; *************** function _main *****************
   296 ;; Defined at:
   297 ;;		line 85 in file "Servos.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, status,2
   306 ;; Tracked objects:
   307 ;;		On entry : B00/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   311 ;;      Params:         0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0
   313 ;;      Temps:          1       0       0       0       0
   314 ;;      Totals:         1       0       0       0       0
   315 ;;Total ram usage:        1 bytes
   316 ;; Hardware stack levels required when called: 1
   317 ;; This function calls:
   318 ;;		Nothing
   319 ;; This function is called by:
   320 ;;		Startup code after reset
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           
   325                           ;psect for function _main
   326  0078                     _main:
   327  0078                     l710:	
   328                           ;incstack = 0
   329                           ; Regs used in _main: [wreg+status,2]
   330                           
   331                           
   332                           ;Servos.c: 87:     PORTE = 0;
   333  0078  1683               	bsf	3,5	;RP0=1, select bank1
   334  0079  1303               	bcf	3,6	;RP1=0, select bank1
   335  007A  160F               	bsf	15,4	;volatile
   336                           
   337                           ;Servos.c: 88: 
   338  007B  168F               	bsf	15,5	;volatile
   339                           
   340                           ;Servos.c: 89: 
   341  007C  170F               	bsf	15,6	;volatile
   342                           
   343                           ;Servos.c: 92:         Valor_Servo_1 = 148;
   344  007D  1401               	bsf	1,0	;volatile
   345                           
   346                           ;Servos.c: 93:     }
   347  007E  1481               	bsf	1,1	;volatile
   348                           
   349                           ;Servos.c: 94: }
   350  007F  1501               	bsf	1,2	;volatile
   351  0080  1281               	bcf	1,5	;volatile
   352  0081  1181               	bcf	1,3	;volatile
   353  0082                     l712:
   354  0082  30A8               	movlw	168
   355  0083  008B               	movwf	11	;volatile
   356  0084  0877               	movf	_Valor_TMR0,w
   357  0085  1283               	bcf	3,5	;RP0=0, select bank0
   358  0086  1303               	bcf	3,6	;RP1=0, select bank0
   359  0087  0081               	movwf	1	;volatile
   360  0088                     l714:
   361  0088  1683               	bsf	3,5	;RP0=1, select bank1
   362  0089  1303               	bcf	3,6	;RP1=0, select bank1
   363  008A  170C               	bsf	12,6	;volatile
   364  008B                     l716:
   365  008B  1283               	bcf	3,5	;RP0=0, select bank0
   366  008C  1303               	bcf	3,6	;RP1=0, select bank0
   367  008D  130C               	bcf	12,6	;volatile
   368  008E                     l718:
   369  008E  1683               	bsf	3,5	;RP0=1, select bank1
   370  008F  1303               	bcf	3,6	;RP1=0, select bank1
   371  0090  139F               	bcf	31,7	;volatile
   372  0091                     l720:
   373  0091  121F               	bcf	31,4	;volatile
   374  0092                     l722:
   375  0092  121F               	bcf	31,4	;volatile
   376  0093                     l724:
   377  0093  1283               	bcf	3,5	;RP0=0, select bank0
   378  0094  1303               	bcf	3,6	;RP1=0, select bank0
   379  0095  131F               	bcf	31,6	;volatile
   380  0096                     l726:
   381  0096  179F               	bsf	31,7	;volatile
   382  0097                     l728:
   383  0097  141F               	bsf	31,0	;volatile
   384  0098  3021               	movlw	33
   385  0099  00F3               	movwf	??_main
   386  009A                     u77:
   387  009A  0BF3               	decfsz	??_main,f
   388  009B  289A               	goto	u77
   389  009C                     l730:
   390  009C  1283               	bcf	3,5	;RP0=0, select bank0
   391  009D  1303               	bcf	3,6	;RP1=0, select bank0
   392  009E  149F               	bsf	31,1	;volatile
   393  009F  3003               	movlw	3
   394  00A0  1683               	bsf	3,5	;RP0=1, select bank3
   395  00A1  1703               	bsf	3,6	;RP1=1, select bank3
   396  00A2  0088               	movwf	8	;volatile
   397  00A3                     l732:
   398  00A3  0189               	clrf	9	;volatile
   399  00A4                     l734:
   400  00A4  30FF               	movlw	255
   401  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   402  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   403  00A7  0085               	movwf	5	;volatile
   404  00A8  0187               	clrf	7	;volatile
   405  00A9  0188               	clrf	8	;volatile
   406  00AA  0189               	clrf	9	;volatile
   407  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   408  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   409  00AD  0185               	clrf	5	;volatile
   410  00AE  0186               	clrf	6	;volatile
   411  00AF  0187               	clrf	7	;volatile
   412  00B0  0188               	clrf	8	;volatile
   413  00B1  0189               	clrf	9	;volatile
   414  00B2                     l736:
   415  00B2  1088               	bcf	8,1	;volatile
   416  00B3                     l738:
   417  00B3  3094               	movlw	148
   418  00B4  00F3               	movwf	??_main
   419  00B5  0873               	movf	??_main,w
   420  00B6  00F6               	movwf	_Valor_Servo_1
   421  00B7  28B2               	goto	l736
   422  00B8  120A  118A  280C   	ljmp	start
   423  00BB                     __end_of_main:
   424                           
   425                           	psect	text1
   426  001C                     __ptext1:	
   427 ;; *************** function _isr *****************
   428 ;; Defined at:
   429 ;;		line 52 in file "Servos.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, status,2, status,0
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   443 ;;      Params:         0       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0
   445 ;;      Temps:          3       0       0       0       0
   446 ;;      Totals:         3       0       0       0       0
   447 ;;Total ram usage:        3 bytes
   448 ;; Hardware stack levels used: 1
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		Interrupt level 1
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           
   457                           ;psect for function _isr
   458  001C                     _isr:
   459  001C                     i1l678:
   460                           
   461                           ;Servos.c: 54:     PS0 = 1;
   462  001C  1283               	bcf	3,5	;RP0=0, select bank0
   463  001D  1303               	bcf	3,6	;RP1=0, select bank0
   464  001E  1F0C               	btfss	12,6	;volatile
   465  001F  2821               	goto	u1_21
   466  0020  2822               	goto	u1_20
   467  0021                     u1_21:
   468  0021  2843               	goto	i1l694
   469  0022                     u1_20:
   470  0022                     i1l680:
   471                           
   472                           ;Servos.c: 55:     PS1 = 1;
   473  0022  130C               	bcf	12,6	;volatile
   474  0023                     i1l682:
   475                           
   476                           ;Servos.c: 56:     PS2 = 1;
   477  0023  0C1F               	rrf	31,w	;volatile
   478  0024  00F0               	movwf	??_isr
   479  0025  0C70               	rrf	??_isr,w
   480  0026  390F               	andlw	15
   481  0027  3A00               	xorlw	0
   482  0028  1D03               	skipz
   483  0029  282B               	goto	u2_21
   484  002A  282C               	goto	u2_20
   485  002B                     u2_21:
   486  002B  2831               	goto	i1l686
   487  002C                     u2_20:
   488  002C                     i1l684:
   489                           
   490                           ;Servos.c: 57:     T0CS = 0;
   491  002C  081F               	movf	31,w	;volatile
   492  002D  39C3               	andlw	-61
   493  002E  3804               	iorlw	4
   494  002F  009F               	movwf	31	;volatile
   495                           
   496                           ;Servos.c: 58:     PSA = 0;
   497  0030  283C               	goto	i1l690
   498  0031                     i1l686:
   499  0031  0C1F               	rrf	31,w	;volatile
   500  0032  00F0               	movwf	??_isr
   501  0033  0C70               	rrf	??_isr,w
   502  0034  390F               	andlw	15
   503  0035  3A01               	xorlw	1
   504  0036  1D03               	skipz
   505  0037  2839               	goto	u3_21
   506  0038  283A               	goto	u3_20
   507  0039                     u3_21:
   508  0039  283C               	goto	i1l690
   509  003A                     u3_20:
   510  003A                     i1l688:
   511                           
   512                           ;Servos.c: 59:     INTCON = 0b10101000;
   513  003A  30C3               	movlw	-61
   514  003B  059F               	andwf	31,f	;volatile
   515  003C                     i1l690:
   516                           
   517                           ;Servos.c: 61: 
   518  003C  3021               	movlw	33
   519  003D  00F0               	movwf	??_isr
   520  003E                     u8_27:
   521  003E  0BF0               	decfsz	??_isr,f
   522  003F  283E               	goto	u8_27
   523  0040                     i1l692:
   524                           
   525                           ;Servos.c: 62: 
   526  0040  1283               	bcf	3,5	;RP0=0, select bank0
   527  0041  1303               	bcf	3,6	;RP1=0, select bank0
   528  0042  149F               	bsf	31,1	;volatile
   529  0043                     i1l694:
   530                           
   531                           ;Servos.c: 66:     ADCON1bits.VCFG0 = 0;
   532  0043  1D0B               	btfss	11,2	;volatile
   533  0044  2846               	goto	u4_21
   534  0045  2847               	goto	u4_20
   535  0046                     u4_21:
   536  0046  2871               	goto	i1l78
   537  0047                     u4_20:
   538  0047                     i1l696:
   539                           
   540                           ;Servos.c: 68:     ADCON0bits.ADCS0 = 0;
   541  0047  1683               	bsf	3,5	;RP0=1, select bank1
   542  0048  1303               	bcf	3,6	;RP1=0, select bank1
   543  0049  130C               	bcf	12,6	;volatile
   544                           
   545                           ;Servos.c: 69:     ADCON0bits.ADCS1 = 1;
   546  004A  110B               	bcf	11,2	;volatile
   547  004B                     i1l698:
   548                           
   549                           ;Servos.c: 70:     ADCON0bits.ADON = 1;
   550  004B  0877               	movf	_Valor_TMR0,w
   551  004C  1283               	bcf	3,5	;RP0=0, select bank0
   552  004D  1303               	bcf	3,6	;RP1=0, select bank0
   553  004E  0081               	movwf	1	;volatile
   554  004F                     i1l700:
   555                           
   556                           ;Servos.c: 72:     ADCON0bits.GO = 1;
   557  004F  30C8               	movlw	200
   558  0050  0676               	xorwf	_Valor_Servo_1,w
   559  0051  1D03               	btfss	3,2
   560  0052  2854               	goto	u5_21
   561  0053  2855               	goto	u5_20
   562  0054                     u5_21:
   563  0054  2856               	goto	i1l704
   564  0055                     u5_20:
   565  0055                     i1l702:
   566                           
   567                           ;Servos.c: 73: 
   568  0055  1488               	bsf	8,1	;volatile
   569  0056                     i1l704:
   570                           
   571                           ;Servos.c: 75:     ANSEL = 0b00000011;
   572  0056  01F4               	clrf	_Contador_Servo_1
   573  0057  01F5               	clrf	_Contador_Servo_1+1
   574  0058                     i1l706:
   575                           
   576                           ;Servos.c: 76:     ANSELH = 0;
   577  0058  1788               	bsf	8,7	;volatile
   578                           
   579                           ;Servos.c: 77:     TRISA = 0xff;
   580  0059  2860               	goto	i1l75
   581  005A                     i1l708:
   582                           
   583                           ;Servos.c: 78:     TRISC = 0;
   584  005A  3001               	movlw	1
   585  005B  07F4               	addwf	_Contador_Servo_1,f
   586  005C  1803               	skipnc
   587  005D  0AF5               	incf	_Contador_Servo_1+1,f
   588  005E  3000               	movlw	0
   589  005F  07F5               	addwf	_Contador_Servo_1+1,f
   590  0060                     i1l75:	
   591                           ;Servos.c: 79:     TRISD = 0;
   592                           
   593                           
   594                           ;Servos.c: 77:     TRISA = 0xff;
   595  0060  0875               	movf	_Contador_Servo_1+1,w
   596  0061  3A80               	xorlw	128
   597  0062  3C80               	sublw	128
   598  0063  1D03               	skipz
   599  0064  2867               	goto	u6_25
   600  0065  0874               	movf	_Contador_Servo_1,w
   601  0066  0276               	subwf	_Valor_Servo_1,w
   602  0067                     u6_25:
   603  0067  1803               	skipnc
   604  0068  286A               	goto	u6_21
   605  0069  286B               	goto	u6_20
   606  006A                     u6_21:
   607  006A  285A               	goto	i1l708
   608  006B                     u6_20:
   609  006B                     i1l77:
   610                           
   611                           ;Servos.c: 80:     TRISE = 0;
   612  006B  1283               	bcf	3,5	;RP0=0, select bank0
   613  006C  1303               	bcf	3,6	;RP1=0, select bank0
   614  006D  1388               	bcf	8,7	;volatile
   615                           
   616                           ;Servos.c: 81: 
   617  006E  1683               	bsf	3,5	;RP0=1, select bank1
   618  006F  1303               	bcf	3,6	;RP1=0, select bank1
   619  0070  170C               	bsf	12,6	;volatile
   620  0071                     i1l78:
   621  0071  0872               	movf	??_isr+2,w
   622  0072  008A               	movwf	10
   623  0073  0E71               	swapf	??_isr+1,w
   624  0074  0083               	movwf	3
   625  0075  0EFE               	swapf	btemp,f
   626  0076  0E7E               	swapf	btemp,w
   627  0077  0009               	retfie
   628  0078                     __end_of_isr:
   629  007E                     btemp	set	126	;btemp
   630  007E                     wtemp0	set	126
   631                           
   632                           	psect	intentry
   633  0004                     __pintentry:	
   634                           ;incstack = 0
   635                           ; Regs used in _isr: [wreg+status,2+status,0]
   636                           
   637  0004                     interrupt_function:
   638  007E                     saved_w	set	btemp
   639  0004  00FE               	movwf	btemp
   640  0005  0E03               	swapf	3,w
   641  0006  00F1               	movwf	??_isr+1
   642  0007  080A               	movf	10,w
   643  0008  00F2               	movwf	??_isr+2
   644  0009  120A  118A  281C   	ljmp	_isr
   645                           
   646                           	psect	config
   647                           
   648                           ;Config register CONFIG1 @ 0x2007
   649                           ;	Oscillator Selection bits
   650                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
   651                           ;	Watchdog Timer Enable bit
   652                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   653                           ;	Power-up Timer Enable bit
   654                           ;	PWRTE = OFF, PWRT disabled
   655                           ;	RE3/MCLR pin function select bit
   656                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   657                           ;	Code Protection bit
   658                           ;	CP = OFF, Program memory code protection is disabled
   659                           ;	Data Code Protection bit
   660                           ;	CPD = OFF, Data memory code protection is disabled
   661                           ;	Brown Out Reset Selection bits
   662                           ;	BOREN = OFF, BOR disabled
   663                           ;	Internal External Switchover bit
   664                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   665                           ;	Fail-Safe Clock Monitor Enabled bit
   666                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   667                           ;	Low Voltage Programming Enable bit
   668                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   669                           ;	In-Circuit Debugger Mode bit
   670                           ;	DEBUG = 0x1, unprogrammed default
   671  2007                     	org	8199
   672  2007  20D5               	dw	8405
   673                           
   674                           ;Config register CONFIG2 @ 0x2008
   675                           ;	Brown-out Reset Selection bit
   676                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   677                           ;	Flash Program Memory Self Write Enable bits
   678                           ;	WRT = OFF, Write protection off
   679  2008                     	org	8200
   680  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       8      12        0.0%
ABS                  0      0       8       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 19 12:43:30 2021

                     u77 009A                      l710 0078                      l720 0091  
                    l712 0082                      l730 009C                      l722 0092  
                    l714 0088                      l732 00A3                      l724 0093  
                    l716 008B                      l734 00A4                      l726 0096  
                    l718 008E                      l736 00B2                      l728 0097  
                    l738 00B3                      _RD1 0041                      _RD7 0047  
                    _PS0 0408                      _PS1 0409                      _PS2 040A  
                    _PSA 040B                      _isr 001C                     _ADIF 0066  
                   ?_isr 0070                     _T0IF 005A                     _T0CS 040D  
                   i1l75 0060                     i1l77 006B                     i1l78 0071  
                   _TMR0 0001                     u1_20 0022                     u1_21 0021  
                   u2_20 002C                     u2_21 002B                     u3_20 003A  
                   u3_21 0039                     u4_20 0047                     u4_21 0046  
                   u5_20 0055                     u5_21 0054                     u6_20 006B  
                   u6_21 006A                     u6_25 0067                     u8_27 003E  
                   _main 0078                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  _IRCF0 047C                    _IRCF1 047D                    _IRCF2 047E  
                  i1l700 004F                    i1l702 0055                    i1l704 0056  
                  i1l706 0058                    i1l708 005A                    i1l680 0022  
                  i1l690 003C                    i1l682 0023                    i1l692 0040  
                  i1l684 002C                    i1l686 0031                    i1l694 0043  
                  i1l678 001C                    i1l696 0047                    i1l688 003A  
                  i1l698 004B                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00BB  
                 ??_main 0073                   _ANSELH 0189                   _INTCON 000B  
             _Valor_TMR0 0077             __pdataCOMMON 0077                   saved_w 007E  
__end_of__initialization 0018           __pcstackCOMMON 0070               __pmaintext 0078  
             __pintentry 0004                  __ptext1 001C             __size_of_isr 005C  
   end_of_initialization 0018            __pidataCOMMON 00BB      start_initialization 000F  
            __end_of_isr 0078            _Valor_Servo_1 0076              __pbssCOMMON 0074  
              ___latbits 0002        interrupt_function 0004                 _PIE1bits 008C  
             _ADCON0bits 001F               _ADCON1bits 009F         _Contador_Servo_1 0074  
          __size_of_main 0043                 intlevel1 0000  
