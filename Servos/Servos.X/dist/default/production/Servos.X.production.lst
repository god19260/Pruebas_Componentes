

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 22 16:30:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	idataCOMMON
   211  020A                     __pidataCOMMON:
   212                           
   213                           ;initializer for _Valor_TMR0
   214  020A  3464               	retlw	100
   215  0009                     _PORTE	set	9
   216  0008                     _PORTD	set	8
   217  0007                     _PORTC	set	7
   218  0006                     _PORTB	set	6
   219  0005                     _PORTA	set	5
   220  000B                     _INTCON	set	11
   221  001E                     _ADRESH	set	30
   222  001F                     _ADCON0bits	set	31
   223  0001                     _TMR0	set	1
   224  0066                     _ADIF	set	102
   225  0042                     _RD2	set	66
   226  0041                     _RD1	set	65
   227  0040                     _RD0	set	64
   228  005A                     _T0IF	set	90
   229  0089                     _TRISE	set	137
   230  0088                     _TRISD	set	136
   231  0087                     _TRISC	set	135
   232  0085                     _TRISA	set	133
   233  009F                     _ADCON1bits	set	159
   234  008C                     _PIE1bits	set	140
   235  040B                     _PSA	set	1035
   236  040D                     _T0CS	set	1037
   237  040A                     _PS2	set	1034
   238  0409                     _PS1	set	1033
   239  0408                     _PS0	set	1032
   240  047E                     _IRCF2	set	1150
   241  047D                     _IRCF1	set	1149
   242  047C                     _IRCF0	set	1148
   243  0189                     _ANSELH	set	393
   244  0188                     _ANSEL	set	392
   245                           
   246                           	psect	cinit
   247  000F                     start_initialization:	
   248                           ; #config settings
   249                           
   250  000F                     __initialization:
   251                           
   252                           ; Initialize objects allocated to COMMON
   253  000F  120A  118A  220A  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   254  0014  00FA               	movwf	__pdataCOMMON& (0+127)
   255                           
   256                           ; Clear objects allocated to BANK0
   257  0015  01AE               	clrf	__pbssBANK0& (0+127)
   258  0016  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   259  0017  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   260  0018  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   261                           
   262                           ; Clear objects allocated to COMMON
   263  0019  01F7               	clrf	__pbssCOMMON& (0+127)
   264  001A  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   265  001B  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   266  001C                     end_of_initialization:	
   267                           ;End of C runtime variable initialization code
   268                           
   269  001C                     __end_of__initialization:
   270  001C  0183               	clrf	3
   271  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   272                           
   273                           	psect	bssCOMMON
   274  0077                     __pbssCOMMON:
   275  0077                     _Valor_Servo_2:
   276  0077                     	ds	1
   277  0078                     _Valor_Servo_1:
   278  0078                     	ds	1
   279  0079                     _Contador_Servos:
   280  0079                     	ds	1
   281                           
   282                           	psect	dataCOMMON
   283  007A                     __pdataCOMMON:
   284  007A                     _Valor_TMR0:
   285  007A                     	ds	1
   286                           
   287                           	psect	bssBANK0
   288  002E                     __pbssBANK0:
   289  002E                     _ADRESH_Servo_3:
   290  002E                     	ds	1
   291  002F                     _ADRESH_Servo_2:
   292  002F                     	ds	1
   293  0030                     _ADRESH_Servo_1:
   294  0030                     	ds	1
   295  0031                     _Valor_Servo_3:
   296  0031                     	ds	1
   297                           
   298                           	psect	cstackCOMMON
   299  0070                     __pcstackCOMMON:
   300  0070                     ?_isr:
   301  0070                     ??_isr:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_main:	
   305                           ; 1 bytes @ 0x0
   306                           
   307                           
   308                           ; 1 bytes @ 0x0
   309  0070                     	ds	3
   310  0073                     ?___wmul:
   311  0073                     ___wmul@multiplier:	
   312                           ; 2 bytes @ 0x3
   313                           
   314                           
   315                           ; 2 bytes @ 0x3
   316  0073                     	ds	2
   317  0075                     ___wmul@multiplicand:
   318                           
   319                           ; 2 bytes @ 0x5
   320  0075                     	ds	2
   321  0077                     ??___wmul:
   322                           
   323                           	psect	cstackBANK0
   324  0020                     __pcstackBANK0:	
   325                           ; 1 bytes @ 0x7
   326                           
   327  0020                     ___wmul@product:
   328                           
   329                           ; 2 bytes @ 0x0
   330  0020                     	ds	2
   331  0022                     ?___awdiv:
   332  0022                     ___awdiv@divisor:	
   333                           ; 2 bytes @ 0x2
   334                           
   335                           
   336                           ; 2 bytes @ 0x2
   337  0022                     	ds	2
   338  0024                     ___awdiv@dividend:
   339                           
   340                           ; 2 bytes @ 0x4
   341  0024                     	ds	2
   342  0026                     ??___awdiv:
   343                           
   344                           ; 1 bytes @ 0x6
   345  0026                     	ds	1
   346  0027                     ___awdiv@counter:
   347                           
   348                           ; 1 bytes @ 0x7
   349  0027                     	ds	1
   350  0028                     ___awdiv@sign:
   351                           
   352                           ; 1 bytes @ 0x8
   353  0028                     	ds	1
   354  0029                     ___awdiv@quotient:
   355                           
   356                           ; 2 bytes @ 0x9
   357  0029                     	ds	2
   358  002B                     ??_main:
   359                           
   360                           ; 1 bytes @ 0xB
   361  002B                     	ds	3
   362                           
   363                           	psect	maintext
   364  0020                     __pmaintext:	
   365 ;;
   366 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   367 ;;
   368 ;; *************** function _main *****************
   369 ;; Defined at:
   370 ;;		line 118 in file "Servos.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, status,2, status,0, pclath, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : B00/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   384 ;;      Params:         0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0
   386 ;;      Temps:          0       3       0       0       0
   387 ;;      Totals:         0       3       0       0       0
   388 ;;Total ram usage:        3 bytes
   389 ;; Hardware stack levels required when called: 2
   390 ;; This function calls:
   391 ;;		___awdiv
   392 ;;		___wmul
   393 ;; This function is called by:
   394 ;;		Startup code after reset
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           
   399                           ;psect for function _main
   400  0020                     _main:
   401  0020                     l1045:	
   402                           ;incstack = 0
   403                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   404                           
   405                           
   406                           ;Servos.c: 120:     PORTE = 0;
   407  0020  1683               	bsf	3,5	;RP0=1, select bank1
   408  0021  1303               	bcf	3,6	;RP1=0, select bank1
   409  0022  160F               	bsf	15,4	;volatile
   410                           
   411                           ;Servos.c: 121: 
   412  0023  168F               	bsf	15,5	;volatile
   413                           
   414                           ;Servos.c: 122: 
   415  0024  170F               	bsf	15,6	;volatile
   416                           
   417                           ;Servos.c: 125:         Valor_Servo_2 = (ADRESH_Servo_2-0)*(217-42)/(255-0)+42;
   418  0025  1401               	bsf	1,0	;volatile
   419                           
   420                           ;Servos.c: 126:         Valor_Servo_3 = (ADRESH_Servo_3-0)*(217-42)/(255-0)+42;
   421  0026  1481               	bsf	1,1	;volatile
   422                           
   423                           ;Servos.c: 127:     }
   424  0027  1501               	bsf	1,2	;volatile
   425                           
   426                           ;Servos.c: 128: }
   427  0028  1281               	bcf	1,5	;volatile
   428  0029  1181               	bcf	1,3	;volatile
   429  002A                     l1047:
   430  002A  30A8               	movlw	168
   431  002B  008B               	movwf	11	;volatile
   432  002C  087A               	movf	_Valor_TMR0,w
   433  002D  1283               	bcf	3,5	;RP0=0, select bank0
   434  002E  1303               	bcf	3,6	;RP1=0, select bank0
   435  002F  0081               	movwf	1	;volatile
   436  0030                     l1049:
   437  0030  1683               	bsf	3,5	;RP0=1, select bank1
   438  0031  1303               	bcf	3,6	;RP1=0, select bank1
   439  0032  170C               	bsf	12,6	;volatile
   440  0033                     l1051:
   441  0033  1283               	bcf	3,5	;RP0=0, select bank0
   442  0034  1303               	bcf	3,6	;RP1=0, select bank0
   443  0035  130C               	bcf	12,6	;volatile
   444  0036                     l1053:
   445  0036  1683               	bsf	3,5	;RP0=1, select bank1
   446  0037  1303               	bcf	3,6	;RP1=0, select bank1
   447  0038  139F               	bcf	31,7	;volatile
   448  0039                     l1055:
   449  0039  121F               	bcf	31,4	;volatile
   450  003A                     l1057:
   451  003A  121F               	bcf	31,4	;volatile
   452  003B                     l1059:
   453  003B  1283               	bcf	3,5	;RP0=0, select bank0
   454  003C  1303               	bcf	3,6	;RP1=0, select bank0
   455  003D  131F               	bcf	31,6	;volatile
   456  003E                     l1061:
   457  003E  179F               	bsf	31,7	;volatile
   458  003F                     l1063:
   459  003F  141F               	bsf	31,0	;volatile
   460  0040  3020               	movlw	32
   461  0041  1283               	bcf	3,5	;RP0=0, select bank0
   462  0042  1303               	bcf	3,6	;RP1=0, select bank0
   463  0043  00AB               	movwf	??_main
   464  0044                     u597:
   465  0044  0BAB               	decfsz	??_main,f
   466  0045  2844               	goto	u597
   467  0046  0000               	nop
   468  0047                     l1065:
   469  0047  1283               	bcf	3,5	;RP0=0, select bank0
   470  0048  1303               	bcf	3,6	;RP1=0, select bank0
   471  0049  149F               	bsf	31,1	;volatile
   472  004A  3007               	movlw	7
   473  004B  1683               	bsf	3,5	;RP0=1, select bank3
   474  004C  1703               	bsf	3,6	;RP1=1, select bank3
   475  004D  0088               	movwf	8	;volatile
   476  004E                     l1067:
   477  004E  0189               	clrf	9	;volatile
   478  004F                     l1069:
   479  004F  30FF               	movlw	255
   480  0050  1683               	bsf	3,5	;RP0=1, select bank1
   481  0051  1303               	bcf	3,6	;RP1=0, select bank1
   482  0052  0085               	movwf	5	;volatile
   483  0053  0187               	clrf	7	;volatile
   484  0054  0188               	clrf	8	;volatile
   485  0055  0189               	clrf	9	;volatile
   486  0056  1283               	bcf	3,5	;RP0=0, select bank0
   487  0057  1303               	bcf	3,6	;RP1=0, select bank0
   488  0058  0185               	clrf	5	;volatile
   489  0059  0186               	clrf	6	;volatile
   490  005A  0187               	clrf	7	;volatile
   491  005B  0188               	clrf	8	;volatile
   492  005C  0189               	clrf	9	;volatile
   493  005D                     l1071:
   494  005D  30FF               	movlw	255
   495  005E  00A2               	movwf	___awdiv@divisor
   496  005F  3000               	movlw	0
   497  0060  00A3               	movwf	___awdiv@divisor+1
   498  0061  0830               	movf	_ADRESH_Servo_1,w
   499  0062  00AB               	movwf	??_main
   500  0063  01AC               	clrf	??_main+1
   501  0064  082B               	movf	??_main,w
   502  0065  00F3               	movwf	___wmul@multiplier
   503  0066  082C               	movf	??_main+1,w
   504  0067  00F4               	movwf	___wmul@multiplier+1
   505  0068  30AF               	movlw	175
   506  0069  00F5               	movwf	___wmul@multiplicand
   507  006A  3000               	movlw	0
   508  006B  00F6               	movwf	___wmul@multiplicand+1
   509  006C  120A  118A  21DF  120A  118A  	fcall	___wmul
   510  0071  0874               	movf	?___wmul+1,w
   511  0072  1283               	bcf	3,5	;RP0=0, select bank0
   512  0073  1303               	bcf	3,6	;RP1=0, select bank0
   513  0074  00A5               	movwf	___awdiv@dividend+1
   514  0075  0873               	movf	?___wmul,w
   515  0076  00A4               	movwf	___awdiv@dividend
   516  0077  120A  118A  2176  120A  118A  	fcall	___awdiv
   517  007C  1283               	bcf	3,5	;RP0=0, select bank0
   518  007D  1303               	bcf	3,6	;RP1=0, select bank0
   519  007E  0822               	movf	?___awdiv,w
   520  007F  3E2A               	addlw	42
   521  0080  00AD               	movwf	??_main+2
   522  0081  082D               	movf	??_main+2,w
   523  0082  00F8               	movwf	_Valor_Servo_1
   524  0083                     l1073:
   525  0083  30FF               	movlw	255
   526  0084  00A2               	movwf	___awdiv@divisor
   527  0085  3000               	movlw	0
   528  0086  00A3               	movwf	___awdiv@divisor+1
   529  0087  082F               	movf	_ADRESH_Servo_2,w
   530  0088  00AB               	movwf	??_main
   531  0089  01AC               	clrf	??_main+1
   532  008A  082B               	movf	??_main,w
   533  008B  00F3               	movwf	___wmul@multiplier
   534  008C  082C               	movf	??_main+1,w
   535  008D  00F4               	movwf	___wmul@multiplier+1
   536  008E  30AF               	movlw	175
   537  008F  00F5               	movwf	___wmul@multiplicand
   538  0090  3000               	movlw	0
   539  0091  00F6               	movwf	___wmul@multiplicand+1
   540  0092  120A  118A  21DF  120A  118A  	fcall	___wmul
   541  0097  0874               	movf	?___wmul+1,w
   542  0098  1283               	bcf	3,5	;RP0=0, select bank0
   543  0099  1303               	bcf	3,6	;RP1=0, select bank0
   544  009A  00A5               	movwf	___awdiv@dividend+1
   545  009B  0873               	movf	?___wmul,w
   546  009C  00A4               	movwf	___awdiv@dividend
   547  009D  120A  118A  2176  120A  118A  	fcall	___awdiv
   548  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   549  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   550  00A4  0822               	movf	?___awdiv,w
   551  00A5  3E2A               	addlw	42
   552  00A6  00AD               	movwf	??_main+2
   553  00A7  082D               	movf	??_main+2,w
   554  00A8  00F7               	movwf	_Valor_Servo_2
   555  00A9                     l1075:
   556  00A9  30FF               	movlw	255
   557  00AA  00A2               	movwf	___awdiv@divisor
   558  00AB  3000               	movlw	0
   559  00AC  00A3               	movwf	___awdiv@divisor+1
   560  00AD  082E               	movf	_ADRESH_Servo_3,w
   561  00AE  00AB               	movwf	??_main
   562  00AF  01AC               	clrf	??_main+1
   563  00B0  082B               	movf	??_main,w
   564  00B1  00F3               	movwf	___wmul@multiplier
   565  00B2  082C               	movf	??_main+1,w
   566  00B3  00F4               	movwf	___wmul@multiplier+1
   567  00B4  30AF               	movlw	175
   568  00B5  00F5               	movwf	___wmul@multiplicand
   569  00B6  3000               	movlw	0
   570  00B7  00F6               	movwf	___wmul@multiplicand+1
   571  00B8  120A  118A  21DF  120A  118A  	fcall	___wmul
   572  00BD  0874               	movf	?___wmul+1,w
   573  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   574  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   575  00C0  00A5               	movwf	___awdiv@dividend+1
   576  00C1  0873               	movf	?___wmul,w
   577  00C2  00A4               	movwf	___awdiv@dividend
   578  00C3  120A  118A  2176  120A  118A  	fcall	___awdiv
   579  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   580  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   581  00CA  0822               	movf	?___awdiv,w
   582  00CB  3E2A               	addlw	42
   583  00CC  00AD               	movwf	??_main+2
   584  00CD  082D               	movf	??_main+2,w
   585  00CE  00B1               	movwf	_Valor_Servo_3
   586  00CF  285D               	goto	l1071
   587  00D0  120A  118A  280C   	ljmp	start
   588  00D3                     __end_of_main:
   589                           
   590                           	psect	text1
   591  01DF                     __ptext1:	
   592 ;; *************** function ___wmul *****************
   593 ;; Defined at:
   594 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  multiplier      2    3[COMMON] unsigned int 
   597 ;;  multiplicand    2    5[COMMON] unsigned int 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  product         2    0[BANK0 ] unsigned int 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  2    3[COMMON] unsigned int 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         4       0       0       0       0
   610 ;;      Locals:         0       2       0       0       0
   611 ;;      Temps:          0       0       0       0       0
   612 ;;      Totals:         4       2       0       0       0
   613 ;;Total ram usage:        6 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; Hardware stack levels required when called: 1
   616 ;; This function calls:
   617 ;;		Nothing
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function ___wmul
   625  01DF                     ___wmul:
   626  01DF                     l987:	
   627                           ;incstack = 0
   628                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   629                           
   630  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   631  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   632  01E1  01A0               	clrf	___wmul@product
   633  01E2  01A1               	clrf	___wmul@product+1
   634  01E3                     l989:
   635  01E3  1C73               	btfss	___wmul@multiplier,0
   636  01E4  29E6               	goto	u451
   637  01E5  29E7               	goto	u450
   638  01E6                     u451:
   639  01E6  29EF               	goto	l193
   640  01E7                     u450:
   641  01E7                     l991:
   642  01E7  0875               	movf	___wmul@multiplicand,w
   643  01E8  1283               	bcf	3,5	;RP0=0, select bank0
   644  01E9  1303               	bcf	3,6	;RP1=0, select bank0
   645  01EA  07A0               	addwf	___wmul@product,f
   646  01EB  1803               	skipnc
   647  01EC  0AA1               	incf	___wmul@product+1,f
   648  01ED  0876               	movf	___wmul@multiplicand+1,w
   649  01EE  07A1               	addwf	___wmul@product+1,f
   650  01EF                     l193:
   651  01EF  3001               	movlw	1
   652  01F0                     u465:
   653  01F0  1003               	clrc
   654  01F1  0DF5               	rlf	___wmul@multiplicand,f
   655  01F2  0DF6               	rlf	___wmul@multiplicand+1,f
   656  01F3  3EFF               	addlw	-1
   657  01F4  1D03               	skipz
   658  01F5  29F0               	goto	u465
   659  01F6                     l993:
   660  01F6  3001               	movlw	1
   661  01F7                     u475:
   662  01F7  1003               	clrc
   663  01F8  0CF4               	rrf	___wmul@multiplier+1,f
   664  01F9  0CF3               	rrf	___wmul@multiplier,f
   665  01FA  3EFF               	addlw	-1
   666  01FB  1D03               	skipz
   667  01FC  29F7               	goto	u475
   668  01FD                     l995:
   669  01FD  0873               	movf	___wmul@multiplier,w
   670  01FE  0474               	iorwf	___wmul@multiplier+1,w
   671  01FF  1D03               	btfss	3,2
   672  0200  2A02               	goto	u481
   673  0201  2A03               	goto	u480
   674  0202                     u481:
   675  0202  29E3               	goto	l989
   676  0203                     u480:
   677  0203                     l997:
   678  0203  1283               	bcf	3,5	;RP0=0, select bank0
   679  0204  1303               	bcf	3,6	;RP1=0, select bank0
   680  0205  0821               	movf	___wmul@product+1,w
   681  0206  00F4               	movwf	?___wmul+1
   682  0207  0820               	movf	___wmul@product,w
   683  0208  00F3               	movwf	?___wmul
   684  0209                     l195:
   685  0209  0008               	return
   686  020A                     __end_of___wmul:
   687                           
   688                           	psect	text2
   689  0176                     __ptext2:	
   690 ;; *************** function ___awdiv *****************
   691 ;; Defined at:
   692 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;  divisor         2    2[BANK0 ] int 
   695 ;;  dividend        2    4[BANK0 ] int 
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  quotient        2    9[BANK0 ] int 
   698 ;;  sign            1    8[BANK0 ] unsigned char 
   699 ;;  counter         1    7[BANK0 ] unsigned char 
   700 ;; Return value:  Size  Location     Type
   701 ;;                  2    2[BANK0 ] int 
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   709 ;;      Params:         0       4       0       0       0
   710 ;;      Locals:         0       4       0       0       0
   711 ;;      Temps:          0       1       0       0       0
   712 ;;      Totals:         0       9       0       0       0
   713 ;;Total ram usage:        9 bytes
   714 ;; Hardware stack levels used: 1
   715 ;; Hardware stack levels required when called: 1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           
   724                           ;psect for function ___awdiv
   725  0176                     ___awdiv:
   726  0176                     l1001:	
   727                           ;incstack = 0
   728                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   729                           
   730  0176  1283               	bcf	3,5	;RP0=0, select bank0
   731  0177  1303               	bcf	3,6	;RP1=0, select bank0
   732  0178  01A8               	clrf	___awdiv@sign
   733  0179                     l1003:
   734  0179  1FA3               	btfss	___awdiv@divisor+1,7
   735  017A  297C               	goto	u491
   736  017B  297D               	goto	u490
   737  017C                     u491:
   738  017C  2984               	goto	l1009
   739  017D                     u490:
   740  017D                     l1005:
   741  017D  09A2               	comf	___awdiv@divisor,f
   742  017E  09A3               	comf	___awdiv@divisor+1,f
   743  017F  0AA2               	incf	___awdiv@divisor,f
   744  0180  1903               	skipnz
   745  0181  0AA3               	incf	___awdiv@divisor+1,f
   746  0182                     l1007:
   747  0182  01A8               	clrf	___awdiv@sign
   748  0183  0AA8               	incf	___awdiv@sign,f
   749  0184                     l1009:
   750  0184  1FA5               	btfss	___awdiv@dividend+1,7
   751  0185  2987               	goto	u501
   752  0186  2988               	goto	u500
   753  0187                     u501:
   754  0187  2991               	goto	l1015
   755  0188                     u500:
   756  0188                     l1011:
   757  0188  09A4               	comf	___awdiv@dividend,f
   758  0189  09A5               	comf	___awdiv@dividend+1,f
   759  018A  0AA4               	incf	___awdiv@dividend,f
   760  018B  1903               	skipnz
   761  018C  0AA5               	incf	___awdiv@dividend+1,f
   762  018D                     l1013:
   763  018D  3001               	movlw	1
   764  018E  00A6               	movwf	??___awdiv
   765  018F  0826               	movf	??___awdiv,w
   766  0190  06A8               	xorwf	___awdiv@sign,f
   767  0191                     l1015:
   768  0191  01A9               	clrf	___awdiv@quotient
   769  0192  01AA               	clrf	___awdiv@quotient+1
   770  0193                     l1017:
   771  0193  0822               	movf	___awdiv@divisor,w
   772  0194  0423               	iorwf	___awdiv@divisor+1,w
   773  0195  1903               	btfsc	3,2
   774  0196  2998               	goto	u511
   775  0197  2999               	goto	u510
   776  0198                     u511:
   777  0198  29D0               	goto	l1037
   778  0199                     u510:
   779  0199                     l1019:
   780  0199  01A7               	clrf	___awdiv@counter
   781  019A  0AA7               	incf	___awdiv@counter,f
   782  019B  29A7               	goto	l1025
   783  019C                     l1021:
   784  019C  3001               	movlw	1
   785  019D                     u525:
   786  019D  1003               	clrc
   787  019E  0DA2               	rlf	___awdiv@divisor,f
   788  019F  0DA3               	rlf	___awdiv@divisor+1,f
   789  01A0  3EFF               	addlw	-1
   790  01A1  1D03               	skipz
   791  01A2  299D               	goto	u525
   792  01A3                     l1023:
   793  01A3  3001               	movlw	1
   794  01A4  00A6               	movwf	??___awdiv
   795  01A5  0826               	movf	??___awdiv,w
   796  01A6  07A7               	addwf	___awdiv@counter,f
   797  01A7                     l1025:
   798  01A7  1FA3               	btfss	___awdiv@divisor+1,7
   799  01A8  29AA               	goto	u531
   800  01A9  29AB               	goto	u530
   801  01AA                     u531:
   802  01AA  299C               	goto	l1021
   803  01AB                     u530:
   804  01AB                     l1027:
   805  01AB  3001               	movlw	1
   806  01AC                     u545:
   807  01AC  1003               	clrc
   808  01AD  0DA9               	rlf	___awdiv@quotient,f
   809  01AE  0DAA               	rlf	___awdiv@quotient+1,f
   810  01AF  3EFF               	addlw	-1
   811  01B0  1D03               	skipz
   812  01B1  29AC               	goto	u545
   813  01B2  0823               	movf	___awdiv@divisor+1,w
   814  01B3  0225               	subwf	___awdiv@dividend+1,w
   815  01B4  1D03               	skipz
   816  01B5  29B8               	goto	u555
   817  01B6  0822               	movf	___awdiv@divisor,w
   818  01B7  0224               	subwf	___awdiv@dividend,w
   819  01B8                     u555:
   820  01B8  1C03               	skipc
   821  01B9  29BB               	goto	u551
   822  01BA  29BC               	goto	u550
   823  01BB                     u551:
   824  01BB  29C3               	goto	l1033
   825  01BC                     u550:
   826  01BC                     l1029:
   827  01BC  0822               	movf	___awdiv@divisor,w
   828  01BD  02A4               	subwf	___awdiv@dividend,f
   829  01BE  0823               	movf	___awdiv@divisor+1,w
   830  01BF  1C03               	skipc
   831  01C0  03A5               	decf	___awdiv@dividend+1,f
   832  01C1  02A5               	subwf	___awdiv@dividend+1,f
   833  01C2                     l1031:
   834  01C2  1429               	bsf	___awdiv@quotient,0
   835  01C3                     l1033:
   836  01C3  3001               	movlw	1
   837  01C4                     u565:
   838  01C4  1003               	clrc
   839  01C5  0CA3               	rrf	___awdiv@divisor+1,f
   840  01C6  0CA2               	rrf	___awdiv@divisor,f
   841  01C7  3EFF               	addlw	-1
   842  01C8  1D03               	skipz
   843  01C9  29C4               	goto	u565
   844  01CA                     l1035:
   845  01CA  3001               	movlw	1
   846  01CB  02A7               	subwf	___awdiv@counter,f
   847  01CC  1D03               	btfss	3,2
   848  01CD  29CF               	goto	u571
   849  01CE  29D0               	goto	u570
   850  01CF                     u571:
   851  01CF  29AB               	goto	l1027
   852  01D0                     u570:
   853  01D0                     l1037:
   854  01D0  0828               	movf	___awdiv@sign,w
   855  01D1  1903               	btfsc	3,2
   856  01D2  29D4               	goto	u581
   857  01D3  29D5               	goto	u580
   858  01D4                     u581:
   859  01D4  29DA               	goto	l1041
   860  01D5                     u580:
   861  01D5                     l1039:
   862  01D5  09A9               	comf	___awdiv@quotient,f
   863  01D6  09AA               	comf	___awdiv@quotient+1,f
   864  01D7  0AA9               	incf	___awdiv@quotient,f
   865  01D8  1903               	skipnz
   866  01D9  0AAA               	incf	___awdiv@quotient+1,f
   867  01DA                     l1041:
   868  01DA  082A               	movf	___awdiv@quotient+1,w
   869  01DB  00A3               	movwf	?___awdiv+1
   870  01DC  0829               	movf	___awdiv@quotient,w
   871  01DD  00A2               	movwf	?___awdiv
   872  01DE                     l346:
   873  01DE  0008               	return
   874  01DF                     __end_of___awdiv:
   875                           
   876                           	psect	text3
   877  00D3                     __ptext3:	
   878 ;; *************** function _isr *****************
   879 ;; Defined at:
   880 ;;		line 57 in file "Servos.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, status,2, status,0
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0
   896 ;;      Temps:          3       0       0       0       0
   897 ;;      Totals:         3       0       0       0       0
   898 ;;Total ram usage:        3 bytes
   899 ;; Hardware stack levels used: 1
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		Interrupt level 1
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _isr
   909  00D3                     _isr:
   910  00D3                     i1l901:
   911                           
   912                           ;Servos.c: 59:     }
   913  00D3  1D0B               	btfss	11,2	;volatile
   914  00D4  28D6               	goto	u37_21
   915  00D5  28D7               	goto	u37_20
   916  00D6                     u37_21:
   917  00D6  292E               	goto	i1l83
   918  00D7                     u37_20:
   919  00D7                     i1l903:
   920                           
   921                           ;Servos.c: 61: 
   922  00D7  110B               	bcf	11,2	;volatile
   923  00D8                     i1l905:
   924                           
   925                           ;Servos.c: 62:     if (ADIF == 1){
   926  00D8  087A               	movf	_Valor_TMR0,w
   927  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   928  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   929  00DB  0081               	movwf	1	;volatile
   930  00DC                     i1l907:
   931                           
   932                           ;Servos.c: 64:         if (ADCON0bits.CHS == 0){
   933  00DC  01F9               	clrf	_Contador_Servos
   934  00DD                     i1l909:
   935                           
   936                           ;Servos.c: 66:             ADCON0bits.CHS = 1;
   937  00DD  1408               	bsf	8,0	;volatile
   938                           
   939                           ;Servos.c: 67:         } else if(ADCON0bits.CHS == 1){
   940  00DE  28EF               	goto	i1l913
   941  00DF                     i1l911:
   942                           
   943                           ;Servos.c: 68:             ADRESH_Servo_2 = ADRESH;
   944  00DF  3001               	movlw	1
   945  00E0  00F0               	movwf	??_isr
   946  00E1  0870               	movf	??_isr,w
   947  00E2  07F9               	addwf	_Contador_Servos,f
   948                           
   949                           ;Servos.c: 69:             ADCON0bits.CHS = 2;
   950  00E3  3001               	movlw	1
   951  00E4  00F0               	movwf	??_isr
   952  00E5  0870               	movf	??_isr,w
   953  00E6  07F9               	addwf	_Contador_Servos,f
   954                           
   955                           ;Servos.c: 70:         } else if(ADCON0bits.CHS == 2){
   956  00E7  3001               	movlw	1
   957  00E8  02F9               	subwf	_Contador_Servos,f
   958                           
   959                           ;Servos.c: 71:             ADRESH_Servo_3 = ADRESH;
   960  00E9  3001               	movlw	1
   961  00EA  00F0               	movwf	??_isr
   962  00EB  0870               	movf	??_isr,w
   963  00EC  07F9               	addwf	_Contador_Servos,f
   964                           
   965                           ;Servos.c: 72:             ADCON0bits.CHS = 0;
   966  00ED  3001               	movlw	1
   967  00EE  02F9               	subwf	_Contador_Servos,f
   968  00EF                     i1l913:
   969                           
   970                           ;Servos.c: 67:         } else if(ADCON0bits.CHS == 1){
   971  00EF  0879               	movf	_Contador_Servos,w
   972  00F0  0278               	subwf	_Valor_Servo_1,w
   973  00F1  1803               	skipnc
   974  00F2  28F4               	goto	u38_21
   975  00F3  28F5               	goto	u38_20
   976  00F4                     u38_21:
   977  00F4  28DF               	goto	i1l911
   978  00F5                     u38_20:
   979  00F5                     i1l86:
   980                           
   981                           ;Servos.c: 74:         _delay((unsigned long)((50)*(8000000/4000000.0)));
   982  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   983  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   984  00F7  1008               	bcf	8,0	;volatile
   985  00F8                     i1l915:
   986                           
   987                           ;Servos.c: 76:     }
   988  00F8  01F9               	clrf	_Contador_Servos
   989  00F9                     i1l917:
   990                           
   991                           ;Servos.c: 77: 
   992  00F9  1488               	bsf	8,1	;volatile
   993                           
   994                           ;Servos.c: 78: }
   995  00FA  290B               	goto	i1l921
   996  00FB                     i1l919:
   997                           
   998                           ;Servos.c: 79: 
   999  00FB  3001               	movlw	1
  1000  00FC  00F0               	movwf	??_isr
  1001  00FD  0870               	movf	??_isr,w
  1002  00FE  07F9               	addwf	_Contador_Servos,f
  1003                           
  1004                           ;Servos.c: 80: void main(void) {
  1005  00FF  3001               	movlw	1
  1006  0100  00F0               	movwf	??_isr
  1007  0101  0870               	movf	??_isr,w
  1008  0102  07F9               	addwf	_Contador_Servos,f
  1009                           
  1010                           ;Servos.c: 81: 
  1011  0103  3001               	movlw	1
  1012  0104  02F9               	subwf	_Contador_Servos,f
  1013                           
  1014                           ;Servos.c: 82:     IRCF0 = 1;
  1015  0105  3001               	movlw	1
  1016  0106  00F0               	movwf	??_isr
  1017  0107  0870               	movf	??_isr,w
  1018  0108  07F9               	addwf	_Contador_Servos,f
  1019                           
  1020                           ;Servos.c: 83:     IRCF1 = 1;
  1021  0109  3001               	movlw	1
  1022  010A  02F9               	subwf	_Contador_Servos,f
  1023  010B                     i1l921:
  1024                           
  1025                           ;Servos.c: 78: }
  1026  010B  0879               	movf	_Contador_Servos,w
  1027  010C  0277               	subwf	_Valor_Servo_2,w
  1028  010D  1803               	skipnc
  1029  010E  2910               	goto	u39_21
  1030  010F  2911               	goto	u39_20
  1031  0110                     u39_21:
  1032  0110  28FB               	goto	i1l919
  1033  0111                     u39_20:
  1034  0111                     i1l89:
  1035                           
  1036                           ;Servos.c: 85: 
  1037  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0113  1088               	bcf	8,1	;volatile
  1040  0114                     i1l923:
  1041                           
  1042                           ;Servos.c: 87:     PS0 = 1;
  1043  0114  01F9               	clrf	_Contador_Servos
  1044  0115                     i1l925:
  1045                           
  1046                           ;Servos.c: 88:     PS1 = 1;
  1047  0115  1508               	bsf	8,2	;volatile
  1048                           
  1049                           ;Servos.c: 89:     PS2 = 1;
  1050  0116  2927               	goto	i1l929
  1051  0117                     i1l927:
  1052                           
  1053                           ;Servos.c: 90:     T0CS = 0;
  1054  0117  3001               	movlw	1
  1055  0118  00F0               	movwf	??_isr
  1056  0119  0870               	movf	??_isr,w
  1057  011A  07F9               	addwf	_Contador_Servos,f
  1058                           
  1059                           ;Servos.c: 91:     PSA = 0;
  1060  011B  3001               	movlw	1
  1061  011C  00F0               	movwf	??_isr
  1062  011D  0870               	movf	??_isr,w
  1063  011E  07F9               	addwf	_Contador_Servos,f
  1064                           
  1065                           ;Servos.c: 92:     INTCON = 0b10101000;
  1066  011F  3001               	movlw	1
  1067  0120  02F9               	subwf	_Contador_Servos,f
  1068                           
  1069                           ;Servos.c: 93:     TMR0 = Valor_TMR0;
  1070  0121  3001               	movlw	1
  1071  0122  00F0               	movwf	??_isr
  1072  0123  0870               	movf	??_isr,w
  1073  0124  07F9               	addwf	_Contador_Servos,f
  1074                           
  1075                           ;Servos.c: 94: 
  1076  0125  3001               	movlw	1
  1077  0126  02F9               	subwf	_Contador_Servos,f
  1078  0127                     i1l929:
  1079                           
  1080                           ;Servos.c: 89:     PS2 = 1;
  1081  0127  0879               	movf	_Contador_Servos,w
  1082  0128  0231               	subwf	_Valor_Servo_3,w
  1083  0129  1803               	skipnc
  1084  012A  292C               	goto	u40_21
  1085  012B  292D               	goto	u40_20
  1086  012C                     u40_21:
  1087  012C  2917               	goto	i1l927
  1088  012D                     u40_20:
  1089  012D                     i1l92:
  1090                           
  1091                           ;Servos.c: 96:     PIE1bits.ADIE = 1;
  1092  012D  1108               	bcf	8,2	;volatile
  1093  012E                     i1l83:	
  1094                           ;Servos.c: 97:     ADIF = 0;
  1095                           
  1096                           
  1097                           ;Servos.c: 100:     ADCON1bits.VCFG0 = 0;
  1098  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1099  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0130  1F0C               	btfss	12,6	;volatile
  1101  0131  2933               	goto	u41_21
  1102  0132  2934               	goto	u41_20
  1103  0133                     u41_21:
  1104  0133  296F               	goto	i1l99
  1105  0134                     u41_20:
  1106  0134                     i1l931:
  1107                           
  1108                           ;Servos.c: 101:     ADCON0bits.ADCS0 = 0;
  1109  0134  130C               	bcf	12,6	;volatile
  1110  0135                     i1l933:
  1111                           
  1112                           ;Servos.c: 102:     ADCON0bits.ADCS1 = 1;
  1113  0135  0C1F               	rrf	31,w	;volatile
  1114  0136  00F0               	movwf	??_isr
  1115  0137  0C70               	rrf	??_isr,w
  1116  0138  390F               	andlw	15
  1117  0139  3A00               	xorlw	0
  1118  013A  1D03               	skipz
  1119  013B  293D               	goto	u42_21
  1120  013C  293E               	goto	u42_20
  1121  013D                     u42_21:
  1122  013D  2947               	goto	i1l939
  1123  013E                     u42_20:
  1124  013E                     i1l935:
  1125                           
  1126                           ;Servos.c: 103:     ADCON0bits.ADON = 1;
  1127  013E  081E               	movf	30,w	;volatile
  1128  013F  00F0               	movwf	??_isr
  1129  0140  0870               	movf	??_isr,w
  1130  0141  00B0               	movwf	_ADRESH_Servo_1
  1131  0142                     i1l937:
  1132                           
  1133                           ;Servos.c: 104:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1134  0142  081F               	movf	31,w	;volatile
  1135  0143  39C3               	andlw	-61
  1136  0144  3804               	iorlw	4
  1137  0145  009F               	movwf	31	;volatile
  1138                           
  1139                           ;Servos.c: 105:     ADCON0bits.GO = 1;
  1140  0146  2968               	goto	i1l951
  1141  0147                     i1l939:
  1142  0147  0C1F               	rrf	31,w	;volatile
  1143  0148  00F0               	movwf	??_isr
  1144  0149  0C70               	rrf	??_isr,w
  1145  014A  390F               	andlw	15
  1146  014B  3A01               	xorlw	1
  1147  014C  1D03               	skipz
  1148  014D  294F               	goto	u43_21
  1149  014E  2950               	goto	u43_20
  1150  014F                     u43_21:
  1151  014F  2959               	goto	i1l945
  1152  0150                     u43_20:
  1153  0150                     i1l941:
  1154                           
  1155                           ;Servos.c: 106: 
  1156  0150  081E               	movf	30,w	;volatile
  1157  0151  00F0               	movwf	??_isr
  1158  0152  0870               	movf	??_isr,w
  1159  0153  00AF               	movwf	_ADRESH_Servo_2
  1160  0154                     i1l943:
  1161                           
  1162                           ;Servos.c: 107: 
  1163  0154  081F               	movf	31,w	;volatile
  1164  0155  39C3               	andlw	-61
  1165  0156  3808               	iorlw	8
  1166  0157  009F               	movwf	31	;volatile
  1167                           
  1168                           ;Servos.c: 108:     ANSEL = 0b00000111;
  1169  0158  2968               	goto	i1l951
  1170  0159                     i1l945:
  1171  0159  0C1F               	rrf	31,w	;volatile
  1172  015A  00F0               	movwf	??_isr
  1173  015B  0C70               	rrf	??_isr,w
  1174  015C  390F               	andlw	15
  1175  015D  3A02               	xorlw	2
  1176  015E  1D03               	skipz
  1177  015F  2961               	goto	u44_21
  1178  0160  2962               	goto	u44_20
  1179  0161                     u44_21:
  1180  0161  2968               	goto	i1l951
  1181  0162                     u44_20:
  1182  0162                     i1l947:
  1183                           
  1184                           ;Servos.c: 109:     ANSELH = 0;
  1185  0162  081E               	movf	30,w	;volatile
  1186  0163  00F0               	movwf	??_isr
  1187  0164  0870               	movf	??_isr,w
  1188  0165  00AE               	movwf	_ADRESH_Servo_3
  1189  0166                     i1l949:
  1190                           
  1191                           ;Servos.c: 110:     TRISA = 0xff;
  1192  0166  30C3               	movlw	-61
  1193  0167  059F               	andwf	31,f	;volatile
  1194  0168                     i1l951:
  1195                           
  1196                           ;Servos.c: 112:     TRISD = 0;
  1197  0168  3021               	movlw	33
  1198  0169  00F0               	movwf	??_isr
  1199  016A                     u60_27:
  1200  016A  0BF0               	decfsz	??_isr,f
  1201  016B  296A               	goto	u60_27
  1202  016C                     i1l953:
  1203                           
  1204                           ;Servos.c: 113:     TRISE = 0;
  1205  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1206  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1207  016E  149F               	bsf	31,1	;volatile
  1208  016F                     i1l99:
  1209  016F  0872               	movf	??_isr+2,w
  1210  0170  008A               	movwf	10
  1211  0171  0E71               	swapf	??_isr+1,w
  1212  0172  0083               	movwf	3
  1213  0173  0EFE               	swapf	btemp,f
  1214  0174  0E7E               	swapf	btemp,w
  1215  0175  0009               	retfie
  1216  0176                     __end_of_isr:
  1217  007E                     btemp	set	126	;btemp
  1218  007E                     wtemp0	set	126
  1219                           
  1220                           	psect	intentry
  1221  0004                     __pintentry:	
  1222                           ;incstack = 0
  1223                           ; Regs used in _isr: [wreg+status,2+status,0]
  1224                           
  1225  0004                     interrupt_function:
  1226  007E                     saved_w	set	btemp
  1227  0004  00FE               	movwf	btemp
  1228  0005  0E03               	swapf	3,w
  1229  0006  00F1               	movwf	??_isr+1
  1230  0007  080A               	movf	10,w
  1231  0008  00F2               	movwf	??_isr+2
  1232  0009  120A  118A  28D3   	ljmp	_isr
  1233                           
  1234                           	psect	config
  1235                           
  1236                           ;Config register CONFIG1 @ 0x2007
  1237                           ;	Oscillator Selection bits
  1238                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1239                           ;	Watchdog Timer Enable bit
  1240                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1241                           ;	Power-up Timer Enable bit
  1242                           ;	PWRTE = OFF, PWRT disabled
  1243                           ;	RE3/MCLR pin function select bit
  1244                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1245                           ;	Code Protection bit
  1246                           ;	CP = OFF, Program memory code protection is disabled
  1247                           ;	Data Code Protection bit
  1248                           ;	CPD = OFF, Data memory code protection is disabled
  1249                           ;	Brown Out Reset Selection bits
  1250                           ;	BOREN = OFF, BOR disabled
  1251                           ;	Internal External Switchover bit
  1252                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1253                           ;	Fail-Safe Clock Monitor Enabled bit
  1254                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1255                           ;	Low Voltage Programming Enable bit
  1256                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1257                           ;	In-Circuit Debugger Mode bit
  1258                           ;	DEBUG = 0x1, unprogrammed default
  1259  2007                     	org	8199
  1260  2007  20D5               	dw	8405
  1261                           
  1262                           ;Config register CONFIG2 @ 0x2008
  1263                           ;	Brown-out Reset Selection bit
  1264                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1265                           ;	Flash Program Memory Self Write Enable bits
  1266                           ;	WRT = OFF, Write protection off
  1267  2008                     	org	8200
  1268  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     14      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1661
                                             11 BANK0      3     3      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     676
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     985
                                              2 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      E      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 22 16:30:00 2021

           ___awdiv@sign 0028      ___wmul@multiplicand 0075                      l193 01EF  
                    l346 01DE                      l195 0209                      l991 01E7  
                    l993 01F6                      l995 01FD                      l987 01DF  
                    l997 0203                      l989 01E3                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      u500 0188  
                    u501 0187                      u510 0199                      _PS0 0408  
                    u511 0198                      _PS1 0409                      _PS2 040A  
                    u530 01AB                      u450 01E7                      u531 01AA  
                    u451 01E6                      u525 019D                      u550 01BC  
                    u551 01BB                      u480 0203                      u545 01AC  
                    u481 0202                      u465 01F0                      u570 01D0  
                    u490 017D                      u571 01CF                      u555 01B8  
                    u491 017C                      u475 01F7                      u580 01D5  
                    u581 01D4                      u565 01C4                      _PSA 040B  
                    u597 0044                      _isr 00D3                     l1001 0176  
                   l1011 0188                     l1003 0179                     l1021 019C  
                   l1013 018D                     l1005 017D                     l1031 01C2  
                   l1023 01A3                     l1015 0191                     l1007 0182  
                   l1041 01DA                     l1033 01C3                     l1025 01A7  
                   l1017 0193                     l1009 0184                     l1035 01CA  
                   l1027 01AB                     l1019 0199                     l1051 0033  
                   l1029 01BC                     l1037 01D0                     l1061 003E  
                   l1053 0036                     l1045 0020                     l1039 01D5  
                   l1071 005D                     l1063 003F                     l1055 0039  
                   l1047 002A                     l1073 0083                     l1065 0047  
                   l1057 003A                     l1049 0030                     l1075 00A9  
                   l1067 004E                     l1059 003B                     l1069 004F  
                   _ADIF 0066                     ?_isr 0070                     _T0IF 005A  
                   _T0CS 040D                     i1l83 012E                     i1l92 012D  
                   i1l86 00F5                     i1l89 0111                     i1l99 016F  
                   _TMR0 0001                     _main 0020                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 01DF                    _ANSEL 0188          ___awdiv@divisor 0022  
                  _IRCF0 047C                    _IRCF1 047D                    _IRCF2 047E  
                  i1l901 00D3                    i1l911 00DF                    i1l903 00D7  
                  i1l921 010B                    i1l913 00EF                    i1l905 00D8  
                  i1l931 0134                    i1l923 0114                    i1l915 00F8  
                  i1l907 00DC                    i1l941 0150                    i1l933 0135  
                  i1l925 0115                    i1l917 00F9                    i1l909 00DD  
                  i1l943 0154                    i1l951 0168                    i1l935 013E  
                  i1l927 0117                    i1l919 00FB                    i1l953 016C  
                  i1l945 0159                    i1l937 0142                    i1l929 0127  
                  i1l947 0162                    i1l939 0147                    i1l949 0166  
        ___awdiv@counter 0027                    u40_20 012D                    u40_21 012C  
                  u41_20 0134                    u41_21 0133                    u42_20 013E  
                  u42_21 013D                    u43_20 0150                    u43_21 014F  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u44_20 0162  
                  u44_21 0161                    u60_27 016A                    u37_20 00D7  
                  u37_21 00D6                    u38_20 00F5                    u38_21 00F4  
                  u39_20 0111                    u39_21 0110                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00D3                   ??_main 002B  
                 _ADRESH 001E         ___awdiv@dividend 0024                   _ANSELH 0189  
                 _INTCON 000B               _Valor_TMR0 007A                   ___wmul 01DF  
              ??___awdiv 0026         ___awdiv@quotient 0029             __pdataCOMMON 007A  
                 saved_w 007E  __end_of__initialization 001C           __pcstackCOMMON 0070  
             __pbssBANK0 002E               __pmaintext 0020                  ?___wmul 0073  
             __pintentry 0004                  ___awdiv 0176          __size_of___wmul 002B  
        _Contador_Servos 0079                  __ptext1 01DF                  __ptext2 0176  
                __ptext3 00D3             __size_of_isr 00A3     end_of_initialization 001C  
         _ADRESH_Servo_1 0030           _ADRESH_Servo_2 002F           _ADRESH_Servo_3 002E  
         __end_of___wmul 020A            __pidataCOMMON 020A      start_initialization 000F  
            __end_of_isr 0176                 ??___wmul 0077            _Valor_Servo_1 0078  
          _Valor_Servo_2 0077            _Valor_Servo_3 0031              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0022  
      interrupt_function 0004           ___wmul@product 0020                 _PIE1bits 008C  
             _ADCON0bits 001F               _ADCON1bits 009F        ___wmul@multiplier 0073  
       __size_of___awdiv 0069            __size_of_main 00B3                 intlevel1 0000  
